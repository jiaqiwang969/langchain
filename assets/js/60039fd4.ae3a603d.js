"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[55823],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},46383:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const a={},i="Golden Query",s={unversionedId:"integrations/tools/golden_query",id:"integrations/tools/golden_query",title:"Golden Query",description:"Golden provides a set of natural language APIs for querying and enrichment using the Golden Knowledge Graph e.g. queries such as: Products from OpenAI, Generative ai companies with series a funding, and rappers who invest can be used to retrieve structured data about relevant entities.",source:"@site/docs/integrations/tools/golden_query.md",sourceDirName:"integrations/tools",slug:"/integrations/tools/golden_query",permalink:"/langchain/docs/integrations/tools/golden_query",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"File System",permalink:"/langchain/docs/integrations/tools/filesystem"},next:{title:"Google Drive",permalink:"/langchain/docs/integrations/tools/google_drive"}},l={},p=[],c=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var d;const u={toc:p},m="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"golden-query"},"Golden Query"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://golden.com"},"Golden")," provides a set of natural language APIs for querying and enrichment using the Golden Knowledge Graph e.g. queries such as: ",(0,o.kt)("inlineCode",{parentName:"p"},"Products from OpenAI"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Generative ai companies with series a funding"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"rappers who invest")," can be used to retrieve structured data about relevant entities."),(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"golden-query")," langchain tool is a wrapper on top of the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.golden.com/reference/query-api"},"Golden Query API")," which enables programmatic access to these results.\nSee the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.golden.com/reference/query-api"},"Golden Query API docs")," for more information.")),(0,o.kt)("p",null,"This notebook goes over how to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"golden-query")," tool."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Go to the ",(0,o.kt)("a",{parentName:"li",href:"https://docs.golden.com/"},"Golden API docs")," to get an overview about the Golden API."),(0,o.kt)("li",{parentName:"ul"},"Get your API key from the ",(0,o.kt)("a",{parentName:"li",href:"https://golden.com/settings/api"},"Golden API Settings")," page."),(0,o.kt)("li",{parentName:"ul"},"Save your API key into GOLDEN_API_KEY env variable")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nos.environ["GOLDEN_API_KEY"] = ""\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "GoldenQueryAPIWrapper", "source": "langchain.utilities.golden_query", "docs": "https://api.python.langchain.com/en/latest/utilities/langchain.utilities.golden_query.GoldenQueryAPIWrapper.html", "title": "Golden Query"}]--\x3e\nfrom langchain.utilities.golden_query import GoldenQueryAPIWrapper\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"golden_query = GoldenQueryAPIWrapper()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import json\n\njson.loads(golden_query.run("companies in nanotech"))\n')),(0,o.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    {'results': [{'id': 4673886,\n       'latestVersionId': 60276991,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Samsung', 'citations': []}]}]},\n      {'id': 7008,\n       'latestVersionId': 61087416,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Intel', 'citations': []}]}]},\n      {'id': 24193,\n       'latestVersionId': 60274482,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Texas Instruments', 'citations': []}]}]},\n      {'id': 1142,\n       'latestVersionId': 61406205,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Advanced Micro Devices', 'citations': []}]}]},\n      {'id': 193948,\n       'latestVersionId': 58326582,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Freescale Semiconductor', 'citations': []}]}]},\n      {'id': 91316,\n       'latestVersionId': 60387380,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Agilent Technologies', 'citations': []}]}]},\n      {'id': 90014,\n       'latestVersionId': 60388078,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Novartis', 'citations': []}]}]},\n      {'id': 237458,\n       'latestVersionId': 61406160,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'Analog Devices', 'citations': []}]}]},\n      {'id': 3941943,\n       'latestVersionId': 60382250,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'AbbVie Inc.', 'citations': []}]}]},\n      {'id': 4178762,\n       'latestVersionId': 60542667,\n       'properties': [{'predicateId': 'name',\n         'instances': [{'value': 'IBM', 'citations': []}]}]}],\n     'next': 'https://golden.com/api/v2/public/queries/59044/results/?cursor=eyJwb3NpdGlvbiI6IFsxNzYxNiwgIklCTS04M1lQM1oiXX0%3D&pageSize=10',\n     'previous': None}\n"))))}g.isMDXComponent=!0}}]);