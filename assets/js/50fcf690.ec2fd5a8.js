"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[61672],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(h,s(s({ref:t},d),{},{components:n})):a.createElement(h,s({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},74802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const r={},s="Supabase (Postgres)",i={unversionedId:"integrations/vectorstores/supabase",id:"integrations/vectorstores/supabase",title:"Supabase (Postgres)",description:"Supabase is an open source Firebase alternative. Supabase is built on top of PostgreSQL, which offers strong SQL querying capabilities and enables a simple interface with already-existing tools and frameworks.",source:"@site/docs/integrations/vectorstores/supabase.md",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/supabase",permalink:"/langchain/docs/integrations/vectorstores/supabase",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"StarRocks",permalink:"/langchain/docs/integrations/vectorstores/starrocks"},next:{title:"Tair",permalink:"/langchain/docs/integrations/vectorstores/tair"}},l={},c=[{value:"Similarity search with score",id:"similarity-search-with-score",level:2},{value:"Retriever options",id:"retriever-options",level:2},{value:"Maximal Marginal Relevance Searches",id:"maximal-marginal-relevance-searches",level:3}],d=(p="CodeOutputBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var p;const u={toc:c},m="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"supabase-postgres"},"Supabase (Postgres)"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://supabase.com/docs"},"Supabase")," is an open source Firebase alternative. ",(0,o.kt)("inlineCode",{parentName:"p"},"Supabase")," is built on top of ",(0,o.kt)("inlineCode",{parentName:"p"},"PostgreSQL"),", which offers strong SQL querying capabilities and enables a simple interface with already-existing tools and frameworks.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/PostgreSQL"},"PostgreSQL")," also known as ",(0,o.kt)("inlineCode",{parentName:"p"},"Postgres"),", is a free and open-source relational database management system (RDBMS) emphasizing extensibility and SQL compliance.")),(0,o.kt)("p",null,"This notebook shows how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"Supabase")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"pgvector")," as your VectorStore."),(0,o.kt)("p",null,"To run this notebook, please ensure:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"pgvector")," extension is enabled"),(0,o.kt)("li",{parentName:"ul"},"you have installed the ",(0,o.kt)("inlineCode",{parentName:"li"},"supabase-py")," package"),(0,o.kt)("li",{parentName:"ul"},"that you have created a ",(0,o.kt)("inlineCode",{parentName:"li"},"match_documents")," function in your database"),(0,o.kt)("li",{parentName:"ul"},"that you have a ",(0,o.kt)("inlineCode",{parentName:"li"},"documents")," table in your ",(0,o.kt)("inlineCode",{parentName:"li"},"public")," schema similar to the one below.")),(0,o.kt)("p",null,"The following function determines cosine similarity, but you can adjust to your needs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"       -- Enable the pgvector extension to work with embedding vectors\n       create extension vector;\n\n       -- Create a table to store your documents\n       create table documents (\n       id uuid primary key,\n       content text, -- corresponds to Document.pageContent\n       metadata jsonb, -- corresponds to Document.metadata\n       embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n       );\n\n       CREATE FUNCTION match_documents(query_embedding vector(1536), match_count int)\n           RETURNS TABLE(\n               id uuid,\n               content text,\n               metadata jsonb,\n               -- we return matched vectors to enable maximal marginal relevance searches\n               embedding vector(1536),\n               similarity float)\n           LANGUAGE plpgsql\n           AS $$\n           # variable_conflict use_column\n       BEGIN\n           RETURN query\n           SELECT\n               id,\n               content,\n               metadata,\n               embedding,\n               1 -(documents.embedding <=> query_embedding) AS similarity\n           FROM\n               documents\n           ORDER BY\n               documents.embedding <=> query_embedding\n           LIMIT match_count;\n       END;\n       $$;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# with pip\npip install supabase\n\n# with conda\n# !conda install -c conda-forge supabase\n")),(0,o.kt)("p",null,"We want to use ",(0,o.kt)("inlineCode",{parentName:"p"},"OpenAIEmbeddings")," so we have to get the OpenAI API Key."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\nimport getpass\n\nos.environ["OPENAI_API_KEY"] = getpass.getpass("OpenAI API Key:")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'os.environ["SUPABASE_URL"] = getpass.getpass("Supabase URL:")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'os.environ["SUPABASE_SERVICE_KEY"] = getpass.getpass("Supabase Service Key:")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# If you're storing your Supabase and OpenAI API keys in a .env file, you can load them with dotenv\nfrom dotenv import load_dotenv\n\nload_dotenv()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\nfrom supabase.client import Client, create_client\n\nsupabase_url = os.environ.get("SUPABASE_URL")\nsupabase_key = os.environ.get("SUPABASE_SERVICE_KEY")\nsupabase: Client = create_client(supabase_url, supabase_key)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "OpenAIEmbeddings", "source": "langchain.embeddings.openai", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.openai.OpenAIEmbeddings.html", "title": "Supabase (Postgres)"}, {"imported": "CharacterTextSplitter", "source": "langchain.text_splitter", "docs": "https://api.python.langchain.com/en/latest/text_splitter/langchain.text_splitter.CharacterTextSplitter.html", "title": "Supabase (Postgres)"}, {"imported": "SupabaseVectorStore", "source": "langchain.vectorstores", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.supabase.SupabaseVectorStore.html", "title": "Supabase (Postgres)"}, {"imported": "TextLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.text.TextLoader.html", "title": "Supabase (Postgres)"}]--\x3e\nfrom langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import SupabaseVectorStore\nfrom langchain.document_loaders import TextLoader\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "TextLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.text.TextLoader.html", "title": "Supabase (Postgres)"}]--\x3e\nfrom langchain.document_loaders import TextLoader\n\nloader = TextLoader("../../../state_of_the_union.txt")\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# We're using the default `documents` table here. You can modify this by passing in a `table_name` argument to the `from_documents` method.\nvector_store = SupabaseVectorStore.from_documents(docs, embeddings, client=supabase)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'query = "What did the president say about Ketanji Brown Jackson"\nmatched_docs = vector_store.similarity_search(query)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"print(matched_docs[0].page_content)\n")),(0,o.kt)(d,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.\n"))),(0,o.kt)("h2",{id:"similarity-search-with-score"},"Similarity search with score"),(0,o.kt)("p",null,"The returned distance score is cosine distance. Therefore, a lower score is better."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"matched_docs = vector_store.similarity_search_with_relevance_scores(query)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"matched_docs[0]\n")),(0,o.kt)(d,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    (Document(page_content='Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.', metadata={'source': '../../../state_of_the_union.txt'}),\n     0.802509746274066)\n"))),(0,o.kt)("h2",{id:"retriever-options"},"Retriever options"),(0,o.kt)("p",null,"This section goes over different options for how to use SupabaseVectorStore as a retriever."),(0,o.kt)("h3",{id:"maximal-marginal-relevance-searches"},"Maximal Marginal Relevance Searches"),(0,o.kt)("p",null,"In addition to using similarity search in the retriever object, you can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"mmr"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'retriever = vector_store.as_retriever(search_type="mmr")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"matched_docs = retriever.get_relevant_documents(query)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'for i, d in enumerate(matched_docs):\n    print(f"\\n## Document {i}\\n")\n    print(d.page_content)\n')),(0,o.kt)(d,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    ## Document 0\n    \n    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.\n    \n    ## Document 1\n    \n    One was stationed at bases and breathing in toxic smoke from \u201cburn pits\u201d that incinerated wastes of war\u2014medical and hazard material, jet fuel, and more. \n    \n    When they came home, many of the world\u2019s fittest and best trained warriors were never the same. \n    \n    Headaches. Numbness. Dizziness. \n    \n    A cancer that would put them in a flag-draped coffin. \n    \n    I know. \n    \n    One of those soldiers was my son Major Beau Biden. \n    \n    We don\u2019t know for sure if a burn pit was the cause of his brain cancer, or the diseases of so many of our troops. \n    \n    But I\u2019m committed to finding out everything we can. \n    \n    Committed to military families like Danielle Robinson from Ohio. \n    \n    The widow of Sergeant First Class Heath Robinson.  \n    \n    He was born a soldier. Army National Guard. Combat medic in Kosovo and Iraq. \n    \n    Stationed near Baghdad, just yards from burn pits the size of football fields. \n    \n    Heath\u2019s widow Danielle is here with us tonight. They loved going to Ohio State football games. He loved building Legos with their daughter.\n    \n    ## Document 2\n    \n    And I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \n    \n    Tonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \n    \n    America will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \n    \n    These steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \n    \n    But I want you to know that we are going to be okay. \n    \n    When the history of this era is written Putin\u2019s war on Ukraine will have left Russia weaker and the rest of the world stronger. \n    \n    While it shouldn\u2019t have taken something so terrible for people around the world to see what\u2019s at stake now everyone sees it clearly.\n    \n    ## Document 3\n    \n    We can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \n    \n    I recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \n    \n    They were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \n    \n    Officer Mora was 27 years old. \n    \n    Officer Rivera was 22. \n    \n    Both Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \n    \n    I spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves. \n    \n    I\u2019ve worked on these issues a long time. \n    \n    I know what works: Investing in crime preventionand community police officers who\u2019ll walk the beat, who\u2019ll know the neighborhood, and who can restore trust and safety.\n"))))}h.isMDXComponent=!0}}]);