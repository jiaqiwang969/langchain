"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[58150],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=d(e.components);return r.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=d(t),p=a,g=m["".concat(o,".").concat(p)]||m[p]||u[p]||i;return t?r.createElement(g,s(s({ref:n},l),{},{components:t})):r.createElement(g,s({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=p;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c[m]="string"==typeof e?e:a,s[1]=c;for(var d=2;d<i;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7977:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=t(87462),a=(t(67294),t(3905));const i={},s="Elasticsearch",c={unversionedId:"integrations/text_embedding/elasticsearch",id:"integrations/text_embedding/elasticsearch",title:"Elasticsearch",description:"Walkthrough of how to generate embeddings using a hosted embedding model in Elasticsearch",source:"@site/docs/integrations/text_embedding/elasticsearch.md",sourceDirName:"integrations/text_embedding",slug:"/integrations/text_embedding/elasticsearch",permalink:"/langchain/docs/integrations/text_embedding/elasticsearch",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"EDEN AI",permalink:"/langchain/docs/integrations/text_embedding/edenai"},next:{title:"Embaas",permalink:"/langchain/docs/integrations/text_embedding/embaas"}},o={},d=[{value:"Testing with <code>from_credentials</code>",id:"testing-with-from_credentials",level:2},{value:"Testing with Existing Elasticsearch client connection",id:"testing-with-existing-elasticsearch-client-connection",level:2}],l={toc:d},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"elasticsearch"},"Elasticsearch"),(0,a.kt)("p",null,"Walkthrough of how to generate embeddings using a hosted embedding model in Elasticsearch"),(0,a.kt)("p",null,"The easiest way to instantiate the ",(0,a.kt)("inlineCode",{parentName:"p"},"ElasticsearchEmbeddings")," class it either"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"using the ",(0,a.kt)("inlineCode",{parentName:"li"},"from_credentials")," constructor if you are using Elastic Cloud"),(0,a.kt)("li",{parentName:"ul"},"or using the ",(0,a.kt)("inlineCode",{parentName:"li"},"from_es_connection")," constructor with any Elasticsearch cluster")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip -q install elasticsearch langchain\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "ElasticsearchEmbeddings", "source": "langchain.embeddings.elasticsearch", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.elasticsearch.ElasticsearchEmbeddings.html", "title": "Elasticsearch"}]--\x3e\nimport elasticsearch\nfrom langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Define the model ID\nmodel_id = "your_model_id"\n')),(0,a.kt)("h2",{id:"testing-with-from_credentials"},"Testing with ",(0,a.kt)("inlineCode",{parentName:"h2"},"from_credentials")),(0,a.kt)("p",null,"This required an Elastic Cloud ",(0,a.kt)("inlineCode",{parentName:"p"},"cloud_id")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Instantiate ElasticsearchEmbeddings using credentials\nembeddings = ElasticsearchEmbeddings.from_credentials(\n    model_id,\n    es_cloud_id="your_cloud_id",\n    es_user="your_user",\n    es_password="your_password",\n)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Create embeddings for multiple documents\ndocuments = [\n    "This is an example document.",\n    "Another example document to generate embeddings for.",\n]\ndocument_embeddings = embeddings.embed_documents(documents)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Print document embeddings\nfor i, embedding in enumerate(document_embeddings):\n    print(f"Embedding for document {i+1}: {embedding}")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Create an embedding for a single query\nquery = "This is a single query."\nquery_embedding = embeddings.embed_query(query)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Print query embedding\nprint(f"Embedding for query: {query_embedding}")\n')),(0,a.kt)("h2",{id:"testing-with-existing-elasticsearch-client-connection"},"Testing with Existing Elasticsearch client connection"),(0,a.kt)("p",null,"This can be used with any Elasticsearch deployment"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Create Elasticsearch connection\nes_connection = Elasticsearch(\n    hosts=["https://es_cluster_url:port"], basic_auth=("user", "password")\n)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# Instantiate ElasticsearchEmbeddings using es_connection\nembeddings = ElasticsearchEmbeddings.from_es_connection(\n    model_id,\n    es_connection,\n)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Create embeddings for multiple documents\ndocuments = [\n    "This is an example document.",\n    "Another example document to generate embeddings for.",\n]\ndocument_embeddings = embeddings.embed_documents(documents)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Print document embeddings\nfor i, embedding in enumerate(document_embeddings):\n    print(f"Embedding for document {i+1}: {embedding}")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Create an embedding for a single query\nquery = "This is a single query."\nquery_embedding = embeddings.embed_query(query)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Print query embedding\nprint(f"Embedding for query: {query_embedding}")\n')))}u.isMDXComponent=!0}}]);