"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1765],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90300:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={},i="Airbyte",l={unversionedId:"integrations/providers/airbyte",id:"integrations/providers/airbyte",title:"Airbyte",description:"Airbyte is a data integration platform for ELT pipelines from APIs,",source:"@site/docs/integrations/providers/airbyte.mdx",sourceDirName:"integrations/providers",slug:"/integrations/providers/airbyte",permalink:"/langchain/docs/integrations/providers/airbyte",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"AINetwork",permalink:"/langchain/docs/integrations/providers/ainetwork"},next:{title:"Airtable",permalink:"/langchain/docs/integrations/providers/airtable"}},s={},p=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Document Loader",id:"document-loader",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"airbyte"},"Airbyte"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/airbytehq/airbyte"},"Airbyte")," is a data integration platform for ELT pipelines from APIs,\ndatabases & files to warehouses & lakes. It has the largest catalog of ELT connectors to data warehouses and databases.")),(0,a.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,a.kt)("p",null,"This instruction shows how to load any source from ",(0,a.kt)("inlineCode",{parentName:"p"},"Airbyte")," into a local ",(0,a.kt)("inlineCode",{parentName:"p"},"JSON")," file that can be read in as a document."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prerequisites:"),"\nHave ",(0,a.kt)("inlineCode",{parentName:"p"},"docker desktop")," installed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Steps:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Clone Airbyte from GitHub - ",(0,a.kt)("inlineCode",{parentName:"li"},"git clone https://github.com/airbytehq/airbyte.git"),"."),(0,a.kt)("li",{parentName:"ol"},"Switch into Airbyte directory - ",(0,a.kt)("inlineCode",{parentName:"li"},"cd airbyte"),"."),(0,a.kt)("li",{parentName:"ol"},"Start Airbyte - ",(0,a.kt)("inlineCode",{parentName:"li"},"docker compose up"),"."),(0,a.kt)("li",{parentName:"ol"},"In your browser, just visit http://localhost:8000. You will be asked for a username and password. By default, that's username ",(0,a.kt)("inlineCode",{parentName:"li"},"airbyte")," and password ",(0,a.kt)("inlineCode",{parentName:"li"},"password"),"."),(0,a.kt)("li",{parentName:"ol"},"Setup any source you wish."),(0,a.kt)("li",{parentName:"ol"},"Set destination as Local JSON, with specified destination path - lets say ",(0,a.kt)("inlineCode",{parentName:"li"},"/json_data"),". Set up a manual sync."),(0,a.kt)("li",{parentName:"ol"},"Run the connection."),(0,a.kt)("li",{parentName:"ol"},"To see what files are created, navigate to: ",(0,a.kt)("inlineCode",{parentName:"li"},"file:///tmp/airbyte_local/"),".")),(0,a.kt)("h2",{id:"document-loader"},"Document Loader"),(0,a.kt)("p",null,"See a ",(0,a.kt)("a",{parentName:"p",href:"/docs/integrations/document_loaders/airbyte_json"},"usage example"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import AirbyteJSONLoader\n")))}u.isMDXComponent=!0}}]);