"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88957],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},60208:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={},s="Twitter (via Apify)",i={unversionedId:"integrations/chat_loaders/twitter",id:"integrations/chat_loaders/twitter",title:"Twitter (via Apify)",description:"This notebook shows how to load chat messages from Twitter to finetune on. We do this by utilizing Apify.",source:"@site/docs/integrations/chat_loaders/twitter.md",sourceDirName:"integrations/chat_loaders",slug:"/integrations/chat_loaders/twitter",permalink:"/langchain/docs/integrations/chat_loaders/twitter",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Telegram",permalink:"/langchain/docs/integrations/chat_loaders/telegram"},next:{title:"WhatsApp",permalink:"/langchain/docs/integrations/chat_loaders/whatsapp"}},c={},l=[],p={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"twitter-via-apify"},"Twitter (via Apify)"),(0,a.kt)("p",null,"This notebook shows how to load chat messages from Twitter to finetune on. We do this by utilizing Apify. "),(0,a.kt)("p",null,"First, use Apify to export tweets. An example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "AIMessage", "source": "langchain.schema", "docs": "https://api.python.langchain.com/en/latest/schema/langchain.schema.messages.AIMessage.html", "title": "Twitter (via Apify)"}, {"imported": "convert_message_to_dict", "source": "langchain.adapters.openai", "docs": "https://api.python.langchain.com/en/latest/adapters/langchain.adapters.openai.convert_message_to_dict.html", "title": "Twitter (via Apify)"}]--\x3e\nimport json\nfrom langchain.schema import AIMessage\nfrom langchain.adapters.openai import convert_message_to_dict\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"with open('example_data/dataset_twitter-scraper_2023-08-23_22-13-19-740.json') as f:\n    data = json.load(f)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Filter out tweets that reference other tweets, because it\'s a bit weird\ntweets = [d["full_text"] for d in data if "t.co" not in d[\'full_text\']]\n# Create them as AI messages\nmessages = [AIMessage(content=t) for t in tweets]\n# Add in a system message at the start\n# TODO: we could try to extract the subject from the tweets, and put that in the system message.\nsystem_message = {"role": "system", "content": "write a tweet"}\ndata = [[system_message, convert_message_to_dict(m)] for m in messages]\n')))}u.isMDXComponent=!0}}]);