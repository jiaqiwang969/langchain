"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[94231],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>u});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,u=p["".concat(l,".").concat(m)]||p[m]||h[m]||a;return r?n.createElement(u,s(s({ref:t},d),{},{components:r})):n.createElement(u,s({ref:t},d))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,s=new Array(a);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},20795:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={},s="Redis",o={unversionedId:"integrations/providers/redis",id:"integrations/providers/redis",title:"Redis",description:"This page covers how to use the Redis ecosystem within LangChain.",source:"@site/docs/integrations/providers/redis.mdx",sourceDirName:"integrations/providers",slug:"/integrations/providers/redis",permalink:"/langchain/docs/integrations/providers/redis",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Reddit",permalink:"/langchain/docs/integrations/providers/reddit"},next:{title:"Replicate",permalink:"/langchain/docs/integrations/providers/replicate"}},l={},c=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Wrappers",id:"wrappers",level:2},{value:"Redis Standalone connection url",id:"redis-standalone-connection-url",level:3},{value:"Redis Sentinel connection url",id:"redis-sentinel-connection-url",level:3},{value:"Redis Cluster connection url",id:"redis-cluster-connection-url",level:3},{value:"Cache",id:"cache",level:3},{value:"Standard Cache",id:"standard-cache",level:4},{value:"Semantic Cache",id:"semantic-cache",level:4},{value:"VectorStore",id:"vectorstore",level:3},{value:"Retriever",id:"retriever",level:3},{value:"Memory",id:"memory",level:3},{value:"Vector Store Retriever Memory",id:"vector-store-retriever-memory",level:4},{value:"Chat Message History Memory",id:"chat-message-history-memory",level:4}],d={toc:c},p="wrapper";function h(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"redis"},"Redis"),(0,i.kt)("p",null,"This page covers how to use the ",(0,i.kt)("a",{parentName:"p",href:"https://redis.com"},"Redis")," ecosystem within LangChain.\nIt is broken into two parts: installation and setup, and then references to specific Redis wrappers."),(0,i.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install the Redis Python SDK with ",(0,i.kt)("inlineCode",{parentName:"li"},"pip install redis"))),(0,i.kt)("h2",{id:"wrappers"},"Wrappers"),(0,i.kt)("p",null,"All wrappers needing a redis url connection string to connect to the database support either a stand alone Redis server\nor a High-Availability setup with Replication and Redis Sentinels."),(0,i.kt)("h3",{id:"redis-standalone-connection-url"},"Redis Standalone connection url"),(0,i.kt)("p",null,'For standalone Redis server the official redis connection url formats can be used as describe in the python redis modules\n"from_url()" method ',(0,i.kt)("a",{parentName:"p",href:"https://redis-py.readthedocs.io/en/stable/connections.html#redis.Redis.from_url"},"Redis.from_url")),(0,i.kt)("p",null,"Example: ",(0,i.kt)("inlineCode",{parentName:"p"},'redis_url = "redis://:secret-pass@localhost:6379/0"')),(0,i.kt)("h3",{id:"redis-sentinel-connection-url"},"Redis Sentinel connection url"),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"https://redis.io/docs/management/sentinel/"},"Redis sentinel setups"),' the connection scheme is "redis+sentinel".\nThis is an un-offical extensions to the official IANA registered protocol schemes as long as there is no connection url\nfor Sentinels available.'),(0,i.kt)("p",null,"Example: ",(0,i.kt)("inlineCode",{parentName:"p"},'redis_url = "redis+sentinel://:secret-pass@sentinel-host:26379/mymaster/0"')),(0,i.kt)("p",null,"The format is  ",(0,i.kt)("inlineCode",{parentName:"p"},"redis+sentinel://[[username]:[password]]@[host-or-ip]:[port]/[service-name]/[db-number]"),'\nwith the default values of "service-name = mymaster" and "db-number = 0" if not set explicit.\nThe service-name is the redis server monitoring group name as configured within the Sentinel. '),(0,i.kt)("p",null,"The current url format limits the connection string to one sentinel host only (no list can be given) and\nbooth Redis server and sentinel must have the same password set (if used)."),(0,i.kt)("h3",{id:"redis-cluster-connection-url"},"Redis Cluster connection url"),(0,i.kt)("p",null,'Redis cluster is not supported right now for all methods requiring a "redis_url" parameter.\nThe only way to use a Redis Cluster is with LangChain classes accepting a preconfigured Redis client like ',(0,i.kt)("inlineCode",{parentName:"p"},"RedisCache"),"\n(example below)."),(0,i.kt)("h3",{id:"cache"},"Cache"),(0,i.kt)("p",null,"The Cache wrapper allows for ",(0,i.kt)("a",{parentName:"p",href:"https://redis.io"},"Redis")," to be used as a remote, low-latency, in-memory cache for LLM prompts and responses."),(0,i.kt)("h4",{id:"standard-cache"},"Standard Cache"),(0,i.kt)("p",null,"The standard cache is the Redis bread & butter of use case in production for both ",(0,i.kt)("a",{parentName:"p",href:"https://redis.io"},"open source")," and ",(0,i.kt)("a",{parentName:"p",href:"https://redis.com"},"enterprise")," users globally."),(0,i.kt)("p",null,"To import this cache:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "RedisCache", "source": "langchain.cache", "docs": "https://api.python.langchain.com/en/latest/cache/langchain.cache.RedisCache.html", "title": "Redis"}]--\x3e\nfrom langchain.cache import RedisCache\n')),(0,i.kt)("p",null,"To use this cache with your LLMs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import langchain\nimport redis\n\nredis_client = redis.Redis.from_url(...)\nlangchain.llm_cache = RedisCache(redis_client)\n")),(0,i.kt)("h4",{id:"semantic-cache"},"Semantic Cache"),(0,i.kt)("p",null,"Semantic caching allows users to retrieve cached prompts based on semantic similarity between the user input and previously cached results. Under the hood it blends Redis as both a cache and a vectorstore."),(0,i.kt)("p",null,"To import this cache:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "RedisSemanticCache", "source": "langchain.cache", "docs": "https://api.python.langchain.com/en/latest/cache/langchain.cache.RedisSemanticCache.html", "title": "Redis"}]--\x3e\nfrom langchain.cache import RedisSemanticCache\n')),(0,i.kt)("p",null,"To use this cache with your LLMs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'import langchain\nimport redis\n\n# use any embedding provider...\nfrom tests.integration_tests.vectorstores.fake_embeddings import FakeEmbeddings\n\nredis_url = "redis://localhost:6379"\n\nlangchain.llm_cache = RedisSemanticCache(\n    embedding=FakeEmbeddings(),\n    redis_url=redis_url\n)\n')),(0,i.kt)("h3",{id:"vectorstore"},"VectorStore"),(0,i.kt)("p",null,"The vectorstore wrapper turns Redis into a low-latency ",(0,i.kt)("a",{parentName:"p",href:"https://redis.com/solutions/use-cases/vector-database/"},"vector database")," for semantic search or LLM content retrieval."),(0,i.kt)("p",null,"To import this vectorstore:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "Redis", "source": "langchain.vectorstores", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.redis.base.Redis.html", "title": "Redis"}]--\x3e\nfrom langchain.vectorstores import Redis\n')),(0,i.kt)("p",null,"For a more detailed walkthrough of the Redis vectorstore wrapper, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/integrations/vectorstores/redis.html"},"this notebook"),"."),(0,i.kt)("h3",{id:"retriever"},"Retriever"),(0,i.kt)("p",null,"The Redis vector store retriever wrapper generalizes the vectorstore class to perform low-latency document retrieval. To create the retriever, simply call ",(0,i.kt)("inlineCode",{parentName:"p"},".as_retriever()")," on the base vectorstore class."),(0,i.kt)("h3",{id:"memory"},"Memory"),(0,i.kt)("p",null,"Redis can be used to persist LLM conversations."),(0,i.kt)("h4",{id:"vector-store-retriever-memory"},"Vector Store Retriever Memory"),(0,i.kt)("p",null,"For a more detailed walkthrough of the ",(0,i.kt)("inlineCode",{parentName:"p"},"VectorStoreRetrieverMemory")," wrapper, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modules/memory/integrations/vectorstore_retriever_memory.html"},"this notebook"),"."),(0,i.kt)("h4",{id:"chat-message-history-memory"},"Chat Message History Memory"),(0,i.kt)("p",null,"For a detailed example of Redis to cache conversation message history, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/integrations/memory/redis_chat_message_history.html"},"this notebook"),"."))}h.isMDXComponent=!0}}]);