"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9035],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||r;return n?a.createElement(u,s(s({ref:t},p),{},{components:n})):a.createElement(u,s({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},52298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={},s="Meilisearch",o={unversionedId:"integrations/vectorstores/meilisearch",id:"integrations/vectorstores/meilisearch",title:"Meilisearch",description:"Meilisearch is an open-source, lightning-fast, and hyper relevant search engine. It comes with great defaults to help developers build snappy search experiences.",source:"@site/docs/integrations/vectorstores/meilisearch.md",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/meilisearch",permalink:"/langchain/docs/integrations/vectorstores/meilisearch",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Google Vertex AI MatchingEngine",permalink:"/langchain/docs/integrations/vectorstores/matchingengine"},next:{title:"Milvus",permalink:"/langchain/docs/integrations/vectorstores/milvus"}},l={},c=[{value:"Setup",id:"setup",level:2},{value:"Launching a Meilisearch instance",id:"launching-a-meilisearch-instance",level:3},{value:"Credentials",id:"credentials",level:3},{value:"Installing dependencies",id:"installing-dependencies",level:3},{value:"Examples",id:"examples",level:2},{value:"Adding text and embeddings",id:"adding-text-and-embeddings",level:3},{value:"Adding documents and embeddings",id:"adding-documents-and-embeddings",level:3},{value:"Add documents by creating a Meilisearch Vectorstore",id:"add-documents-by-creating-a-meilisearch-vectorstore",level:2},{value:"Similarity Search with score",id:"similarity-search-with-score",level:2},{value:"Similarity Search by vector",id:"similarity-search-by-vector",level:2},{value:"Additional resources",id:"additional-resources",level:2}],p={toc:c},d="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"meilisearch"},"Meilisearch"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://meilisearch.com"},"Meilisearch")," is an open-source, lightning-fast, and hyper relevant search engine. It comes with great defaults to help developers build snappy search experiences. "),(0,i.kt)("p",{parentName:"blockquote"},"You can ",(0,i.kt)("a",{parentName:"p",href:"https://www.meilisearch.com/docs/learn/getting_started/installation#local-installation"},"self-host Meilisearch")," or run on ",(0,i.kt)("a",{parentName:"p",href:"https://www.meilisearch.com/pricing"},"Meilisearch Cloud"),".")),(0,i.kt)("p",null,"Meilisearch v1.3 supports vector search. This page guides you through integrating Meilisearch as a vector store and using it to perform vector search."),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("h3",{id:"launching-a-meilisearch-instance"},"Launching a Meilisearch instance"),(0,i.kt)("p",null,"You will need a running Meilisearch instance to use as your vector store. You can run ",(0,i.kt)("a",{parentName:"p",href:"https://www.meilisearch.com/docs/learn/getting_started/installation#local-installation"},"Meilisearch in local")," or create a ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.meilisearch.com/"},"Meilisearch Cloud")," account."),(0,i.kt)("p",null,"As of Meilisearch v1.3, vector storage is an experimental feature. After launching your Meilisearch instance, you need to ",(0,i.kt)("strong",{parentName:"p"},"enable vector storage"),". For self-hosted Meilisearch, read the docs on ",(0,i.kt)("a",{parentName:"p",href:"https://www.meilisearch.com/docs/learn/experimental/vector-search"},"enabling experimental features"),". On ",(0,i.kt)("strong",{parentName:"p"},"Meilisearch Cloud"),", enable ",(0,i.kt)("em",{parentName:"p"},"Vector Store")," via your project ",(0,i.kt)("em",{parentName:"p"},"Settings")," page."),(0,i.kt)("p",null,"You should now have a running Meilisearch instance with vector storage enabled. \ud83c\udf89"),(0,i.kt)("h3",{id:"credentials"},"Credentials"),(0,i.kt)("p",null,"To interact with your Meilisearch instance, the Meilisearch SDK needs a host (URL of your instance) and an API key."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Host")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In ",(0,i.kt)("strong",{parentName:"li"},"local"),", the default host is ",(0,i.kt)("inlineCode",{parentName:"li"},"localhost:7700")),(0,i.kt)("li",{parentName:"ul"},"On ",(0,i.kt)("strong",{parentName:"li"},"Meilisearch Cloud"),", find the host in your project ",(0,i.kt)("em",{parentName:"li"},"Settings")," page")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"API keys")),(0,i.kt)("p",null,"Meilisearch instance provides you with three API keys out of the box: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"MASTER KEY")," \u2014 it should only be used to create your Meilisearch instance"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"ADMIN KEY")," \u2014 use it only server-side to update your database and its settings"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"SEARCH KEY")," \u2014 a key that you can safely share in front-end applications")),(0,i.kt)("p",null,"You can create ",(0,i.kt)("a",{parentName:"p",href:"https://www.meilisearch.com/docs/learn/security/master_api_keys"},"additional API keys")," as needed."),(0,i.kt)("h3",{id:"installing-dependencies"},"Installing dependencies"),(0,i.kt)("p",null,"This guide uses the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/meilisearch/meilisearch-python"},"Meilisearch Python SDK"),". You can install it by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install meilisearch\n")),(0,i.kt)("p",null,"For more information, refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://meilisearch.github.io/meilisearch-python/"},"Meilisearch Python SDK documentation"),"."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"There are multiple ways to initialize the Meilisearch vector store: providing a Meilisearch client or the ",(0,i.kt)("em",{parentName:"p"},"URL")," and ",(0,i.kt)("em",{parentName:"p"},"API key")," as needed. In our examples, the credentials will be loaded from the environment."),(0,i.kt)("p",null,"You can make environment variables available in your Notebook environment by using ",(0,i.kt)("inlineCode",{parentName:"p"},"os")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"getpass"),". You can use this technique for all the following examples."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'import os\nimport getpass\n\nos.environ["MEILI_HTTP_ADDR"] = getpass.getpass("Meilisearch HTTP address and port:")\nos.environ["MEILI_MASTER_KEY"] = getpass.getpass("Meilisearch API Key:")\n')),(0,i.kt)("p",null,"We want to use OpenAIEmbeddings so we have to get the OpenAI API Key."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'os.environ["OPENAI_API_KEY"] = getpass.getpass("OpenAI API Key:")\n')),(0,i.kt)("h3",{id:"adding-text-and-embeddings"},"Adding text and embeddings"),(0,i.kt)("p",null,"This example adds text to the Meilisearch vector database without having to initialize a Meilisearch vector store."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "Meilisearch", "source": "langchain.vectorstores", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.meilisearch.Meilisearch.html", "title": "Meilisearch"}, {"imported": "OpenAIEmbeddings", "source": "langchain.embeddings.openai", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.openai.OpenAIEmbeddings.html", "title": "Meilisearch"}, {"imported": "CharacterTextSplitter", "source": "langchain.text_splitter", "docs": "https://api.python.langchain.com/en/latest/text_splitter/langchain.text_splitter.CharacterTextSplitter.html", "title": "Meilisearch"}]--\x3e\nfrom langchain.vectorstores import Meilisearch\nfrom langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\n\nembeddings = OpenAIEmbeddings()\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'with open("../../../state_of_the_union.txt") as f:\n    state_of_the_union = f.read()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ntexts = text_splitter.split_text(state_of_the_union)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Use Meilisearch vector store to store texts & associated embeddings as vector\nvector_store = Meilisearch.from_texts(texts=texts, embedding=embeddings)\n")),(0,i.kt)("p",null,"Behind the scenes, Meilisearch will convert the text to multiple vectors. This will bring us to the same result as the following example."),(0,i.kt)("h3",{id:"adding-documents-and-embeddings"},"Adding documents and embeddings"),(0,i.kt)("p",null,"In this example, we'll use Langchain TextSplitter to split the text in multiple documents. Then, we'll store these documents along with their embeddings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "TextLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.text.TextLoader.html", "title": "Meilisearch"}]--\x3e\nfrom langchain.document_loaders import TextLoader\n\n# Load text\nloader = TextLoader("../../../state_of_the_union.txt")\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\n\n# Create documents\ndocs = text_splitter.split_documents(documents)\n\n# Import documents & embeddings in the vector store\nvector_store = Meilisearch.from_documents(documents=documents, embedding=embeddings)\n\n# Search in our vector store\nquery = "What did the president say about Ketanji Brown Jackson"\ndocs = vector_store.similarity_search(query)\nprint(docs[0].page_content)\n')),(0,i.kt)("h2",{id:"add-documents-by-creating-a-meilisearch-vectorstore"},"Add documents by creating a Meilisearch Vectorstore"),(0,i.kt)("p",null,"In this approach, we create a vector store object and add documents to it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "Meilisearch", "source": "langchain.vectorstores", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.meilisearch.Meilisearch.html", "title": "Meilisearch"}]--\x3e\nfrom langchain.vectorstores import Meilisearch\nimport meilisearch\n\nclient = meilisearch.Client(url="http://127.0.0.1:7700", api_key="***")\nvector_store = Meilisearch(\n    embedding=embeddings, client=client, index_name="langchain_demo", text_key="text"\n)\nvector_store.add_documents(documents)\n')),(0,i.kt)("h2",{id:"similarity-search-with-score"},"Similarity Search with score"),(0,i.kt)("p",null,"This specific method allows you to return the documents and the distance score of the query to them."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"docs_and_scores = vector_store.similarity_search_with_score(query)\ndocs_and_scores[0]\n")),(0,i.kt)("h2",{id:"similarity-search-by-vector"},"Similarity Search by vector"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"embedding_vector = embeddings.embed_query(query)\ndocs_and_scores = vector_store.similarity_search_by_vector(embedding_vector)\ndocs_and_scores[0]\n")),(0,i.kt)("h2",{id:"additional-resources"},"Additional resources"),(0,i.kt)("p",null,"Documentation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.meilisearch.com/docs/"},"Meilisearch")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://python-sdk.meilisearch.com"},"Meilisearch Python SDK"))),(0,i.kt)("p",null,"Open-source repositories"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/meilisearch/meilisearch"},"Meilisearch repository")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/meilisearch/meilisearch-python"},"Meilisearch Python SDK"))))}h.isMDXComponent=!0}}]);