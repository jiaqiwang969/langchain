"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[65625],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,g=d["".concat(p,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},33670:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={},o="Clarifai",l={unversionedId:"integrations/text_embedding/clarifai",id:"integrations/text_embedding/clarifai",title:"Clarifai",description:"Clarifai is an AI Platform that provides the full AI lifecycle ranging from data exploration, data labeling, model training, evaluation, and inference.",source:"@site/docs/integrations/text_embedding/clarifai.md",sourceDirName:"integrations/text_embedding",slug:"/integrations/text_embedding/clarifai",permalink:"/langchain/docs/integrations/text_embedding/clarifai",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"BGE Hugging Face Embeddings",permalink:"/langchain/docs/integrations/text_embedding/bge_huggingface"},next:{title:"Cohere",permalink:"/langchain/docs/integrations/text_embedding/cohere"}},p={},s=[],c=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var d;const m={toc:s},u="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"clarifai"},"Clarifai"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://www.clarifai.com/"},"Clarifai")," is an AI Platform that provides the full AI lifecycle ranging from data exploration, data labeling, model training, evaluation, and inference.")),(0,r.kt)("p",null,"This example goes over how to use LangChain to interact with ",(0,r.kt)("inlineCode",{parentName:"p"},"Clarifai")," ",(0,r.kt)("a",{parentName:"p",href:"https://clarifai.com/explore/models"},"models"),". Text embedding models in particular can be found ",(0,r.kt)("a",{parentName:"p",href:"https://clarifai.com/explore/models?page=1&perPage=24&filterData=%5B%7B%22field%22%3A%22model_type_id%22%2C%22value%22%3A%5B%22text-embedder%22%5D%7D%5D"},"here"),"."),(0,r.kt)("p",null,"To use Clarifai, you must have an account and a Personal Access Token (PAT) key.\n",(0,r.kt)("a",{parentName:"p",href:"https://clarifai.com/settings/security"},"Check here")," to get or create a PAT."),(0,r.kt)("h1",{id:"dependencies"},"Dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Install required dependencies\npip install clarifai\n")),(0,r.kt)("h1",{id:"imports"},"Imports"),(0,r.kt)("p",null,"Here we will be setting the personal access token. You can find your PAT under ",(0,r.kt)("a",{parentName:"p",href:"https://clarifai.com/settings/security"},"settings/security")," in your Clarifai account."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Please login and get your API key from  https://clarifai.com/settings/security\nfrom getpass import getpass\n\nCLARIFAI_PAT = getpass()\n")),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"     \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "ClarifaiEmbeddings", "source": "langchain.embeddings", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.clarifai.ClarifaiEmbeddings.html", "title": "Clarifai"}]--\x3e\n# Import the required modules\nfrom langchain.embeddings import ClarifaiEmbeddings\nfrom langchain import PromptTemplate, LLMChain\n')),(0,r.kt)("h1",{id:"input"},"Input"),(0,r.kt)("p",null,"Create a prompt template to be used with the LLM Chain:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'template = """Question: {question}\n\nAnswer: Let\'s think step by step."""\n\nprompt = PromptTemplate(template=template, input_variables=["question"])\n')),(0,r.kt)("h1",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Set the user id and app id to the application in which the model resides. You can find a list of public models on ",(0,r.kt)("a",{parentName:"p",href:"https://clarifai.com/explore/models"},"https://clarifai.com/explore/models")),(0,r.kt)("p",null,"You will have to also initialize the model id and if needed, the model version id. Some models have many versions, you can choose the one appropriate for your task."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'USER_ID = "salesforce"\nAPP_ID = "blip"\nMODEL_ID = "multimodal-embedder-blip-2"\n\n# You can provide a specific model version as the model_version_id arg.\n# MODEL_VERSION_ID = "MODEL_VERSION_ID"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Initialize a Clarifai embedding model\nembeddings = ClarifaiEmbeddings(\n    pat=CLARIFAI_PAT, user_id=USER_ID, app_id=APP_ID, model_id=MODEL_ID\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'text = "This is a test document."\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"query_result = embeddings.embed_query(text)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"doc_result = embeddings.embed_documents([text])\n")))}g.isMDXComponent=!0}}]);