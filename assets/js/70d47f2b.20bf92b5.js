"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[25931],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),g=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=g(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=g(n),h=r,d=p["".concat(s,".").concat(h)]||p[h]||u[h]||i;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var g=2;g<i;g++)o[g]=n[g];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},53109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var a=n(87462),r=(n(67294),n(3905));const i={},o="Hugging Face",l={unversionedId:"integrations/providers/huggingface",id:"integrations/providers/huggingface",title:"Hugging Face",description:"This page covers how to use the Hugging Face ecosystem (including the Hugging Face Hub) within LangChain.",source:"@site/docs/integrations/providers/huggingface.mdx",sourceDirName:"integrations/providers",slug:"/integrations/providers/huggingface",permalink:"/langchain/docs/integrations/providers/huggingface",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Hologres",permalink:"/langchain/docs/integrations/providers/hologres"},next:{title:"iFixit",permalink:"/langchain/docs/integrations/providers/ifixit"}},s={},g=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Wrappers",id:"wrappers",level:2},{value:"LLM",id:"llm",level:3},{value:"Embeddings",id:"embeddings",level:3},{value:"Tokenizer",id:"tokenizer",level:3},{value:"Datasets",id:"datasets",level:3}],c={toc:g},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hugging-face"},"Hugging Face"),(0,r.kt)("p",null,"This page covers how to use the Hugging Face ecosystem (including the ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co"},"Hugging Face Hub"),") within LangChain.\nIt is broken into two parts: installation and setup, and then references to specific Hugging Face wrappers."),(0,r.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,r.kt)("p",null,"If you want to work with the Hugging Face Hub:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install the Hub client library with ",(0,r.kt)("inlineCode",{parentName:"li"},"pip install huggingface_hub")),(0,r.kt)("li",{parentName:"ul"},"Create a Hugging Face account (it's free!)"),(0,r.kt)("li",{parentName:"ul"},"Create an ",(0,r.kt)("a",{parentName:"li",href:"https://huggingface.co/docs/hub/security-tokens"},"access token")," and set it as an environment variable (",(0,r.kt)("inlineCode",{parentName:"li"},"HUGGINGFACEHUB_API_TOKEN"),")")),(0,r.kt)("p",null,"If you want work with the Hugging Face Python libraries:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("inlineCode",{parentName:"li"},"pip install transformers")," for working with models and tokenizers"),(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("inlineCode",{parentName:"li"},"pip install datasets")," for working with datasets")),(0,r.kt)("h2",{id:"wrappers"},"Wrappers"),(0,r.kt)("h3",{id:"llm"},"LLM"),(0,r.kt)("p",null,"There exists two Hugging Face LLM wrappers, one for a local pipeline and one for a model hosted on Hugging Face Hub.\nNote that these wrappers only work for models that support the following tasks: ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?library=transformers&pipeline_tag=text2text-generation&sort=downloads"},(0,r.kt)("inlineCode",{parentName:"a"},"text2text-generation")),", ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?library=transformers&pipeline_tag=text-classification&sort=downloads"},(0,r.kt)("inlineCode",{parentName:"a"},"text-generation"))),(0,r.kt)("p",null,"To use the local pipeline wrapper:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "HuggingFacePipeline", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.huggingface_pipeline.HuggingFacePipeline.html", "title": "Hugging Face"}]--\x3e\nfrom langchain.llms import HuggingFacePipeline\n')),(0,r.kt)("p",null,"To use a the wrapper for a model hosted on Hugging Face Hub:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "HuggingFaceHub", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.huggingface_hub.HuggingFaceHub.html", "title": "Hugging Face"}]--\x3e\nfrom langchain.llms import HuggingFaceHub\n')),(0,r.kt)("p",null,"For a more detailed walkthrough of the Hugging Face Hub wrapper, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/integrations/llms/huggingface_hub.html"},"this notebook")),(0,r.kt)("h3",{id:"embeddings"},"Embeddings"),(0,r.kt)("p",null,"There exists two Hugging Face Embeddings wrappers, one for a local model and one for a model hosted on Hugging Face Hub.\nNote that these wrappers only work for ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?library=sentence-transformers&sort=downloads"},(0,r.kt)("inlineCode",{parentName:"a"},"sentence-transformers")," models"),"."),(0,r.kt)("p",null,"To use the local pipeline wrapper:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "HuggingFaceEmbeddings", "source": "langchain.embeddings", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.huggingface.HuggingFaceEmbeddings.html", "title": "Hugging Face"}]--\x3e\nfrom langchain.embeddings import HuggingFaceEmbeddings\n')),(0,r.kt)("p",null,"To use a the wrapper for a model hosted on Hugging Face Hub:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "HuggingFaceHubEmbeddings", "source": "langchain.embeddings", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.huggingface_hub.HuggingFaceHubEmbeddings.html", "title": "Hugging Face"}]--\x3e\nfrom langchain.embeddings import HuggingFaceHubEmbeddings\n')),(0,r.kt)("p",null,"For a more detailed walkthrough of this, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/integrations/text_embedding/huggingfacehub.html"},"this notebook")),(0,r.kt)("h3",{id:"tokenizer"},"Tokenizer"),(0,r.kt)("p",null,"There are several places you can use tokenizers available through the ",(0,r.kt)("inlineCode",{parentName:"p"},"transformers")," package.\nBy default, it is used to count tokens for all LLMs."),(0,r.kt)("p",null,"You can also use it to count tokens when splitting documents with "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "CharacterTextSplitter", "source": "langchain.text_splitter", "docs": "https://api.python.langchain.com/en/latest/text_splitter/langchain.text_splitter.CharacterTextSplitter.html", "title": "Hugging Face"}]--\x3e\nfrom langchain.text_splitter import CharacterTextSplitter\nCharacterTextSplitter.from_huggingface_tokenizer(...)\n')),(0,r.kt)("p",null,"For a more detailed walkthrough of this, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/modules/data_connection/document_transformers/text_splitters/huggingface_length_function.html"},"this notebook")),(0,r.kt)("h3",{id:"datasets"},"Datasets"),(0,r.kt)("p",null,"The Hugging Face Hub has lots of great ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/datasets"},"datasets")," that can be used to evaluate your LLM chains."),(0,r.kt)("p",null,"For a detailed walkthrough of how to use them to do so, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/use_cases/evaluation/huggingface_datasets.html"},"this notebook")))}u.isMDXComponent=!0}}]);