"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[15736],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>u});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),m=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=m(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(a),h=i,u=d["".concat(s,".").concat(h)]||d[h]||c[h]||r;return a?t.createElement(u,o(o({ref:n},p),{},{components:a})):t.createElement(u,o({ref:n},p))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=h;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<r;m++)o[m]=a[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}h.displayName="MDXCreateElement"},26885:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var t=a(87462),i=(a(67294),a(3905));const r={},o="Reversible data anonymization with Microsoft Presidio",l={unversionedId:"guides/privacy/presidio_reversible_anonymization",id:"guides/privacy/presidio_reversible_anonymization",title:"Reversible data anonymization with Microsoft Presidio",description:"Open In Collab",source:"@site/docs/guides/privacy/presidio_reversible_anonymization.md",sourceDirName:"guides/privacy",slug:"/guides/privacy/presidio_reversible_anonymization",permalink:"/langchain/docs/guides/privacy/presidio_reversible_anonymization",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Data anonymization with Microsoft Presidio",permalink:"/langchain/docs/guides/privacy/presidio_data_anonymization"},next:{title:"Pydantic compatibility",permalink:"/langchain/docs/guides/pydantic_compatibility"}},s={},m=[{value:"Use case",id:"use-case",level:2},{value:"Overview",id:"overview",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Using with LangChain Expression Language",id:"using-with-langchain-expression-language",level:3},{value:"Extra knowledge",id:"extra-knowledge",level:2},{value:"Future works",id:"future-works",level:2}],p=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var d;const c={toc:m},h="wrapper";function u(e){let{components:n,...a}=e;return(0,i.kt)(h,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"reversible-data-anonymization-with-microsoft-presidio"},"Reversible data anonymization with Microsoft Presidio"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/langchain-ai/langchain/blob/master/docs/extras/guides/privacy/reversible_anonymization.ipynb"},(0,i.kt)("img",{parentName:"a",src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Collab"}))),(0,i.kt)("h2",{id:"use-case"},"Use case"),(0,i.kt)("p",null,"We have already written about the importance of anonymizing sensitive data in the previous section. ",(0,i.kt)("strong",{parentName:"p"},"Reversible Anonymization")," is an equally essential technology while sharing information with language models, as it balances data protection with data usability. This technique involves masking sensitive personally identifiable information (PII), yet it can be reversed and original data can be restored when authorized users need it. Its main advantage lies in the fact that while it conceals individual identities to prevent misuse, it also allows the concealed data to be accurately unmasked should it be necessary for legal or compliance purposes. "),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"We implemented the ",(0,i.kt)("inlineCode",{parentName:"p"},"PresidioReversibleAnonymizer"),", which consists of two parts:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"anonymization - it works the same way as ",(0,i.kt)("inlineCode",{parentName:"li"},"PresidioAnonymizer"),", plus the object itself stores a mapping of made-up values to original ones, for example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    {\n        "PERSON": {\n            "<anonymized>": "<original>",\n            "John Doe": "Slim Shady"\n        },\n        "PHONE_NUMBER": {\n            "111-111-1111": "555-555-5555"\n        }\n        ...\n    }\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"deanonymization - using the mapping described above, it matches fake data with original data and then substitutes it.")),(0,i.kt)("p",null,"Between anonymization and deanonymization user can perform different operations, for example, passing the output to LLM."),(0,i.kt)("h2",{id:"quickstart"},"Quickstart"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Install necessary packages\n# ! pip install langchain langchain-experimental openai presidio-analyzer presidio-anonymizer spacy Faker\n# ! python -m spacy download en_core_web_lg\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PresidioReversibleAnonymizer")," is not significantly different from its predecessor (",(0,i.kt)("inlineCode",{parentName:"p"},"PresidioAnonymizer"),") in terms of anonymization:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from langchain_experimental.data_anonymizer import PresidioReversibleAnonymizer\n\nanonymizer = PresidioReversibleAnonymizer(\n    analyzed_fields=["PERSON", "PHONE_NUMBER", "EMAIL_ADDRESS", "CREDIT_CARD"],\n    # Faker seed is used here to make sure the same fake data is generated for the test purposes\n    # In production, it is recommended to remove the faker_seed parameter (it will default to None)\n    faker_seed=42,\n)\n\nanonymizer.anonymize(\n    "My name is Slim Shady, call me at 313-666-7440 or email me at real.slim.shady@gmail.com. "\n    "By the way, my card number is: 4916 0387 9536 0861"\n)\n')),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    'My name is Maria Lynch, call me at 7344131647 or email me at jamesmichael@example.com. By the way, my card number is: 4838637940262'\n"))),(0,i.kt)("p",null,"This is what the full string we want to deanonymize looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# We know this data, as we set the faker_seed parameter\nfake_name = "Maria Lynch"\nfake_phone = "7344131647"\nfake_email = "jamesmichael@example.com"\nfake_credit_card = "4838637940262"\n\nanonymized_text = f"""{fake_name} recently lost his wallet. \nInside is some cash and his credit card with the number {fake_credit_card}. \nIf you would find it, please call at {fake_phone} or write an email here: {fake_email}.\n{fake_name} would be very grateful!"""\n\nprint(anonymized_text)\n')),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Maria Lynch recently lost his wallet. \n    Inside is some cash and his credit card with the number 4838637940262. \n    If you would find it, please call at 7344131647 or write an email here: jamesmichael@example.com.\n    Maria Lynch would be very grateful!\n"))),(0,i.kt)("p",null,"And now, using the ",(0,i.kt)("inlineCode",{parentName:"p"},"deanonymize")," method, we can reverse the process:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"print(anonymizer.deanonymize(anonymized_text))\n")),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Slim Shady recently lost his wallet. \n    Inside is some cash and his credit card with the number 4916 0387 9536 0861. \n    If you would find it, please call at 313-666-7440 or write an email here: real.slim.shady@gmail.com.\n    Slim Shady would be very grateful!\n"))),(0,i.kt)("h3",{id:"using-with-langchain-expression-language"},"Using with LangChain Expression Language"),(0,i.kt)("p",null,"With LCEL we can easily chain together anonymization and deanonymization with the rest of our application. This is an example of using the anonymization mechanism with a query to LLM (without deanonymization for now):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'text = f"""Slim Shady recently lost his wallet. \nInside is some cash and his credit card with the number 4916 0387 9536 0861. \nIf you would find it, please call at 313-666-7440 or write an email here: real.slim.shady@gmail.com."""\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "PromptTemplate", "source": "langchain.prompts.prompt", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html", "title": "Reversible data anonymization with Microsoft Presidio"}, {"imported": "ChatOpenAI", "source": "langchain.chat_models", "docs": "https://api.python.langchain.com/en/latest/chat_models/langchain.chat_models.openai.ChatOpenAI.html", "title": "Reversible data anonymization with Microsoft Presidio"}]--\x3e\nfrom langchain.prompts.prompt import PromptTemplate\nfrom langchain.chat_models import ChatOpenAI\n\nanonymizer = PresidioReversibleAnonymizer()\n\ntemplate = """Rewrite this text into an official, short email:\n\n{anonymized_text}"""\nprompt = PromptTemplate.from_template(template)\nllm = ChatOpenAI(temperature=0)\n\nchain = {"anonymized_text": anonymizer.anonymize} | prompt | llm\nresponse = chain.invoke(text)\nprint(response.content)\n')),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Dear Sir/Madam,\n    \n    We regret to inform you that Mr. Dana Rhodes has reported the loss of his wallet. The wallet contains a sum of cash and his credit card, bearing the number 4397528473885757. \n    \n    If you happen to come across the aforementioned wallet, we kindly request that you contact us immediately at 258-481-7074x714 or via email at laurengoodman@example.com.\n    \n    Your prompt assistance in this matter would be greatly appreciated.\n    \n    Yours faithfully,\n    \n    [Your Name]\n"))),(0,i.kt)("p",null,"Now, let's add ",(0,i.kt)("strong",{parentName:"p"},"deanonymization step")," to our sequence:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"chain = chain | (lambda ai_message: anonymizer.deanonymize(ai_message.content))\nresponse = chain.invoke(text)\nprint(response)\n")),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Dear Sir/Madam,\n    \n    We regret to inform you that Mr. Slim Shady has recently misplaced his wallet. The wallet contains a sum of cash and his credit card, bearing the number 4916 0387 9536 0861. \n    \n    If by any chance you come across the lost wallet, kindly contact us immediately at 313-666-7440 or send an email to real.slim.shady@gmail.com.\n    \n    Your prompt assistance in this matter would be greatly appreciated.\n    \n    Yours faithfully,\n    \n    [Your Name]\n"))),(0,i.kt)("p",null,"Anonymized data was given to the model itself, and therefore it was protected from being leaked to the outside world. Then, the model's response was processed, and the factual value was replaced with the real one."),(0,i.kt)("h2",{id:"extra-knowledge"},"Extra knowledge"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PresidioReversibleAnonymizer")," stores the mapping of the fake values to the original values in the ",(0,i.kt)("inlineCode",{parentName:"p"},"deanonymizer_mapping")," parameter, where key is fake PII and value is the original one: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from langchain_experimental.data_anonymizer import PresidioReversibleAnonymizer\n\nanonymizer = PresidioReversibleAnonymizer(\n    analyzed_fields=["PERSON", "PHONE_NUMBER", "EMAIL_ADDRESS", "CREDIT_CARD"],\n    # Faker seed is used here to make sure the same fake data is generated for the test purposes\n    # In production, it is recommended to remove the faker_seed parameter (it will default to None)\n    faker_seed=42,\n)\n\nanonymizer.anonymize(\n    "My name is Slim Shady, call me at 313-666-7440 or email me at real.slim.shady@gmail.com. "\n    "By the way, my card number is: 4916 0387 9536 0861"\n)\n\nanonymizer.deanonymizer_mapping\n')),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    {'PERSON': {'Maria Lynch': 'Slim Shady'},\n     'PHONE_NUMBER': {'7344131647': '313-666-7440'},\n     'EMAIL_ADDRESS': {'jamesmichael@example.com': 'real.slim.shady@gmail.com'},\n     'CREDIT_CARD': {'4838637940262': '4916 0387 9536 0861'}}\n"))),(0,i.kt)("p",null,"Anonymizing more texts will result in new mapping entries:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"print(\n    anonymizer.anonymize(\n        \"Do you have his VISA card number? Yep, it's 4001 9192 5753 7193. I'm John Doe by the way.\"\n    )\n)\n\nanonymizer.deanonymizer_mapping\n")),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Do you have his VISA card number? Yep, it's 3537672423884966. I'm William Bowman by the way.\n\n\n\n\n\n    {'PERSON': {'Maria Lynch': 'Slim Shady', 'William Bowman': 'John Doe'},\n     'PHONE_NUMBER': {'7344131647': '313-666-7440'},\n     'EMAIL_ADDRESS': {'jamesmichael@example.com': 'real.slim.shady@gmail.com'},\n     'CREDIT_CARD': {'4838637940262': '4916 0387 9536 0861',\n      '3537672423884966': '4001 9192 5753 7193'}}\n"))),(0,i.kt)("p",null,"We can save the mapping itself to a file for future use: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# We can save the deanonymizer mapping as a JSON or YAML file\n\nanonymizer.save_deanonymizer_mapping("deanonymizer_mapping.json")\n# anonymizer.save_deanonymizer_mapping("deanonymizer_mapping.yaml")\n')),(0,i.kt)("p",null,"And then, load it in another ",(0,i.kt)("inlineCode",{parentName:"p"},"PresidioReversibleAnonymizer")," instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"anonymizer = PresidioReversibleAnonymizer()\n\nanonymizer.deanonymizer_mapping\n")),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    {}\n"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'anonymizer.load_deanonymizer_mapping("deanonymizer_mapping.json")\n\nanonymizer.deanonymizer_mapping\n')),(0,i.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    {'PERSON': {'Maria Lynch': 'Slim Shady', 'William Bowman': 'John Doe'},\n     'PHONE_NUMBER': {'7344131647': '313-666-7440'},\n     'EMAIL_ADDRESS': {'jamesmichael@example.com': 'real.slim.shady@gmail.com'},\n     'CREDIT_CARD': {'4838637940262': '4916 0387 9536 0861',\n      '3537672423884966': '4001 9192 5753 7193'}}\n"))),(0,i.kt)("h2",{id:"future-works"},"Future works"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"instance anonymization")," - at this point, each occurrence of PII is treated as a separate entity and separately anonymized. Therefore, two occurrences of the name John Doe in the text will be changed to two different names. It is therefore worth introducing support for full instance detection, so that repeated occurrences are treated as a single object."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"better matching and substitution of fake values for real ones")," - currently the strategy is based on matching full strings and then substituting them. Due to the indeterminism of language models, it may happen that the value in the answer is slightly changed (e.g. ",(0,i.kt)("em",{parentName:"li"},"John Doe")," -> ",(0,i.kt)("em",{parentName:"li"},"John")," or ",(0,i.kt)("em",{parentName:"li"},"Main St, New York")," -> ",(0,i.kt)("em",{parentName:"li"},"New York"),") and such a substitution is then no longer possible. Therefore, it is worth adjusting the matching for your needs.")))}u.isMDXComponent=!0}}]);