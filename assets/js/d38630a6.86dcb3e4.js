"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42640],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||l;return n?a.createElement(g,r(r({ref:t},s),{},{components:n})):a.createElement(g,r({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,r[1]=i;for(var d=2;d<l;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},48972:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const l={},r="Google Drive",i={unversionedId:"integrations/document_loaders/google_drive",id:"integrations/document_loaders/google_drive",title:"Google Drive",description:"Google Drive is a file storage and synchronization service developed by Google.",source:"@site/docs/integrations/document_loaders/google_drive.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/google_drive",permalink:"/langchain/docs/integrations/document_loaders/google_drive",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Google Cloud Storage File",permalink:"/langchain/docs/integrations/document_loaders/google_cloud_storage_file"},next:{title:"Grobid",permalink:"/langchain/docs/integrations/document_loaders/grobid"}},p={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"\ud83e\uddd1 Instructions for ingesting your Google Docs data",id:"-instructions-for-ingesting-your-google-docs-data",level:2},{value:"Passing in Optional File Loaders",id:"passing-in-optional-file-loaders",level:2},{value:"Extended usage",id:"extended-usage",level:2},{value:"Customize the search pattern",id:"customize-the-search-pattern",level:3},{value:"Modes for GSlide and GSheet",id:"modes-for-gslide-and-gsheet",level:4},{value:"Advanced usage",id:"advanced-usage",level:3}],s={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"google-drive"},"Google Drive"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Google_Drive"},"Google Drive")," is a file storage and synchronization service developed by Google.")),(0,o.kt)("p",null,"This notebook covers how to load documents from ",(0,o.kt)("inlineCode",{parentName:"p"},"Google Drive"),". Currently, only ",(0,o.kt)("inlineCode",{parentName:"p"},"Google Docs")," are supported."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a Google Cloud project or use an existing project"),(0,o.kt)("li",{parentName:"ol"},"Enable the ",(0,o.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/flows/enableapi?apiid=drive.googleapis.com"},"Google Drive API")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://developers.google.com/drive/api/quickstart/python#authorize_credentials_for_a_desktop_application"},"Authorize credentials for desktop app")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib"))),(0,o.kt)("h2",{id:"-instructions-for-ingesting-your-google-docs-data"},"\ud83e\uddd1 Instructions for ingesting your Google Docs data"),(0,o.kt)("p",null,"By default, the ",(0,o.kt)("inlineCode",{parentName:"p"},"GoogleDriveLoader")," expects the ",(0,o.kt)("inlineCode",{parentName:"p"},"credentials.json")," file to be ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.credentials/credentials.json"),", but this is configurable using the ",(0,o.kt)("inlineCode",{parentName:"p"},"credentials_path")," keyword argument. Same thing with ",(0,o.kt)("inlineCode",{parentName:"p"},"token.json")," - ",(0,o.kt)("inlineCode",{parentName:"p"},"token_path"),". Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"token.json")," will be created automatically the first time you use the loader."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GoogleDriveLoader")," can load from a list of Google Docs document ids or a folder id. You can obtain your folder and document id from the URL:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Folder: ",(0,o.kt)("a",{parentName:"li",href:"https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"},"https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5")," -> folder id is ",(0,o.kt)("inlineCode",{parentName:"li"},'"1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"')),(0,o.kt)("li",{parentName:"ul"},"Document: ",(0,o.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit"},"https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit")," -> document id is ",(0,o.kt)("inlineCode",{parentName:"li"},'"1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"'))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "GoogleDriveLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.googledrive.GoogleDriveLoader.html", "title": "Google Drive"}]--\x3e\nfrom langchain.document_loaders import GoogleDriveLoader\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'loader = GoogleDriveLoader(\n    folder_id="1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5",\n    # Optional: configure whether to recursively fetch files from subfolders. Defaults to False.\n    recursive=False,\n)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"docs = loader.load()\n")),(0,o.kt)("p",null,"When you pass a ",(0,o.kt)("inlineCode",{parentName:"p"},"folder_id")," by default all files of type document, sheet and pdf are loaded. You can modify this behaviour by passing a ",(0,o.kt)("inlineCode",{parentName:"p"},"file_types")," argument "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'loader = GoogleDriveLoader(\n    folder_id="1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5",\n    file_types=["document", "sheet"],\n    recursive=False\n)\n')),(0,o.kt)("h2",{id:"passing-in-optional-file-loaders"},"Passing in Optional File Loaders"),(0,o.kt)("p",null,"When processing files other than Google Docs and Google Sheets, it can be helpful to pass an optional file loader to ",(0,o.kt)("inlineCode",{parentName:"p"},"GoogleDriveLoader"),". If you pass in a file loader, that file loader will be used on documents that do not have a Google Docs or Google Sheets MIME type. Here is an example of how to load an Excel document from Google Drive using a file loader. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "GoogleDriveLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.googledrive.GoogleDriveLoader.html", "title": "Google Drive"}, {"imported": "UnstructuredFileIOLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.unstructured.UnstructuredFileIOLoader.html", "title": "Google Drive"}]--\x3e\nfrom langchain.document_loaders import GoogleDriveLoader\nfrom langchain.document_loaders import UnstructuredFileIOLoader\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'file_id = "1x9WBtFPWMEAdjcJzPScRsjpjQvpSo_kz"\nloader = GoogleDriveLoader(\n    file_ids=[file_id],\n    file_loader_cls=UnstructuredFileIOLoader,\n    file_loader_kwargs={"mode": "elements"},\n)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"docs = loader.load()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"docs[0]\n")),(0,o.kt)("p",null,"You can also process a folder with a mix of files and Google Docs/Sheets using the following pattern:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'folder_id = "1asMOHY1BqBS84JcRbOag5LOJac74gpmD"\nloader = GoogleDriveLoader(\n    folder_id=folder_id,\n    file_loader_cls=UnstructuredFileIOLoader,\n    file_loader_kwargs={"mode": "elements"},\n)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"docs = loader.load()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"docs[0]\n")),(0,o.kt)("h2",{id:"extended-usage"},"Extended usage"),(0,o.kt)("p",null,"An external component can manage the complexity of Google Drive : ",(0,o.kt)("inlineCode",{parentName:"p"},"langchain-googledrive"),"\nIt's compatible with the \u0300",(0,o.kt)("inlineCode",{parentName:"p"},"langchain.document_loaders.GoogleDriveLoader")," and can be used\nin its place."),(0,o.kt)("p",null,"To be compatible with containers, the authentication uses an environment variable \u0300GOOGLE_ACCOUNT_FILE` to credential file (for user or service)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install langchain-googledrive\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"folder_id='root'\n#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Use the advanced version.\nfrom langchain_googledrive.document_loaders import GoogleDriveLoader\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"loader = GoogleDriveLoader(\n    folder_id=folder_id,\n    recursive=False,\n    num_results=2,  # Maximum number of file to load\n)\n")),(0,o.kt)("p",null,"By default, all files with these mime-type can be converted to ",(0,o.kt)("inlineCode",{parentName:"p"},"Document"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"text/text"),(0,o.kt)("li",{parentName:"ul"},"text/plain"),(0,o.kt)("li",{parentName:"ul"},"text/html"),(0,o.kt)("li",{parentName:"ul"},"text/csv"),(0,o.kt)("li",{parentName:"ul"},"text/markdown"),(0,o.kt)("li",{parentName:"ul"},"image/png"),(0,o.kt)("li",{parentName:"ul"},"image/jpeg"),(0,o.kt)("li",{parentName:"ul"},"application/epub+zip"),(0,o.kt)("li",{parentName:"ul"},"application/pdf"),(0,o.kt)("li",{parentName:"ul"},"application/rtf"),(0,o.kt)("li",{parentName:"ul"},"application/vnd.google-apps.document (GDoc)"),(0,o.kt)("li",{parentName:"ul"},"application/vnd.google-apps.presentation (GSlide)"),(0,o.kt)("li",{parentName:"ul"},"application/vnd.google-apps.spreadsheet (GSheet)"),(0,o.kt)("li",{parentName:"ul"},"application/vnd.google.colaboratory (Notebook colab)"),(0,o.kt)("li",{parentName:"ul"},"application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)"),(0,o.kt)("li",{parentName:"ul"},"application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)")),(0,o.kt)("p",null,"It's possible to update or customize this. See the documentation of ",(0,o.kt)("inlineCode",{parentName:"p"},"GDriveLoader"),"."),(0,o.kt)("p",null,"But, the corresponding packages must be installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install unstructured\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'for doc in loader.load():\n    print("---")\n    print(doc.page_content.strip()[:60]+"...")\n')),(0,o.kt)("h3",{id:"customize-the-search-pattern"},"Customize the search pattern"),(0,o.kt)("p",null,"All parameter compatible with Google ",(0,o.kt)("a",{parentName:"p",href:"https://developers.google.com/drive/api/v3/reference/files/list"},(0,o.kt)("inlineCode",{parentName:"a"},"list()")),"\nAPI can be set."),(0,o.kt)("p",null,"To specify the new pattern of the Google request, you can use a ",(0,o.kt)("inlineCode",{parentName:"p"},"PromptTemplate()"),".\nThe variables for the prompt can be set with ",(0,o.kt)("inlineCode",{parentName:"p"},"kwargs")," in the constructor.\nSome pre-formated request are proposed (use ",(0,o.kt)("inlineCode",{parentName:"p"},"{query}"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"{folder_id}")," and/or ",(0,o.kt)("inlineCode",{parentName:"p"},"{mime_type}"),"):"),(0,o.kt)("p",null,"You can customize the criteria to select the files. A set of predefined filter are proposed:\n| template                               | description                                                           |\n| -------------------------------------- | --------------------------------------------------------------------- |\n| gdrive-all-in-folder                   | Return all compatible files from a ",(0,o.kt)("inlineCode",{parentName:"p"},"folder_id"),"                        |\n| gdrive-query                           | Search ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," in all drives                                          |\n| gdrive-by-name                         | Search file with name ",(0,o.kt)("inlineCode",{parentName:"p"},"query"),"                                        |\n| gdrive-query-in-folder                 | Search ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"folder_id")," (and sub-folders if ",(0,o.kt)("inlineCode",{parentName:"p"},"recursive=true"),")  |\n| gdrive-mime-type                       | Search a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"mime_type"),"                                         |\n| gdrive-mime-type-in-folder             | Search a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"mime_type")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"folder_id"),"                          |\n| gdrive-query-with-mime-type            | Search ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," with a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"mime_type"),"                            |\n| gdrive-query-with-mime-type-and-folder | Search ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," with a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"mime_type")," and in ",(0,o.kt)("inlineCode",{parentName:"p"},"folder_id"),"         |"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'loader = GoogleDriveLoader(\n    folder_id=folder_id,\n    recursive=False,\n    template="gdrive-query",  # Default template to use\n    query="machine learning",\n    num_results=2,            # Maximum number of file to load\n    supportsAllDrives=False,  # GDrive `list()` parameter\n)\nfor doc in loader.load():\n    print("---")\n    print(doc.page_content.strip()[:60]+"...")\n')),(0,o.kt)("p",null,"You can customize your pattern."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "PromptTemplate", "source": "langchain.prompts.prompt", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html", "title": "Google Drive"}]--\x3e\nfrom langchain.prompts.prompt import PromptTemplate\nloader = GoogleDriveLoader(\n    folder_id=folder_id,\n    recursive=False,\n    template=PromptTemplate(\n        input_variables=["query", "query_name"],\n        template="fullText contains \'{query}\' and name contains \'{query_name}\' and trashed=false",\n        ),  # Default template to use\n    query="machine learning",\n    query_name="ML",    \n    num_results=2,  # Maximum number of file to load\n)\nfor doc in loader.load():\n    print("---")\n    print(doc.page_content.strip()[:60]+"...")\n')),(0,o.kt)("h4",{id:"modes-for-gslide-and-gsheet"},"Modes for GSlide and GSheet"),(0,o.kt)("p",null,"The parameter mode accepts different values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"document": return the body of each document'),(0,o.kt)("li",{parentName:"ul"},'"snippets": return the description of each file (set in metadata of Google Drive files).')),(0,o.kt)("p",null,"The conversion can manage in Markdown format:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"bullet"),(0,o.kt)("li",{parentName:"ul"},"link"),(0,o.kt)("li",{parentName:"ul"},"table"),(0,o.kt)("li",{parentName:"ul"},"titles")),(0,o.kt)("p",null,"The parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"gslide_mode")," accepts different values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"single" : one document with ',"<","PAGE BREAK",">"),(0,o.kt)("li",{parentName:"ul"},'"slide" : one document by slide'),(0,o.kt)("li",{parentName:"ul"},'"elements" : one document for each elements.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'loader = GoogleDriveLoader(\n    template="gdrive-mime-type",\n    mime_type="application/vnd.google-apps.presentation", # Only GSlide files\n    gslide_mode="slide",\n    num_results=2,  # Maximum number of file to load\n)\nfor doc in loader.load():\n    print("---")\n    print(doc.page_content.strip()[:60]+"...")\n')),(0,o.kt)("p",null,"The parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"gsheet_mode")," accepts different values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"single"'),": Generate one document by line"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"elements"')," : one document with markdown array and ","<","PAGE BREAK",">"," tags.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'loader = GoogleDriveLoader(\n    template="gdrive-mime-type",\n    mime_type="application/vnd.google-apps.spreadsheet", # Only GSheet files\n    gsheet_mode="elements",\n    num_results=2,  # Maximum number of file to load\n)\nfor doc in loader.load():\n    print("---")\n    print(doc.page_content.strip()[:60]+"...")\n')),(0,o.kt)("h3",{id:"advanced-usage"},"Advanced usage"),(0,o.kt)("p",null,"All Google File have a 'description' in the metadata. This field can be used to memorize a summary of the document or others indexed tags (See method ",(0,o.kt)("inlineCode",{parentName:"p"},"lazy_update_description_with_summary()"),")."),(0,o.kt)("p",null,"If you use the ",(0,o.kt)("inlineCode",{parentName:"p"},'mode="snippet"'),", only the description will be used for the body. Else, the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata['summary']")," has the field."),(0,o.kt)("p",null,"Sometime, a specific filter can be used to extract some information from the filename, to select some files with specific criteria. You can use a filter."),(0,o.kt)("p",null,"Sometimes, many documents are returned. It's not necessary to have all documents in memory at the same time. You can use the lazy versions of methods, to get one document at a time. It's better to use a complex query in place of a recursive search. For each folder, a query must be applied if you activate ",(0,o.kt)("inlineCode",{parentName:"p"},"recursive=True"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\nloader = GoogleDriveLoader(\n                gdrive_api_file=os.environ["GOOGLE_ACCOUNT_FILE"],\n                num_results=2,\n                template="gdrive-query",\n                filter=lambda search, file: "#test" not in file.get(\'description\',\'\'),\n                query=\'machine learning\',\n                supportsAllDrives=False,\n                )\nfor doc in loader.load():\n    print("---")\n    print(doc.page_content.strip()[:60]+"...")\n')))}c.isMDXComponent=!0}}]);