"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20282],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},69732:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},o="AssemblyAI Audio Transcripts",s={unversionedId:"integrations/document_loaders/assemblyai",id:"integrations/document_loaders/assemblyai",title:"AssemblyAI Audio Transcripts",description:"The AssemblyAIAudioTranscriptLoader allows to transcribe audio files with the AssemblyAI API and loads the transcribed text into documents.",source:"@site/docs/integrations/document_loaders/assemblyai.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/assemblyai",permalink:"/langchain/docs/integrations/document_loaders/assemblyai",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Arxiv",permalink:"/langchain/docs/integrations/document_loaders/arxiv"},next:{title:"Async Chromium",permalink:"/langchain/docs/integrations/document_loaders/async_chromium"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2},{value:"Transcript Formats",id:"transcript-formats",level:2},{value:"Transcription Config",id:"transcription-config",level:2},{value:"Pass the API Key as argument",id:"pass-the-api-key-as-argument",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"assemblyai-audio-transcripts"},"AssemblyAI Audio Transcripts"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"AssemblyAIAudioTranscriptLoader")," allows to transcribe audio files with the ",(0,r.kt)("a",{parentName:"p",href:"https://www.assemblyai.com"},"AssemblyAI API")," and loads the transcribed text into documents."),(0,r.kt)("p",null,"To use it, you should have the ",(0,r.kt)("inlineCode",{parentName:"p"},"assemblyai")," python package installed, and the\nenvironment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"ASSEMBLYAI_API_KEY")," set with your API key. Alternatively, the API key can also be passed as an argument."),(0,r.kt)("p",null,"More info about AssemblyAI:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.assemblyai.com/"},"Website")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.assemblyai.com/dashboard/signup"},"Get a Free API key")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.assemblyai.com/docs"},"AssemblyAI API Docs"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"First, you need to install the ",(0,r.kt)("inlineCode",{parentName:"p"},"assemblyai")," python package."),(0,r.kt)("p",null,"You can find more info about it inside the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AssemblyAI/assemblyai-python-sdk"},"assemblyai-python-sdk GitHub repo"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install assemblyai\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"AssemblyAIAudioTranscriptLoader")," needs at least the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_path")," argument. Audio files can be specified as an URL or a local file path."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "AssemblyAIAudioTranscriptLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.assemblyai.AssemblyAIAudioTranscriptLoader.html", "title": "AssemblyAI Audio Transcripts"}]--\x3e\nfrom langchain.document_loaders import AssemblyAIAudioTranscriptLoader\n\naudio_file = "https://storage.googleapis.com/aai-docs-samples/nbc.mp3"\n# or a local file path: audio_file = "./nbc.mp3"\n\nloader = AssemblyAIAudioTranscriptLoader(file_path=audio_file)\n\ndocs = loader.load()\n')),(0,r.kt)("p",null,"Note: Calling ",(0,r.kt)("inlineCode",{parentName:"p"},"loader.load()")," blocks until the transcription is finished."),(0,r.kt)("p",null,"The transcribed text is available in the ",(0,r.kt)("inlineCode",{parentName:"p"},"page_content"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"docs[0].page_content\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"Load time, a new president and new congressional makeup. Same old ..."\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," contains the full JSON response with more meta information:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"docs[0].metadata\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{'language_code': <LanguageCode.en_us: 'en_us'>,\n 'audio_url': 'https://storage.googleapis.com/aai-docs-samples/nbc.mp3',\n 'punctuate': True,\n 'format_text': True,\n  ...\n}\n")),(0,r.kt)("h2",{id:"transcript-formats"},"Transcript Formats"),(0,r.kt)("p",null,"You can specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"transcript_format")," argument for different formats."),(0,r.kt)("p",null,"Depending on the format, one or more documents are returned. These are the different ",(0,r.kt)("inlineCode",{parentName:"p"},"TranscriptFormat")," options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TEXT"),": One document with the transcription text"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SENTENCES"),": Multiple documents, splits the transcription by each sentence"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PARAGRAPHS"),": Multiple documents, splits the transcription by each paragraph"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SUBTITLES_SRT"),": One document with the transcript exported in SRT subtitles format"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SUBTITLES_VTT"),": One document with the transcript exported in VTT subtitles format")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "TranscriptFormat", "source": "langchain.document_loaders.assemblyai", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.assemblyai.TranscriptFormat.html", "title": "AssemblyAI Audio Transcripts"}]--\x3e\nfrom langchain.document_loaders.assemblyai import TranscriptFormat\n\nloader = AssemblyAIAudioTranscriptLoader(\n    file_path="./your_file.mp3",\n    transcript_format=TranscriptFormat.SENTENCES,\n)\n\ndocs = loader.load()\n')),(0,r.kt)("h2",{id:"transcription-config"},"Transcription Config"),(0,r.kt)("p",null,"You can also specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," argument to use different audio intelligence models."),(0,r.kt)("p",null,"Visit the ",(0,r.kt)("a",{parentName:"p",href:"https://www.assemblyai.com/docs"},"AssemblyAI API Documentation")," to get an overview of all available models!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import assemblyai as aai\n\nconfig = aai.TranscriptionConfig(speaker_labels=True,\n                                 auto_chapters=True,\n                                 entity_detection=True\n)\n\nloader = AssemblyAIAudioTranscriptLoader(\n    file_path="./your_file.mp3",\n    config=config\n)\n')),(0,r.kt)("h2",{id:"pass-the-api-key-as-argument"},"Pass the API Key as argument"),(0,r.kt)("p",null,"Next to setting the API key as environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"ASSEMBLYAI_API_KEY"),", it is also possible to pass it as argument."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'loader = AssemblyAIAudioTranscriptLoader(\n    file_path="./your_file.mp3",\n    api_key="YOUR_KEY"\n)\n')))}d.isMDXComponent=!0}}]);