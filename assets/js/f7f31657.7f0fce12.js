"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13233],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),m=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=m(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=m(r),g=a,f=c["".concat(i,".").concat(g)]||c[g]||u[g]||l;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=g;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var m=2;m<l;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},90337:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var n=r(87462),a=(r(67294),r(3905));const l={},o="C Transformers",s={unversionedId:"integrations/llms/ctransformers",id:"integrations/llms/ctransformers",title:"C Transformers",description:"The C Transformers library provides Python bindings for GGML models.",source:"@site/docs/integrations/llms/ctransformers.md",sourceDirName:"integrations/llms",slug:"/integrations/llms/ctransformers",permalink:"/langchain/docs/integrations/llms/ctransformers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Cohere",permalink:"/langchain/docs/integrations/llms/cohere"},next:{title:"Databricks",permalink:"/langchain/docs/integrations/llms/databricks"}},i={},m=[],p={toc:m},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"c-transformers"},"C Transformers"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/marella/ctransformers"},"C Transformers")," library provides Python bindings for GGML models."),(0,a.kt)("p",null,"This example goes over how to use LangChain to interact with ",(0,a.kt)("inlineCode",{parentName:"p"},"C Transformers")," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/marella/ctransformers#supported-models"},"models"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Install")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"%pip install ctransformers\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Load Model")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "CTransformers", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.ctransformers.CTransformers.html", "title": "C Transformers"}]--\x3e\nfrom langchain.llms import CTransformers\n\nllm = CTransformers(model="marella/gpt-2-ggml")\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Generate Text")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'print(llm("AI is going to"))\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Streaming")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "StreamingStdOutCallbackHandler", "source": "langchain.callbacks.streaming_stdout", "docs": "https://api.python.langchain.com/en/latest/callbacks/langchain.callbacks.streaming_stdout.StreamingStdOutCallbackHandler.html", "title": "C Transformers"}]--\x3e\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\n\nllm = CTransformers(\n    model="marella/gpt-2-ggml", callbacks=[StreamingStdOutCallbackHandler()]\n)\n\nresponse = llm("AI is going to")\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"LLMChain")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import PromptTemplate, LLMChain\n\ntemplate = """Question: {question}\n\nAnswer:"""\n\nprompt = PromptTemplate(template=template, input_variables=["question"])\n\nllm_chain = LLMChain(prompt=prompt, llm=llm)\n\nresponse = llm_chain.run("What is AI?")\n')))}u.isMDXComponent=!0}}]);