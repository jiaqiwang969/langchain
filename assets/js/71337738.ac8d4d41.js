"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[19567],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(t),u=o,d=m["".concat(s,".").concat(u)]||m[u]||g[u]||l;return t?a.createElement(d,r(r({ref:n},p),{},{components:t})):a.createElement(d,r({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[m]="string"==typeof e?e:o,r[1]=i;for(var c=2;c<l;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},85485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=t(87462),o=(t(67294),t(3905));const l={},r="Tracking token usage",i={unversionedId:"modules/model_io/models/llms/token_usage_tracking",id:"modules/model_io/models/llms/token_usage_tracking",title:"Tracking token usage",description:"This notebook goes over how to track your token usage for specific calls. It is currently only implemented for the OpenAI API.",source:"@site/docs/modules/model_io/models/llms/token_usage_tracking.md",sourceDirName:"modules/model_io/models/llms",slug:"/modules/model_io/models/llms/token_usage_tracking",permalink:"/langchain/docs/modules/model_io/models/llms/token_usage_tracking",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Streaming",permalink:"/langchain/docs/modules/model_io/models/llms/streaming_llm"},next:{title:"Chat models",permalink:"/langchain/docs/modules/model_io/models/chat/"}},s={},c=[],p=(m="CodeOutputBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var m;const g={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tracking-token-usage"},"Tracking token usage"),(0,o.kt)("p",null,"This notebook goes over how to track your token usage for specific calls. It is currently only implemented for the OpenAI API."),(0,o.kt)("p",null,"Let's first look at an extremely simple example of tracking token usage for a single LLM call."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "Tracking token usage"}, {"imported": "get_openai_callback", "source": "langchain.callbacks", "docs": "https://api.python.langchain.com/en/latest/callbacks/langchain.callbacks.manager.get_openai_callback.html", "title": "Tracking token usage"}]--\x3e\nfrom langchain.llms import OpenAI\nfrom langchain.callbacks import get_openai_callback\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'llm = OpenAI(model_name="text-davinci-002", n=2, best_of=2)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'with get_openai_callback() as cb:\n    result = llm("Tell me a joke")\n    print(cb)\n')),(0,o.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    Tokens Used: 42\n        Prompt Tokens: 4\n        Completion Tokens: 38\n    Successful Requests: 1\n    Total Cost (USD): $0.00084\n"))),(0,o.kt)("p",null,"Anything inside the context manager will get tracked. Here's an example of using it to track multiple calls in sequence."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'with get_openai_callback() as cb:\n    result = llm("Tell me a joke")\n    result2 = llm("Tell me a joke")\n    print(cb.total_tokens)\n')),(0,o.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    91\n"))),(0,o.kt)("p",null,"If a chain or agent with multiple steps in it is used, it will track all those steps."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "load_tools", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_tools.html", "title": "Tracking token usage"}, {"imported": "initialize_agent", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html", "title": "Tracking token usage"}, {"imported": "AgentType", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html", "title": "Tracking token usage"}, {"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "Tracking token usage"}]--\x3e\nfrom langchain.agents import load_tools\nfrom langchain.agents import initialize_agent\nfrom langchain.agents import AgentType\nfrom langchain.llms import OpenAI\n\nllm = OpenAI(temperature=0)\ntools = load_tools(["serpapi", "llm-math"], llm=llm)\nagent = initialize_agent(\n    tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True\n)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'with get_openai_callback() as cb:\n    response = agent.run(\n        "Who is Olivia Wilde\'s boyfriend? What is his current age raised to the 0.23 power?"\n    )\n    print(f"Total Tokens: {cb.total_tokens}")\n    print(f"Prompt Tokens: {cb.prompt_tokens}")\n    print(f"Completion Tokens: {cb.completion_tokens}")\n    print(f"Total Cost (USD): ${cb.total_cost}")\n')),(0,o.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n     I need to find out who Olivia Wilde's boyfriend is and then calculate his age raised to the 0.23 power.\n    Action: Search\n    Action Input: \"Olivia Wilde boyfriend\"\n    Observation: Sudeikis and Wilde's relationship ended in November 2020. Wilde was publicly served with court documents regarding child custody while she was presenting Don't Worry Darling at CinemaCon 2022. In January 2021, Wilde began dating singer Harry Styles after meeting during the filming of Don't Worry Darling.\n    Thought: I need to find out Harry Styles' age.\n    Action: Search\n    Action Input: \"Harry Styles age\"\n    Observation: 29 years\n    Thought: I need to calculate 29 raised to the 0.23 power.\n    Action: Calculator\n    Action Input: 29^0.23\n    Observation: Answer: 2.169459462491557\n    \n    Thought: I now know the final answer.\n    Final Answer: Harry Styles, Olivia Wilde's boyfriend, is 29 years old and his age raised to the 0.23 power is 2.169459462491557.\n    \n    > Finished chain.\n    Total Tokens: 1506\n    Prompt Tokens: 1350\n    Completion Tokens: 156\n    Total Cost (USD): $0.03012\n"))))}d.isMDXComponent=!0}}]);