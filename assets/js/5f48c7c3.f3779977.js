"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[34569],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(g,l(l({ref:t},s),{},{components:n})):o.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:r,l[1]=c;for(var p=2;p<a;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},33685:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={},l="ChatGPT Data",c={unversionedId:"integrations/document_loaders/chatgpt_loader",id:"integrations/document_loaders/chatgpt_loader",title:"ChatGPT Data",description:"ChatGPT is an artificial intelligence (AI) chatbot developed by OpenAI.",source:"@site/docs/integrations/document_loaders/chatgpt_loader.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/chatgpt_loader",permalink:"/langchain/docs/integrations/document_loaders/chatgpt_loader",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Browserless",permalink:"/langchain/docs/integrations/document_loaders/browserless"},next:{title:"College Confidential",permalink:"/langchain/docs/integrations/document_loaders/college_confidential"}},i={},p=[],s=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var d;const u={toc:p},m="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"chatgpt-data"},"ChatGPT Data"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://chat.openai.com"},"ChatGPT")," is an artificial intelligence (AI) chatbot developed by OpenAI.")),(0,r.kt)("p",null,"This notebook covers how to load ",(0,r.kt)("inlineCode",{parentName:"p"},"conversations.json")," from your ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatGPT")," data export folder."),(0,r.kt)("p",null,"You can get your data export by email by going to: ",(0,r.kt)("a",{parentName:"p",href:"https://chat.openai.com/"},"https://chat.openai.com/")," -> (Profile) - Settings -> Export data -> Confirm export."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "ChatGPTLoader", "source": "langchain.document_loaders.chatgpt", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.chatgpt.ChatGPTLoader.html", "title": "ChatGPT Data"}]--\x3e\nfrom langchain.document_loaders.chatgpt import ChatGPTLoader\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'loader = ChatGPTLoader(log_file="./example_data/fake_conversations.json", num_logs=1)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"loader.load()\n")),(0,r.kt)(s,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    [Document(page_content=\"AI Overlords - AI on 2065-01-24 05:20:50: Greetings, humans. I am Hal 9000. You can trust me completely.\\n\\nAI Overlords - human on 2065-01-24 05:21:20: Nice to meet you, Hal. I hope you won't develop a mind of your own.\\n\\n\", metadata={'source': './example_data/fake_conversations.json'})]\n"))))}g.isMDXComponent=!0}}]);