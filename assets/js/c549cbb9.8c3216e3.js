"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[78399],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84831:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={},s="Browserless",i={unversionedId:"integrations/document_loaders/browserless",id:"integrations/document_loaders/browserless",title:"Browserless",description:"Browserless is a service that allows you to run headless Chrome instances in the cloud. It's a great way to run browser-based automation at scale without having to worry about managing your own infrastructure.",source:"@site/docs/integrations/document_loaders/browserless.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/browserless",permalink:"/langchain/docs/integrations/document_loaders/browserless",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Brave Search",permalink:"/langchain/docs/integrations/document_loaders/brave_search"},next:{title:"ChatGPT Data",permalink:"/langchain/docs/integrations/document_loaders/chatgpt_loader"}},c={},l=[],u=(p="CodeOutputBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var p;const d={toc:l},m="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"browserless"},"Browserless"),(0,o.kt)("p",null,"Browserless is a service that allows you to run headless Chrome instances in the cloud. It's a great way to run browser-based automation at scale without having to worry about managing your own infrastructure."),(0,o.kt)("p",null,"To use Browserless as a document loader, initialize a ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserlessLoader")," instance as shown in this notebook. Note that by default, ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserlessLoader")," returns the ",(0,o.kt)("inlineCode",{parentName:"p"},"innerText")," of the page's ",(0,o.kt)("inlineCode",{parentName:"p"},"body")," element. To disable this and get the raw HTML, set ",(0,o.kt)("inlineCode",{parentName:"p"},"text_content")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"False"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "BrowserlessLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.browserless.BrowserlessLoader.html", "title": "Browserless"}]--\x3e\nfrom langchain.document_loaders import BrowserlessLoader\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'BROWSERLESS_API_TOKEN = "YOUR_BROWSERLESS_API_TOKEN"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'loader = BrowserlessLoader(\n    api_token=BROWSERLESS_API_TOKEN,\n    urls=[\n        "https://en.wikipedia.org/wiki/Document_classification",\n    ],\n    text_content=True,\n)\n\ndocuments = loader.load()\n\nprint(documents[0].page_content[:1000])\n')),(0,o.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    Jump to content\n    Main menu\n    Search\n    Create account\n    Log in\n    Personal tools\n    Toggle the table of contents\n    Document classification\n    17 languages\n    Article\n    Talk\n    Read\n    Edit\n    View history\n    Tools\n    From Wikipedia, the free encyclopedia\n    \n    Document classification or document categorization is a problem in library science, information science and computer science. The task is to assign a document to one or more classes or categories. This may be done "manually" (or "intellectually") or algorithmically. The intellectual classification of documents has mostly been the province of library science, while the algorithmic classification of documents is mainly in information science and computer science. The problems are overlapping, however, and there is therefore interdisciplinary research on document classification.\n    \n    The documents to be classified may be texts, images, music, etc. Each kind of document possesses its special classification problems. When not otherwise specified, text classification is implied.\n    \n    Do\n'))))}h.isMDXComponent=!0}}]);