"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[17676],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>p});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),c=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return a.createElement(d.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=c(t),g=r,p=m["".concat(d,".").concat(g)]||m[g]||u[g]||i;return t?a.createElement(p,s(s({ref:n},l),{},{components:t})):a.createElement(p,s({ref:n},l))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=g;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[m]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},67744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const i={},s="Spacy Embedding",o={unversionedId:"integrations/text_embedding/spacy_embedding",id:"integrations/text_embedding/spacy_embedding",title:"Spacy Embedding",description:"Loading the Spacy embedding class to generate and query embeddings",source:"@site/docs/integrations/text_embedding/spacy_embedding.md",sourceDirName:"integrations/text_embedding",slug:"/integrations/text_embedding/spacy_embedding",permalink:"/langchain/docs/integrations/text_embedding/spacy_embedding",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Sentence Transformers Embeddings",permalink:"/langchain/docs/integrations/text_embedding/sentence_transformers"},next:{title:"TensorflowHub",permalink:"/langchain/docs/integrations/text_embedding/tensorflowhub"}},d={},c=[{value:"Loading the Spacy embedding class to generate and query embeddings",id:"loading-the-spacy-embedding-class-to-generate-and-query-embeddings",level:3},{value:"Import the necessary classes",id:"import-the-necessary-classes",level:4},{value:"Initialize SpacyEmbeddings.This will load the Spacy model into memory.",id:"initialize-spacyembeddingsthis-will-load-the-spacy-model-into-memory",level:4},{value:"Define some example texts . These could be any documents that you want to analyze - for example, news articles, social media posts, or product reviews.",id:"define-some-example-texts--these-could-be-any-documents-that-you-want-to-analyze---for-example-news-articles-social-media-posts-or-product-reviews",level:4},{value:"Generate and print embeddings for the texts . The SpacyEmbeddings class generates an embedding for each document, which is a numerical representation of the document&#39;s content. These embeddings can be used for various natural language processing tasks, such as document similarity comparison or text classification.",id:"generate-and-print-embeddings-for-the-texts--the-spacyembeddings-class-generates-an-embedding-for-each-document-which-is-a-numerical-representation-of-the-documents-content-these-embeddings-can-be-used-for-various-natural-language-processing-tasks-such-as-document-similarity-comparison-or-text-classification",level:4},{value:"Generate and print an embedding for a single piece of text. You can also generate an embedding for a single piece of text, such as a search query. This can be useful for tasks like information retrieval, where you want to find documents that are similar to a given query.",id:"generate-and-print-an-embedding-for-a-single-piece-of-text-you-can-also-generate-an-embedding-for-a-single-piece-of-text-such-as-a-search-query-this-can-be-useful-for-tasks-like-information-retrieval-where-you-want-to-find-documents-that-are-similar-to-a-given-query",level:4}],l={toc:c},m="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"spacy-embedding"},"Spacy Embedding"),(0,r.kt)("h3",{id:"loading-the-spacy-embedding-class-to-generate-and-query-embeddings"},"Loading the Spacy embedding class to generate and query embeddings"),(0,r.kt)("h4",{id:"import-the-necessary-classes"},"Import the necessary classes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "SpacyEmbeddings", "source": "langchain.embeddings.spacy_embeddings", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.spacy_embeddings.SpacyEmbeddings.html", "title": "Spacy Embedding"}]--\x3e\nfrom langchain.embeddings.spacy_embeddings import SpacyEmbeddings\n')),(0,r.kt)("h4",{id:"initialize-spacyembeddingsthis-will-load-the-spacy-model-into-memory"},"Initialize SpacyEmbeddings.This will load the Spacy model into memory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"embedder = SpacyEmbeddings()\n")),(0,r.kt)("h4",{id:"define-some-example-texts--these-could-be-any-documents-that-you-want-to-analyze---for-example-news-articles-social-media-posts-or-product-reviews"},"Define some example texts . These could be any documents that you want to analyze - for example, news articles, social media posts, or product reviews."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'texts = [\n    "The quick brown fox jumps over the lazy dog.",\n    "Pack my box with five dozen liquor jugs.",\n    "How vexingly quick daft zebras jump!",\n    "Bright vixens jump; dozy fowl quack.",\n]\n')),(0,r.kt)("h4",{id:"generate-and-print-embeddings-for-the-texts--the-spacyembeddings-class-generates-an-embedding-for-each-document-which-is-a-numerical-representation-of-the-documents-content-these-embeddings-can-be-used-for-various-natural-language-processing-tasks-such-as-document-similarity-comparison-or-text-classification"},"Generate and print embeddings for the texts . The SpacyEmbeddings class generates an embedding for each document, which is a numerical representation of the document's content. These embeddings can be used for various natural language processing tasks, such as document similarity comparison or text classification."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'embeddings = embedder.embed_documents(texts)\nfor i, embedding in enumerate(embeddings):\n    print(f"Embedding for document {i+1}: {embedding}")\n')),(0,r.kt)("h4",{id:"generate-and-print-an-embedding-for-a-single-piece-of-text-you-can-also-generate-an-embedding-for-a-single-piece-of-text-such-as-a-search-query-this-can-be-useful-for-tasks-like-information-retrieval-where-you-want-to-find-documents-that-are-similar-to-a-given-query"},"Generate and print an embedding for a single piece of text. You can also generate an embedding for a single piece of text, such as a search query. This can be useful for tasks like information retrieval, where you want to find documents that are similar to a given query."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'query = "Quick foxes and lazy dogs."\nquery_embedding = embedder.embed_query(query)\nprint(f"Embedding for query: {query_embedding}")\n')))}u.isMDXComponent=!0}}]);