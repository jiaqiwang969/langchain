"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[70060],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),h=r,d=m["".concat(i,".").concat(h)]||m[h]||u[h]||o;return t?a.createElement(d,l(l({ref:n},c),{},{components:t})):a.createElement(d,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=h;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[m]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},69093:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={},l="Spark Dataframe",s={unversionedId:"integrations/toolkits/spark",id:"integrations/toolkits/spark",title:"Spark Dataframe",description:"This notebook shows how to use agents to interact with a Spark DataFrame and Spark Connect. It is mostly optimized for question answering.",source:"@site/docs/integrations/toolkits/spark.md",sourceDirName:"integrations/toolkits",slug:"/integrations/toolkits/spark",permalink:"/langchain/docs/integrations/toolkits/spark",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Python",permalink:"/langchain/docs/integrations/toolkits/python"},next:{title:"Spark SQL",permalink:"/langchain/docs/integrations/toolkits/spark_sql"}},i={},p=[{value:"<code>Spark DataFrame</code> example",id:"spark-dataframe-example",level:2},{value:"<code>Spark Connect</code> example",id:"spark-connect-example",level:2}],c=(m="CodeOutputBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var m;const u={toc:p},h="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(h,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"spark-dataframe"},"Spark Dataframe"),(0,r.kt)("p",null,"This notebook shows how to use agents to interact with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Spark DataFrame")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Spark Connect"),". It is mostly optimized for question answering."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE: this agent calls the Python agent under the hood, which executes LLM generated Python code - this can be bad if the LLM generated Python code is harmful. Use cautiously.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nos.environ["OPENAI_API_KEY"] = "...input your openai api key here..."\n')),(0,r.kt)("h2",{id:"spark-dataframe-example"},(0,r.kt)("inlineCode",{parentName:"h2"},"Spark DataFrame")," example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "Spark Dataframe"}, {"imported": "create_spark_dataframe_agent", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_toolkits.spark.base.create_spark_dataframe_agent.html", "title": "Spark Dataframe"}]--\x3e\nfrom langchain.llms import OpenAI\nfrom pyspark.sql import SparkSession\nfrom langchain.agents import create_spark_dataframe_agent\n\nspark = SparkSession.builder.getOrCreate()\ncsv_file_path = "titanic.csv"\ndf = spark.read.csv(csv_file_path, header=True, inferSchema=True)\ndf.show()\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    23/05/15 20:33:10 WARN Utils: Your hostname, Mikes-Mac-mini.local resolves to a loopback address: 127.0.0.1; using 192.168.68.115 instead (on interface en1)\n    23/05/15 20:33:10 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address\n    Setting default log level to "WARN".\n    To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n    23/05/15 20:33:10 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n\n\n    +-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n    |PassengerId|Survived|Pclass|                Name|   Sex| Age|SibSp|Parch|          Ticket|   Fare|Cabin|Embarked|\n    +-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n    |          1|       0|     3|Braund, Mr. Owen ...|  male|22.0|    1|    0|       A/5 21171|   7.25| null|       S|\n    |          2|       1|     1|Cumings, Mrs. Joh...|female|38.0|    1|    0|        PC 17599|71.2833|  C85|       C|\n    |          3|       1|     3|Heikkinen, Miss. ...|female|26.0|    0|    0|STON/O2. 3101282|  7.925| null|       S|\n    |          4|       1|     1|Futrelle, Mrs. Ja...|female|35.0|    1|    0|          113803|   53.1| C123|       S|\n    |          5|       0|     3|Allen, Mr. Willia...|  male|35.0|    0|    0|          373450|   8.05| null|       S|\n    |          6|       0|     3|    Moran, Mr. James|  male|null|    0|    0|          330877| 8.4583| null|       Q|\n    |          7|       0|     1|McCarthy, Mr. Tim...|  male|54.0|    0|    0|           17463|51.8625|  E46|       S|\n    |          8|       0|     3|Palsson, Master. ...|  male| 2.0|    3|    1|          349909| 21.075| null|       S|\n    |          9|       1|     3|Johnson, Mrs. Osc...|female|27.0|    0|    2|          347742|11.1333| null|       S|\n    |         10|       1|     2|Nasser, Mrs. Nich...|female|14.0|    1|    0|          237736|30.0708| null|       C|\n    |         11|       1|     3|Sandstrom, Miss. ...|female| 4.0|    1|    1|         PP 9549|   16.7|   G6|       S|\n    |         12|       1|     1|Bonnell, Miss. El...|female|58.0|    0|    0|          113783|  26.55| C103|       S|\n    |         13|       0|     3|Saundercock, Mr. ...|  male|20.0|    0|    0|       A/5. 2151|   8.05| null|       S|\n    |         14|       0|     3|Andersson, Mr. An...|  male|39.0|    1|    5|          347082| 31.275| null|       S|\n    |         15|       0|     3|Vestrom, Miss. Hu...|female|14.0|    0|    0|          350406| 7.8542| null|       S|\n    |         16|       1|     2|Hewlett, Mrs. (Ma...|female|55.0|    0|    0|          248706|   16.0| null|       S|\n    |         17|       0|     3|Rice, Master. Eugene|  male| 2.0|    4|    1|          382652| 29.125| null|       Q|\n    |         18|       1|     2|Williams, Mr. Cha...|  male|null|    0|    0|          244373|   13.0| null|       S|\n    |         19|       0|     3|Vander Planke, Mr...|female|31.0|    1|    0|          345763|   18.0| null|       S|\n    |         20|       1|     3|Masselmani, Mrs. ...|female|null|    0|    0|            2649|  7.225| null|       C|\n    +-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n    only showing top 20 rows\n    \n'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"agent = create_spark_dataframe_agent(llm=OpenAI(temperature=0), df=df, verbose=True)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent.run("how many rows are there?")\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n    Thought: I need to find out how many rows are in the dataframe\n    Action: python_repl_ast\n    Action Input: df.count()\n    Observation: 891\n    Thought: I now know the final answer\n    Final Answer: There are 891 rows in the dataframe.\n    \n    > Finished chain.\n\n\n\n\n\n    'There are 891 rows in the dataframe.'\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent.run("how many people have more than 3 siblings")\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n    Thought: I need to find out how many people have more than 3 siblings\n    Action: python_repl_ast\n    Action Input: df.filter(df.SibSp > 3).count()\n    Observation: 30\n    Thought: I now know the final answer\n    Final Answer: 30 people have more than 3 siblings.\n    \n    > Finished chain.\n\n\n\n\n\n    '30 people have more than 3 siblings.'\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent.run("whats the square root of the average age?")\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n    Thought: I need to get the average age first\n    Action: python_repl_ast\n    Action Input: df.agg({\"Age\": \"mean\"}).collect()[0][0]\n    Observation: 29.69911764705882\n    Thought: I now have the average age, I need to get the square root\n    Action: python_repl_ast\n    Action Input: math.sqrt(29.69911764705882)\n    Observation: name 'math' is not defined\n    Thought: I need to import math first\n    Action: python_repl_ast\n    Action Input: import math\n    Observation: \n    Thought: I now have the math library imported, I can get the square root\n    Action: python_repl_ast\n    Action Input: math.sqrt(29.69911764705882)\n    Observation: 5.449689683556195\n    Thought: I now know the final answer\n    Final Answer: 5.449689683556195\n    \n    > Finished chain.\n\n\n\n\n\n    '5.449689683556195'\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"spark.stop()\n")),(0,r.kt)("h2",{id:"spark-connect-example"},(0,r.kt)("inlineCode",{parentName:"h2"},"Spark Connect")," example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# in apache-spark root directory. (tested here with "spark-3.4.0-bin-hadoop3 and later")\n# To launch Spark with support for Spark Connect sessions, run the start-connect-server.sh script.\n./sbin/start-connect-server.sh --packages org.apache.spark:spark-connect_2.12:3.4.0\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from pyspark.sql import SparkSession\n\n# Now that the Spark server is running, we can connect to it remotely using Spark Connect. We do this by\n# creating a remote Spark session on the client where our application runs. Before we can do that, we need\n# to make sure to stop the existing regular Spark session because it cannot coexist with the remote\n# Spark Connect session we are about to create.\nSparkSession.builder.master("local[*]").getOrCreate().stop()\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    23/05/08 10:06:09 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# The command we used above to launch the server configured Spark to run as localhost:15002.\n# So now we can create a remote Spark session on the client using the following command.\nspark = SparkSession.builder.remote("sc://localhost:15002").getOrCreate()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'csv_file_path = "titanic.csv"\ndf = spark.read.csv(csv_file_path, header=True, inferSchema=True)\ndf.show()\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    +-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n    |PassengerId|Survived|Pclass|                Name|   Sex| Age|SibSp|Parch|          Ticket|   Fare|Cabin|Embarked|\n    +-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n    |          1|       0|     3|Braund, Mr. Owen ...|  male|22.0|    1|    0|       A/5 21171|   7.25| null|       S|\n    |          2|       1|     1|Cumings, Mrs. Joh...|female|38.0|    1|    0|        PC 17599|71.2833|  C85|       C|\n    |          3|       1|     3|Heikkinen, Miss. ...|female|26.0|    0|    0|STON/O2. 3101282|  7.925| null|       S|\n    |          4|       1|     1|Futrelle, Mrs. Ja...|female|35.0|    1|    0|          113803|   53.1| C123|       S|\n    |          5|       0|     3|Allen, Mr. Willia...|  male|35.0|    0|    0|          373450|   8.05| null|       S|\n    |          6|       0|     3|    Moran, Mr. James|  male|null|    0|    0|          330877| 8.4583| null|       Q|\n    |          7|       0|     1|McCarthy, Mr. Tim...|  male|54.0|    0|    0|           17463|51.8625|  E46|       S|\n    |          8|       0|     3|Palsson, Master. ...|  male| 2.0|    3|    1|          349909| 21.075| null|       S|\n    |          9|       1|     3|Johnson, Mrs. Osc...|female|27.0|    0|    2|          347742|11.1333| null|       S|\n    |         10|       1|     2|Nasser, Mrs. Nich...|female|14.0|    1|    0|          237736|30.0708| null|       C|\n    |         11|       1|     3|Sandstrom, Miss. ...|female| 4.0|    1|    1|         PP 9549|   16.7|   G6|       S|\n    |         12|       1|     1|Bonnell, Miss. El...|female|58.0|    0|    0|          113783|  26.55| C103|       S|\n    |         13|       0|     3|Saundercock, Mr. ...|  male|20.0|    0|    0|       A/5. 2151|   8.05| null|       S|\n    |         14|       0|     3|Andersson, Mr. An...|  male|39.0|    1|    5|          347082| 31.275| null|       S|\n    |         15|       0|     3|Vestrom, Miss. Hu...|female|14.0|    0|    0|          350406| 7.8542| null|       S|\n    |         16|       1|     2|Hewlett, Mrs. (Ma...|female|55.0|    0|    0|          248706|   16.0| null|       S|\n    |         17|       0|     3|Rice, Master. Eugene|  male| 2.0|    4|    1|          382652| 29.125| null|       Q|\n    |         18|       1|     2|Williams, Mr. Cha...|  male|null|    0|    0|          244373|   13.0| null|       S|\n    |         19|       0|     3|Vander Planke, Mr...|female|31.0|    1|    0|          345763|   18.0| null|       S|\n    |         20|       1|     3|Masselmani, Mrs. ...|female|null|    0|    0|            2649|  7.225| null|       C|\n    +-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n    only showing top 20 rows\n    \n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "create_spark_dataframe_agent", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_toolkits.spark.base.create_spark_dataframe_agent.html", "title": "Spark Dataframe"}, {"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "Spark Dataframe"}]--\x3e\nfrom langchain.agents import create_spark_dataframe_agent\nfrom langchain.llms import OpenAI\nimport os\n\nos.environ["OPENAI_API_KEY"] = "...input your openai api key here..."\n\nagent = create_spark_dataframe_agent(llm=OpenAI(temperature=0), df=df, verbose=True)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent.run(\n    """\nwho bought the most expensive ticket?\nYou can find all supported function types in https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/dataframe.html\n"""\n)\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n    \n    Thought: I need to find the row with the highest fare\n    Action: python_repl_ast\n    Action Input: df.sort(df.Fare.desc()).first()\n    Observation: Row(PassengerId=259, Survived=1, Pclass=1, Name='Ward, Miss. Anna', Sex='female', Age=35.0, SibSp=0, Parch=0, Ticket='PC 17755', Fare=512.3292, Cabin=None, Embarked='C')\n    Thought: I now know the name of the person who bought the most expensive ticket\n    Final Answer: Miss. Anna Ward\n    \n    > Finished chain.\n\n\n\n\n\n    'Miss. Anna Ward'\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"spark.stop()\n")))}d.isMDXComponent=!0}}]);