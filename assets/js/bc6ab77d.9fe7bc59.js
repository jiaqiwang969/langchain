"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),h=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=h(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=h(n),m=o,d=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(d,r(r({ref:t},p),{},{components:n})):a.createElement(d,r({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,r[1]=s;for(var h=2;h<i;h++)r[h]=n[h];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>g,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const i=(r="CodeOutputBlock",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var r;const s={toc:[{value:"Sequential Chain",id:"sequential-chain",level:2},{value:"Memory in Sequential Chains",id:"memory-in-sequential-chains",level:3}]},l="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.llms import OpenAI\nfrom langchain.chains import LLMChain\nfrom langchain.prompts import PromptTemplate\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# This is an LLMChain to write a synopsis given a title of a play.\nllm = OpenAI(temperature=.7)\nsynopsis_template = """You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\n\nTitle: {title}\nPlaywright: This is a synopsis for the above play:"""\nsynopsis_prompt_template = PromptTemplate(input_variables=["title"], template=synopsis_template)\nsynopsis_chain = LLMChain(llm=llm, prompt=synopsis_prompt_template)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# This is an LLMChain to write a review of a play given a synopsis.\nllm = OpenAI(temperature=.7)\ntemplate = """You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n\nPlay Synopsis:\n{synopsis}\nReview from a New York Times play critic of the above play:"""\nprompt_template = PromptTemplate(input_variables=["synopsis"], template=template)\nreview_chain = LLMChain(llm=llm, prompt=prompt_template)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# This is the overall chain where we run these two chains in sequence.\nfrom langchain.chains import SimpleSequentialChain\noverall_chain = SimpleSequentialChain(chains=[synopsis_chain, review_chain], verbose=True)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'review = overall_chain.run("Tragedy at sunset on the beach")\n')),(0,o.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new SimpleSequentialChain chain...\n    \n    \n    Tragedy at Sunset on the Beach is a story of a young couple, Jack and Sarah, who are in love and looking forward to their future together. On the night of their anniversary, they decide to take a walk on the beach at sunset. As they are walking, they come across a mysterious figure, who tells them that their love will be tested in the near future. \n    \n    The figure then tells the couple that the sun will soon set, and with it, a tragedy will strike. If Jack and Sarah can stay together and pass the test, they will be granted everlasting love. However, if they fail, their love will be lost forever.\n    \n    The play follows the couple as they struggle to stay together and battle the forces that threaten to tear them apart. Despite the tragedy that awaits them, they remain devoted to one another and fight to keep their love alive. In the end, the couple must decide whether to take a chance on their future together or succumb to the tragedy of the sunset.\n    \n    \n    Tragedy at Sunset on the Beach is an emotionally gripping story of love, hope, and sacrifice. Through the story of Jack and Sarah, the audience is taken on a journey of self-discovery and the power of love to overcome even the greatest of obstacles. \n    \n    The play's talented cast brings the characters to life, allowing us to feel the depths of their emotion and the intensity of their struggle. With its compelling story and captivating performances, this play is sure to draw in audiences and leave them on the edge of their seats. \n    \n    The play's setting of the beach at sunset adds a touch of poignancy and romanticism to the story, while the mysterious figure serves to keep the audience enthralled. Overall, Tragedy at Sunset on the Beach is an engaging and thought-provoking play that is sure to leave audiences feeling inspired and hopeful.\n    \n    > Finished chain.\n"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"print(review)\n")),(0,o.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    Tragedy at Sunset on the Beach is an emotionally gripping story of love, hope, and sacrifice. Through the story of Jack and Sarah, the audience is taken on a journey of self-discovery and the power of love to overcome even the greatest of obstacles. \n    \n    The play's talented cast brings the characters to life, allowing us to feel the depths of their emotion and the intensity of their struggle. With its compelling story and captivating performances, this play is sure to draw in audiences and leave them on the edge of their seats. \n    \n    The play's setting of the beach at sunset adds a touch of poignancy and romanticism to the story, while the mysterious figure serves to keep the audience enthralled. Overall, Tragedy at Sunset on the Beach is an engaging and thought-provoking play that is sure to leave audiences feeling inspired and hopeful.\n"))),(0,o.kt)("h2",{id:"sequential-chain"},"Sequential Chain"),(0,o.kt)("p",null,"Of course, not all sequential chains will be as simple as passing a single string as an argument and getting a single string as output for all steps in the chain. In this next example, we will experiment with more complex chains that involve multiple inputs, and where there also multiple final outputs. "),(0,o.kt)("p",null,"Of particular importance is how we name the input/output variables. In the above example we didn't have to think about that because we were just passing the output of one chain directly as input to the next, but here we do have worry about that because we have multiple inputs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# This is an LLMChain to write a synopsis given a title of a play and the era it is set in.\nllm = OpenAI(temperature=.7)\nsynopsis_template = """You are a playwright. Given the title of play and the era it is set in, it is your job to write a synopsis for that title.\n\nTitle: {title}\nEra: {era}\nPlaywright: This is a synopsis for the above play:"""\nsynopsis_prompt_template = PromptTemplate(input_variables=["title", "era"], template=synopsis_template)\nsynopsis_chain = LLMChain(llm=llm, prompt=synopsis_prompt_template, output_key="synopsis")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# This is an LLMChain to write a review of a play given a synopsis.\nllm = OpenAI(temperature=.7)\ntemplate = """You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n\nPlay Synopsis:\n{synopsis}\nReview from a New York Times play critic of the above play:"""\nprompt_template = PromptTemplate(input_variables=["synopsis"], template=template)\nreview_chain = LLMChain(llm=llm, prompt=prompt_template, output_key="review")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# This is the overall chain where we run these two chains in sequence.\nfrom langchain.chains import SequentialChain\noverall_chain = SequentialChain(\n    chains=[synopsis_chain, review_chain],\n    input_variables=["era", "title"],\n    # Here we return multiple variables\n    output_variables=["synopsis", "review"],\n    verbose=True)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'overall_chain({"title":"Tragedy at sunset on the beach", "era": "Victorian England"})\n')),(0,o.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new SequentialChain chain...\n    \n    > Finished chain.\n\n\n\n\n\n    {'title': 'Tragedy at sunset on the beach',\n     'era': 'Victorian England',\n     'synopsis': \"\\n\\nThe play follows the story of John, a young man from a wealthy Victorian family, who dreams of a better life for himself. He soon meets a beautiful young woman named Mary, who shares his dream. The two fall in love and decide to elope and start a new life together.\\n\\nOn their journey, they make their way to a beach at sunset, where they plan to exchange their vows of love. Unbeknownst to them, their plans are overheard by John's father, who has been tracking them. He follows them to the beach and, in a fit of rage, confronts them. \\n\\nA physical altercation ensues, and in the struggle, John's father accidentally stabs Mary in the chest with his sword. The two are left in shock and disbelief as Mary dies in John's arms, her last words being a declaration of her love for him.\\n\\nThe tragedy of the play comes to a head when John, broken and with no hope of a future, chooses to take his own life by jumping off the cliffs into the sea below. \\n\\nThe play is a powerful story of love, hope, and loss set against the backdrop of 19th century England.\",\n     'review': \"\\n\\nThe latest production from playwright X is a powerful and heartbreaking story of love and loss set against the backdrop of 19th century England. The play follows John, a young man from a wealthy Victorian family, and Mary, a beautiful young woman with whom he falls in love. The two decide to elope and start a new life together, and the audience is taken on a journey of hope and optimism for the future.\\n\\nUnfortunately, their dreams are cut short when John's father discovers them and in a fit of rage, fatally stabs Mary. The tragedy of the play is further compounded when John, broken and without hope, takes his own life. The storyline is not only realistic, but also emotionally compelling, drawing the audience in from start to finish.\\n\\nThe acting was also commendable, with the actors delivering believable and nuanced performances. The playwright and director have successfully crafted a timeless tale of love and loss that will resonate with audiences for years to come. Highly recommended.\"}\n"))),(0,o.kt)("h3",{id:"memory-in-sequential-chains"},"Memory in Sequential Chains"),(0,o.kt)("p",null,"Sometimes you may want to pass along some context to use in each step of the chain or in a later part of the chain, but maintaining and chaining together the input/output variables can quickly get messy.  Using ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleMemory")," is a convenient way to do manage this and clean up your chains."),(0,o.kt)("p",null,"For example, using the previous playwright ",(0,o.kt)("inlineCode",{parentName:"p"},"SequentialChain"),", lets say you wanted to include some context about date, time and location of the play, and using the generated synopsis and review, create some social media post text.  You could add these new context variables as ",(0,o.kt)("inlineCode",{parentName:"p"},"input_variables"),", or we can add a ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleMemory")," to the chain to manage this context:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.chains import SequentialChain\nfrom langchain.memory import SimpleMemory\n\nllm = OpenAI(temperature=.7)\ntemplate = """You are a social media manager for a theater company.  Given the title of play, the era it is set in, the date,time and location, the synopsis of the play, and the review of the play, it is your job to write a social media post for that play.\n\nHere is some context about the time and location of the play:\nDate and Time: {time}\nLocation: {location}\n\nPlay Synopsis:\n{synopsis}\nReview from a New York Times play critic of the above play:\n{review}\n\nSocial Media Post:\n"""\nprompt_template = PromptTemplate(input_variables=["synopsis", "review", "time", "location"], template=template)\nsocial_chain = LLMChain(llm=llm, prompt=prompt_template, output_key="social_post_text")\n\noverall_chain = SequentialChain(\n    memory=SimpleMemory(memories={"time": "December 25th, 8pm PST", "location": "Theater in the Park"}),\n    chains=[synopsis_chain, review_chain, social_chain],\n    input_variables=["era", "title"],\n    # Here we return multiple variables\n    output_variables=["social_post_text"],\n    verbose=True)\n\noverall_chain({"title":"Tragedy at sunset on the beach", "era": "Victorian England"})\n')),(0,o.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new SequentialChain chain...\n    \n    > Finished chain.\n\n\n\n\n\n    {'title': 'Tragedy at sunset on the beach',\n     'era': 'Victorian England',\n     'time': 'December 25th, 8pm PST',\n     'location': 'Theater in the Park',\n     'social_post_text': \"\\nSpend your Christmas night with us at Theater in the Park and experience the heartbreaking story of love and loss that is 'A Walk on the Beach'. Set in Victorian England, this romantic tragedy follows the story of Frances and Edward, a young couple whose love is tragically cut short. Don't miss this emotional and thought-provoking production that is sure to leave you in tears. #AWalkOnTheBeach #LoveAndLoss #TheaterInThePark #VictorianEngland\"}\n"))))}h.isMDXComponent=!0;const p={},u="Sequential",c={unversionedId:"modules/chains/foundational/sequential_chains",id:"modules/chains/foundational/sequential_chains",title:"Sequential",description:"The next step after calling a language model is make a series of calls to a language model. This is particularly useful when you want to take the output from one call and use it as the input to another.",source:"@site/docs/modules/chains/foundational/sequential_chains.mdx",sourceDirName:"modules/chains/foundational",slug:"/modules/chains/foundational/sequential_chains",permalink:"/langchain/docs/modules/chains/foundational/sequential_chains",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Router",permalink:"/langchain/docs/modules/chains/foundational/router"},next:{title:"Transformation",permalink:"/langchain/docs/modules/chains/foundational/transformation"}},m={},d=[],y={toc:d},f="wrapper";function g(e){let{components:t,...n}=e;return(0,o.kt)(f,(0,a.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sequential"},"Sequential"),(0,o.kt)("p",null,"The next step after calling a language model is make a series of calls to a language model. This is particularly useful when you want to take the output from one call and use it as the input to another."),(0,o.kt)("p",null,"In this notebook we will walk through some examples for how to do this, using sequential chains. Sequential chains allow you to connect multiple chains and compose them into pipelines that execute some specific scenario. There are two types of sequential chains:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SimpleSequentialChain"),": The simplest form of sequential chains, where each step has a singular input/output, and the output of one step is the input to the next."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SequentialChain"),": A more general form of sequential chains, allowing for multiple inputs/outputs.")),(0,o.kt)(h,{mdxType:"Example"}))}g.isMDXComponent=!0}}]);