"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8330],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},20410:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={},i="SVM",s={unversionedId:"integrations/retrievers/svm",id:"integrations/retrievers/svm",title:"SVM",description:"Support vector machines (SVMs) are a set of supervised learning methods used for classification, regression and outliers detection.",source:"@site/docs/integrations/retrievers/svm.md",sourceDirName:"integrations/retrievers",slug:"/integrations/retrievers/svm",permalink:"/langchain/docs/integrations/retrievers/svm",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"RePhraseQueryRetriever",permalink:"/langchain/docs/integrations/retrievers/re_phrase"},next:{title:"TF-IDF",permalink:"/langchain/docs/integrations/retrievers/tf_idf"}},p={},l=[{value:"Create New Retriever with Texts",id:"create-new-retriever-with-texts",level:2},{value:"Use Retriever",id:"use-retriever",level:2}],c=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var u;const m={toc:l},d="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"svm"},"SVM"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://scikit-learn.org/stable/modules/svm.html#support-vector-machines"},"Support vector machines (SVMs)")," are a set of supervised learning methods used for classification, regression and outliers detection.")),(0,a.kt)("p",null,"This notebook goes over how to use a retriever that under the hood uses an ",(0,a.kt)("inlineCode",{parentName:"p"},"SVM")," using ",(0,a.kt)("inlineCode",{parentName:"p"},"scikit-learn")," package."),(0,a.kt)("p",null,"Largely based on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/karpathy/randomfun/blob/master/knn_vs_svm.html"},"https://github.com/karpathy/randomfun/blob/master/knn_vs_svm.html")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install scikit-learn\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install lark\n")),(0,a.kt)("p",null,"We want to use ",(0,a.kt)("inlineCode",{parentName:"p"},"OpenAIEmbeddings")," so we have to get the OpenAI API Key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import os\nimport getpass\n\nos.environ["OPENAI_API_KEY"] = getpass.getpass("OpenAI API Key:")\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    OpenAI API Key: \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "SVMRetriever", "source": "langchain.retrievers", "docs": "https://api.python.langchain.com/en/latest/retrievers/langchain.retrievers.svm.SVMRetriever.html", "title": "SVM"}, {"imported": "OpenAIEmbeddings", "source": "langchain.embeddings", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.openai.OpenAIEmbeddings.html", "title": "SVM"}]--\x3e\nfrom langchain.retrievers import SVMRetriever\nfrom langchain.embeddings import OpenAIEmbeddings\n')),(0,a.kt)("h2",{id:"create-new-retriever-with-texts"},"Create New Retriever with Texts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'retriever = SVMRetriever.from_texts(\n    ["foo", "bar", "world", "hello", "foo bar"], OpenAIEmbeddings()\n)\n')),(0,a.kt)("h2",{id:"use-retriever"},"Use Retriever"),(0,a.kt)("p",null,"We can now use the retriever!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'result = retriever.get_relevant_documents("foo")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"result\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    [Document(page_content='foo', metadata={}),\n     Document(page_content='foo bar', metadata={}),\n     Document(page_content='hello', metadata={}),\n     Document(page_content='world', metadata={})]\n"))))}g.isMDXComponent=!0}}]);