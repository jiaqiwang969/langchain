"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7753],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},g=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||a;return n?o.createElement(f,l(l({ref:t},g),{},{components:n})):o.createElement(f,l({ref:t},g))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73795:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={},l="HuggingFace Hub Tools",i={unversionedId:"integrations/tools/huggingface_tools",id:"integrations/tools/huggingface_tools",title:"HuggingFace Hub Tools",description:"Huggingface Tools that supporting text I/O can be",source:"@site/docs/integrations/tools/huggingface_tools.md",sourceDirName:"integrations/tools",slug:"/integrations/tools/huggingface_tools",permalink:"/langchain/docs/integrations/tools/huggingface_tools",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"GraphQL",permalink:"/langchain/docs/integrations/tools/graphql"},next:{title:"Human as a tool",permalink:"/langchain/docs/integrations/tools/human_tools"}},c={},s=[],g=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const p={toc:s},d="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"huggingface-hub-tools"},"HuggingFace Hub Tools"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/docs/transformers/v4.29.0/en/custom_tools"},"Huggingface Tools")," that supporting text I/O can be\nloaded directly using the ",(0,r.kt)("inlineCode",{parentName:"p"},"load_huggingface_tool")," function.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Requires transformers>=4.29.0 and huggingface_hub>=0.14.1\npip install --upgrade transformers huggingface_hub > /dev/null\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "load_huggingface_tool", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_huggingface_tool.html", "title": "HuggingFace Hub Tools"}]--\x3e\nfrom langchain.agents import load_huggingface_tool\n\ntool = load_huggingface_tool("lysandre/hf-model-downloads")\n\nprint(f"{tool.name}: {tool.description}")\n')),(0,r.kt)(g,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    model_download_counter: This is a tool that returns the most downloaded model of a given task on the Hugging Face Hub. It takes the name of the category (such as text-classification, depth-estimation, etc), and returns the name of the checkpoint\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'tool.run("text-classification")\n')),(0,r.kt)(g,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    'facebook/bart-large-mnli'\n"))))}f.isMDXComponent=!0}}]);