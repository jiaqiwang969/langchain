"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[99247],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||i[d]||p;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,o=new Array(p);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var m=2;m<p;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>p,metadata:()=>l,toc:()=>m});var r=n(87462),a=(n(67294),n(3905));const p={},o="Select by n-gram overlap",l={unversionedId:"modules/model_io/prompts/example_selectors/ngram_overlap",id:"modules/model_io/prompts/example_selectors/ngram_overlap",title:"Select by n-gram overlap",description:"The NGramOverlapExampleSelector selects and orders examples based on which examples are most similar to the input, according to an ngram overlap score. The ngram overlap score is a float between 0.0 and 1.0, inclusive.",source:"@site/docs/modules/model_io/prompts/example_selectors/ngram_overlap.md",sourceDirName:"modules/model_io/prompts/example_selectors",slug:"/modules/model_io/prompts/example_selectors/ngram_overlap",permalink:"/langchain/docs/modules/model_io/prompts/example_selectors/ngram_overlap",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Select by maximal marginal relevance (MMR)",permalink:"/langchain/docs/modules/model_io/prompts/example_selectors/mmr"},next:{title:"Select by similarity",permalink:"/langchain/docs/modules/model_io/prompts/example_selectors/similarity"}},s={},m=[],c=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var u;const i={toc:m},d="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"select-by-n-gram-overlap"},"Select by n-gram overlap"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"NGramOverlapExampleSelector")," selects and orders examples based on which examples are most similar to the input, according to an ngram overlap score. The ngram overlap score is a float between 0.0 and 1.0, inclusive. "),(0,a.kt)("p",null,"The selector allows for a threshold score to be set. Examples with an ngram overlap score less than or equal to the threshold are excluded. The threshold is set to -1.0, by default, so will not exclude any examples, only reorder them. Setting the threshold to 0.0 will exclude examples that have no ngram overlaps with the input."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "PromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html", "title": "Select by n-gram overlap"}, {"imported": "NGramOverlapExampleSelector", "source": "langchain.prompts.example_selector.ngram_overlap", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.example_selector.ngram_overlap.NGramOverlapExampleSelector.html", "title": "Select by n-gram overlap"}, {"imported": "FewShotPromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.few_shot.FewShotPromptTemplate.html", "title": "Select by n-gram overlap"}, {"imported": "PromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html", "title": "Select by n-gram overlap"}]--\x3e\nfrom langchain.prompts import PromptTemplate\nfrom langchain.prompts.example_selector.ngram_overlap import NGramOverlapExampleSelector\nfrom langchain.prompts import FewShotPromptTemplate, PromptTemplate\n\nexample_prompt = PromptTemplate(\n    input_variables=["input", "output"],\n    template="Input: {input}\\nOutput: {output}",\n)\n\n# Examples of a pretend task of creating antonyms.\nexamples = [\n    {"input": "happy", "output": "sad"},\n    {"input": "tall", "output": "short"},\n    {"input": "energetic", "output": "lethargic"},\n    {"input": "sunny", "output": "gloomy"},\n    {"input": "windy", "output": "calm"},\n]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Examples of a fictional translation task.\nexamples = [\n    {"input": "See Spot run.", "output": "Ver correr a Spot."},\n    {"input": "My dog barks.", "output": "Mi perro ladra."},\n    {"input": "Spot can run.", "output": "Spot puede correr."},\n]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'example_prompt = PromptTemplate(\n    input_variables=["input", "output"],\n    template="Input: {input}\\nOutput: {output}",\n)\nexample_selector = NGramOverlapExampleSelector(\n    # The examples it has available to choose from.\n    examples=examples,\n    # The PromptTemplate being used to format the examples.\n    example_prompt=example_prompt,\n    # The threshold, at which selector stops.\n    # It is set to -1.0 by default.\n    threshold=-1.0,\n    # For negative threshold:\n    # Selector sorts examples by ngram overlap score, and excludes none.\n    # For threshold greater than 1.0:\n    # Selector excludes all examples, and returns an empty list.\n    # For threshold equal to 0.0:\n    # Selector sorts examples by ngram overlap score,\n    # and excludes those with no ngram overlap with input.\n)\ndynamic_prompt = FewShotPromptTemplate(\n    # We provide an ExampleSelector instead of examples.\n    example_selector=example_selector,\n    example_prompt=example_prompt,\n    prefix="Give the Spanish translation of every input",\n    suffix="Input: {sentence}\\nOutput:",\n    input_variables=["sentence"],\n)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# An example input with large ngram overlap with "Spot can run."\n# and no overlap with "My dog barks."\nprint(dynamic_prompt.format(sentence="Spot can run fast."))\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Give the Spanish translation of every input\n    \n    Input: Spot can run.\n    Output: Spot puede correr.\n    \n    Input: See Spot run.\n    Output: Ver correr a Spot.\n    \n    Input: My dog barks.\n    Output: Mi perro ladra.\n    \n    Input: Spot can run fast.\n    Output:\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# You can add examples to NGramOverlapExampleSelector as well.\nnew_example = {"input": "Spot plays fetch.", "output": "Spot juega a buscar."}\n\nexample_selector.add_example(new_example)\nprint(dynamic_prompt.format(sentence="Spot can run fast."))\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Give the Spanish translation of every input\n    \n    Input: Spot can run.\n    Output: Spot puede correr.\n    \n    Input: See Spot run.\n    Output: Ver correr a Spot.\n    \n    Input: Spot plays fetch.\n    Output: Spot juega a buscar.\n    \n    Input: My dog barks.\n    Output: Mi perro ladra.\n    \n    Input: Spot can run fast.\n    Output:\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# You can set a threshold at which examples are excluded.\n# For example, setting threshold equal to 0.0\n# excludes examples with no ngram overlaps with input.\n# Since "My dog barks." has no ngram overlaps with "Spot can run fast."\n# it is excluded.\nexample_selector.threshold = 0.0\nprint(dynamic_prompt.format(sentence="Spot can run fast."))\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Give the Spanish translation of every input\n    \n    Input: Spot can run.\n    Output: Spot puede correr.\n    \n    Input: See Spot run.\n    Output: Ver correr a Spot.\n    \n    Input: Spot plays fetch.\n    Output: Spot juega a buscar.\n    \n    Input: Spot can run fast.\n    Output:\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Setting small nonzero threshold\nexample_selector.threshold = 0.09\nprint(dynamic_prompt.format(sentence="Spot can play fetch."))\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Give the Spanish translation of every input\n    \n    Input: Spot can run.\n    Output: Spot puede correr.\n    \n    Input: Spot plays fetch.\n    Output: Spot juega a buscar.\n    \n    Input: Spot can play fetch.\n    Output:\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Setting threshold greater than 1.0\nexample_selector.threshold = 1.0 + 1e-9\nprint(dynamic_prompt.format(sentence="Spot can play fetch."))\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Give the Spanish translation of every input\n    \n    Input: Spot can play fetch.\n    Output:\n"))))}h.isMDXComponent=!0}}]);