"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57693],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>y});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),u=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},i="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),i=u(r),d=o,y=i["".concat(l,".").concat(d)]||i[d]||m[d]||a;return r?t.createElement(y,p(p({ref:n},c),{},{components:r})):t.createElement(y,p({ref:n},c))}));function y(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[i]="string"==typeof e?e:o,p[1]=s;for(var u=2;u<a;u++)p[u]=r[u];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},94651:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>p,default:()=>y,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var t=r(87462),o=(r(67294),r(3905));const a={},p="Enum parser",s={unversionedId:"modules/model_io/output_parsers/enum",id:"modules/model_io/output_parsers/enum",title:"Enum parser",description:"This notebook shows how to use an Enum output parser.",source:"@site/docs/modules/model_io/output_parsers/enum.md",sourceDirName:"modules/model_io/output_parsers",slug:"/modules/model_io/output_parsers/enum",permalink:"/langchain/docs/modules/model_io/output_parsers/enum",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Datetime parser",permalink:"/langchain/docs/modules/model_io/output_parsers/datetime"},next:{title:"Auto-fixing parser",permalink:"/langchain/docs/modules/model_io/output_parsers/output_fixing_parser"}},l={},u=[],c=(i="CodeOutputBlock",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var i;const m={toc:u},d="wrapper";function y(e){let{components:n,...r}=e;return(0,o.kt)(d,(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"enum-parser"},"Enum parser"),(0,o.kt)("p",null,"This notebook shows how to use an Enum output parser."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "EnumOutputParser", "source": "langchain.output_parsers.enum", "docs": "https://api.python.langchain.com/en/latest/output_parsers/langchain.output_parsers.enum.EnumOutputParser.html", "title": "Enum parser"}]--\x3e\nfrom langchain.output_parsers.enum import EnumOutputParser\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from enum import Enum\n\n\nclass Colors(Enum):\n    RED = "red"\n    GREEN = "green"\n    BLUE = "blue"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"parser = EnumOutputParser(enum=Colors)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'parser.parse("red")\n')),(0,o.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    <Colors.RED: 'red'>\n"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# Can handle spaces\nparser.parse(" green")\n')),(0,o.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    <Colors.GREEN: 'green'>\n"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# And new lines\nparser.parse("blue\\n")\n')),(0,o.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    <Colors.BLUE: 'blue'>\n"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# And raises errors when appropriate\nparser.parse("yellow")\n')),(0,o.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    File ~/workplace/langchain/langchain/output_parsers/enum.py:25, in EnumOutputParser.parse(self, response)\n         24 try:\n    ---\x3e 25     return self.enum(response.strip())\n         26 except ValueError:\n\n\n    File ~/.pyenv/versions/3.9.1/lib/python3.9/enum.py:315, in EnumMeta.__call__(cls, value, names, module, qualname, type, start)\n        314 if names is None:  # simple value lookup\n    --\x3e 315     return cls.__new__(cls, value)\n        316 # otherwise, functional API: we're creating a new Enum type\n\n\n    File ~/.pyenv/versions/3.9.1/lib/python3.9/enum.py:611, in Enum.__new__(cls, value)\n        610 if result is None and exc is None:\n    --\x3e 611     raise ve_exc\n        612 elif exc is None:\n\n\n    ValueError: 'yellow' is not a valid Colors\n\n    \n    During handling of the above exception, another exception occurred:\n\n\n    OutputParserException                     Traceback (most recent call last)\n\n    Cell In[8], line 2\n          1 # And raises errors when appropriate\n    ----\x3e 2 parser.parse(\"yellow\")\n\n\n    File ~/workplace/langchain/langchain/output_parsers/enum.py:27, in EnumOutputParser.parse(self, response)\n         25     return self.enum(response.strip())\n         26 except ValueError:\n    ---\x3e 27     raise OutputParserException(\n         28         f\"Response '{response}' is not one of the \"\n         29         f\"expected values: {self._valid_values}\"\n         30     )\n\n\n    OutputParserException: Response 'yellow' is not one of the expected values: ['red', 'green', 'blue']\n"))))}y.isMDXComponent=!0}}]);