"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[59837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),h=r,g=m["".concat(i,".").concat(h)]||m[h]||u[h]||l;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=h;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[m]="string"==typeof e?e:r,o[1]=p;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},17668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const l={},o="Aleph Alpha",p={unversionedId:"integrations/llms/aleph_alpha",id:"integrations/llms/aleph_alpha",title:"Aleph Alpha",description:"The Luminous series is a family of large language models.",source:"@site/docs/integrations/llms/aleph_alpha.md",sourceDirName:"integrations/llms",slug:"/integrations/llms/aleph_alpha",permalink:"/langchain/docs/integrations/llms/aleph_alpha",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"AI21",permalink:"/langchain/docs/integrations/llms/ai21"},next:{title:"Amazon API Gateway",permalink:"/langchain/docs/integrations/llms/amazon_api_gateway"}},i={},s=[],c=(m="CodeOutputBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var m;const u={toc:s},h="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"aleph-alpha"},"Aleph Alpha"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.aleph-alpha.com/docs/introduction/luminous/"},"The Luminous series")," is a family of large language models."),(0,r.kt)("p",null,"This example goes over how to use LangChain to interact with Aleph Alpha models"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Install the package\npip install aleph-alpha-client\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# create a new token: https://docs.aleph-alpha.com/docs/account/#create-a-new-token\n\nfrom getpass import getpass\n\nALEPH_ALPHA_API_KEY = getpass()\n")),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"     \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "AlephAlpha", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.aleph_alpha.AlephAlpha.html", "title": "Aleph Alpha"}]--\x3e\nfrom langchain.llms import AlephAlpha\nfrom langchain import PromptTemplate, LLMChain\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'template = """Q: {question}\n\nA:"""\n\nprompt = PromptTemplate(template=template, input_variables=["question"])\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'llm = AlephAlpha(\n    model="luminous-extended",\n    maximum_tokens=20,\n    stop_sequences=["Q:"],\n    aleph_alpha_api_key=ALEPH_ALPHA_API_KEY,\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"llm_chain = LLMChain(prompt=prompt, llm=llm)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'question = "What is AI?"\n\nllm_chain.run(question)\n')),(0,r.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    ' Artificial Intelligence (AI) is the simulation of human intelligence processes by machines, especially computer systems.\\n'\n"))))}g.isMDXComponent=!0}}]);