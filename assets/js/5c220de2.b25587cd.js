"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[65521],{3905:(o,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>x});var n=t(67294);function a(o,e,t){return e in o?Object.defineProperty(o,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):o[e]=t,o}function r(o,e){var t=Object.keys(o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(o);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),t.push.apply(t,n)}return t}function l(o){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(o,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(t,e))}))}return o}function s(o,e){if(null==o)return{};var t,n,a=function(o,e){if(null==o)return{};var t,n,a={},r=Object.keys(o);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(a[t]=o[t]);return a}(o,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(o);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(o,t)&&(a[t]=o[t])}return a}var c=n.createContext({}),f=function(o){var e=n.useContext(c),t=e;return o&&(t="function"==typeof o?o(e):l(l({},e),o)),t},p=function(o){var e=f(o.components);return n.createElement(c.Provider,{value:e},o.children)},d="mdxType",i={inlineCode:"code",wrapper:function(o){var e=o.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(o,e){var t=o.components,a=o.mdxType,r=o.originalType,c=o.parentName,p=s(o,["components","mdxType","originalType","parentName"]),d=f(t),y=a,x=d["".concat(c,".").concat(y)]||d[y]||i[y]||r;return t?n.createElement(x,l(l({ref:e},p),{},{components:t})):n.createElement(x,l({ref:e},p))}));function x(o,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof o||a){var r=t.length,l=new Array(r);l[0]=y;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=o,s[d]="string"==typeof o?o:a,l[1]=s;for(var f=2;f<r;f++)l[f]=t[f];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},39063:(o,e,t)=>{t.r(e),t.d(e,{assets:()=>x,contentTitle:()=>i,default:()=>g,frontMatter:()=>d,metadata:()=>y,toc:()=>u});var n=t(87462),a=(t(67294),t(3905));const r=o=>function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)},l=r("CodeOutputBlock"),s=r("HTMLOutputBlock"),c={toc:[{value:"Show a progress bar",id:"show-a-progress-bar",level:2},{value:"Use multithreading",id:"use-multithreading",level:2},{value:"Change loader class",id:"change-loader-class",level:2},{value:"Auto-detect file encodings with TextLoader",id:"auto-detect-file-encodings-with-textloader",level:2},{value:"A. Default Behavior",id:"a-default-behavior",level:3},{value:"B. Silent fail",id:"b-silent-fail",level:3},{value:"C. Auto detect encodings",id:"c-auto-detect-encodings",level:3}]},f="wrapper";function p(o){let{components:e,...t}=o;return(0,a.kt)(f,(0,n.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Under the hood, by default this uses the ",(0,a.kt)("a",{parentName:"p",href:"/docs/integrations/document_loaders/unstructured_file.html"},"UnstructuredLoader"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import DirectoryLoader\n")),(0,a.kt)("p",null,"We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"glob")," parameter to control which files to load. Note that here it doesn't load the ",(0,a.kt)("inlineCode",{parentName:"p"},".rst")," file or the ",(0,a.kt)("inlineCode",{parentName:"p"},".html")," files."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader = DirectoryLoader('../', glob=\"**/*.md\")\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"docs = loader.load()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"len(docs)\n")),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    1\n"))),(0,a.kt)("h2",{id:"show-a-progress-bar"},"Show a progress bar"),(0,a.kt)("p",null,"By default a progress bar will not be shown. To show a progress bar, install the ",(0,a.kt)("inlineCode",{parentName:"p"},"tqdm")," library (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"pip install tqdm"),"), and set the ",(0,a.kt)("inlineCode",{parentName:"p"},"show_progress")," parameter to ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader = DirectoryLoader('../', glob=\"**/*.md\", show_progress=True)\ndocs = loader.load()\n")),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Requirement already satisfied: tqdm in /Users/jon/.pyenv/versions/3.9.16/envs/microbiome-app/lib/python3.9/site-packages (4.65.0)\n\n\n    0it [00:00, ?it/s]\n"))),(0,a.kt)("h2",{id:"use-multithreading"},"Use multithreading"),(0,a.kt)("p",null,"By default the loading happens in one thread. In order to utilize several threads set the ",(0,a.kt)("inlineCode",{parentName:"p"},"use_multithreading")," flag to true."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader = DirectoryLoader('../', glob=\"**/*.md\", use_multithreading=True)\ndocs = loader.load()\n")),(0,a.kt)("h2",{id:"change-loader-class"},"Change loader class"),(0,a.kt)("p",null,"By default this uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"UnstructuredLoader")," class. However, you can change up the type of loader pretty easily."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import TextLoader\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader = DirectoryLoader('../', glob=\"**/*.md\", loader_cls=TextLoader)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"docs = loader.load()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"len(docs)\n")),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    1\n"))),(0,a.kt)("p",null,"If you need to load Python source code files, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"PythonLoader"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import PythonLoader\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader = DirectoryLoader('../../../../../', glob=\"**/*.py\", loader_cls=PythonLoader)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"docs = loader.load()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"len(docs)\n")),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    691\n"))),(0,a.kt)("h2",{id:"auto-detect-file-encodings-with-textloader"},"Auto-detect file encodings with TextLoader"),(0,a.kt)("p",null,"In this example we will see some strategies that can be useful when loading a big list of arbitrary files from a directory using the ",(0,a.kt)("inlineCode",{parentName:"p"},"TextLoader")," class."),(0,a.kt)("p",null,"First to illustrate the problem, let's try to load multiple text with arbitrary encodings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"path = '../../../../../tests/integration_tests/examples'\nloader = DirectoryLoader(path, glob=\"**/*.txt\", loader_cls=TextLoader)\n")),(0,a.kt)("h3",{id:"a-default-behavior"},"A. Default Behavior"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader.load()\n")),(0,a.kt)(s,{center:!0,mdxType:"HTMLOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace"><span style="color: #800000; text-decoration-color: #800000">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">Traceback </span><span style="color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold">(most recent call last)</span><span style="color: #800000; text-decoration-color: #800000"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f">/data/source/langchain/langchain/document_loaders/</span><span style="color: #808000; text-decoration-color: #808000; font-weight: bold">text.py</span>:<span style="color: #0000ff; text-decoration-color: #0000ff">29</span> in <span style="color: #00ff00; text-decoration-color: #00ff00">load</span>                             <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">26 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span>text = <span style="color: #808000; text-decoration-color: #808000">""</span>                                                                           <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">27 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">with</span> <span style="color: #00ffff; text-decoration-color: #00ffff">open</span>(<span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.file_path, encoding=<span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.encoding) <span style="color: #0000ff; text-decoration-color: #0000ff">as</span> f:                             <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">28 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">try</span>:                                                                            <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #800000; text-decoration-color: #800000">\u2771 </span>29 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   </span>text = f.read()                                                             <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">30 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">except</span> <span style="color: #00ffff; text-decoration-color: #00ffff">UnicodeDecodeError</span> <span style="color: #0000ff; text-decoration-color: #0000ff">as</span> e:                                                 <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">31 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">if</span> <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.autodetect_encoding:                                                <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">32 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   </span>detected_encodings = <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.detect_file_encodings()                       <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f">/home/spike/.pyenv/versions/3.9.11/lib/python3.9/</span><span style="color: #808000; text-decoration-color: #808000; font-weight: bold">codecs.py</span>:<span style="color: #0000ff; text-decoration-color: #0000ff">322</span> in <span style="color: #00ff00; text-decoration-color: #00ff00">decode</span>                         <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> 319 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">def</span> <span style="color: #00ff00; text-decoration-color: #00ff00">decode</span>(<span style="color: #00ffff; text-decoration-color: #00ffff">self</span>, <span style="color: #00ffff; text-decoration-color: #00ffff">input</span>, final=<span style="color: #0000ff; text-decoration-color: #0000ff">False</span>):                                                 <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> 320 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"># decode input (taking the buffer into account)</span>                                   <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> 321 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span>data = <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.buffer + <span style="color: #00ffff; text-decoration-color: #00ffff">input</span>                                                        <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #800000; text-decoration-color: #800000">\u2771 </span> 322 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span>(result, consumed) = <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>._buffer_decode(data, <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.errors, final)                <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> 323 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"># keep undecoded input until the next call</span>                                        <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> 324 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span><span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.buffer = data[consumed:]                                                     <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> 325 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">return</span> result                                                                     <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span style="color: #ff0000; text-decoration-color: #ff0000; font-weight: bold">UnicodeDecodeError: </span><span style="color: #008000; text-decoration-color: #008000">\'utf-8\'</span> codec can\'t decode byte <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0xca</span> in position <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0</span>: invalid continuation byte\n\n<span style="font-style: italic">The above exception was the direct cause of the following exception:</span>\n\n<span style="color: #800000; text-decoration-color: #800000">\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">Traceback </span><span style="color: #bf7f7f; text-decoration-color: #bf7f7f; font-weight: bold">(most recent call last)</span><span style="color: #800000; text-decoration-color: #800000"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> in <span style="color: #00ff00; text-decoration-color: #00ff00">&lt;module&gt;</span>:<span style="color: #0000ff; text-decoration-color: #0000ff">1</span>                                                                                    <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #800000; text-decoration-color: #800000">\u2771 </span>1 loader.load()                                                                                <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">2 </span>                                                                                             <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f">/data/source/langchain/langchain/document_loaders/</span><span style="color: #808000; text-decoration-color: #808000; font-weight: bold">directory.py</span>:<span style="color: #0000ff; text-decoration-color: #0000ff">84</span> in <span style="color: #00ff00; text-decoration-color: #00ff00">load</span>                        <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">81 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">if</span> <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.silent_errors:                                              <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">82 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span>logger.warning(e)                                               <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">83 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">else</span>:                                                               <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #800000; text-decoration-color: #800000">\u2771 </span>84 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">raise</span> e                                                         <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">85 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">finally</span>:                                                                <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">86 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">if</span> pbar:                                                            <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">87 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span>pbar.update(<span style="color: #0000ff; text-decoration-color: #0000ff">1</span>)                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f">/data/source/langchain/langchain/document_loaders/</span><span style="color: #808000; text-decoration-color: #808000; font-weight: bold">directory.py</span>:<span style="color: #0000ff; text-decoration-color: #0000ff">78</span> in <span style="color: #00ff00; text-decoration-color: #00ff00">load</span>                        <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">75 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">if</span> i.is_file():                                                                 <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">76 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">if</span> _is_visible(i.relative_to(p)) <span style="color: #ff00ff; text-decoration-color: #ff00ff">or</span> <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.load_hidden:                       <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">77 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">try</span>:                                                                    <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #800000; text-decoration-color: #800000">\u2771 </span>78 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span>sub_docs = <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.loader_cls(<span style="color: #00ffff; text-decoration-color: #00ffff">str</span>(i), **<span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.loader_kwargs).load()     <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">79 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span>docs.extend(sub_docs)                                               <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">80 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">except</span> <span style="color: #00ffff; text-decoration-color: #00ffff">Exception</span> <span style="color: #0000ff; text-decoration-color: #0000ff">as</span> e:                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">81 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">if</span> <span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.silent_errors:                                              <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f">/data/source/langchain/langchain/document_loaders/</span><span style="color: #808000; text-decoration-color: #808000; font-weight: bold">text.py</span>:<span style="color: #0000ff; text-decoration-color: #0000ff">44</span> in <span style="color: #00ff00; text-decoration-color: #00ff00">load</span>                             <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>                                                                                                  <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">41 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">except</span> <span style="color: #00ffff; text-decoration-color: #00ffff">UnicodeDecodeError</span>:                                          <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">42 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">continue</span>                                                        <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">43 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">else</span>:                                                                       <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span> <span style="color: #800000; text-decoration-color: #800000">\u2771 </span>44 <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">raise</span> <span style="color: #00ffff; text-decoration-color: #00ffff">RuntimeError</span>(<span style="color: #808000; text-decoration-color: #808000">f"Error loading {</span><span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.file_path<span style="color: #808000; text-decoration-color: #808000">}"</span>) <span style="color: #0000ff; text-decoration-color: #0000ff">from</span> <span style="color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline">e</span>            <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">45 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">except</span> <span style="color: #00ffff; text-decoration-color: #00ffff">Exception</span> <span style="color: #0000ff; text-decoration-color: #0000ff">as</span> e:                                                          <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">46 </span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">\u2502   \u2502   \u2502   \u2502   </span><span style="color: #0000ff; text-decoration-color: #0000ff">raise</span> <span style="color: #00ffff; text-decoration-color: #00ffff">RuntimeError</span>(<span style="color: #808000; text-decoration-color: #808000">f"Error loading {</span><span style="color: #00ffff; text-decoration-color: #00ffff">self</span>.file_path<span style="color: #808000; text-decoration-color: #808000">}"</span>) <span style="color: #0000ff; text-decoration-color: #0000ff">from</span> <span style="color: #00ffff; text-decoration-color: #00ffff; text-decoration: underline">e</span>                <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2502</span>   <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">47 </span>                                                                                            <span style="color: #800000; text-decoration-color: #800000">\u2502</span>\n<span style="color: #800000; text-decoration-color: #800000">\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f</span>\n<span style="color: #ff0000; text-decoration-color: #ff0000; font-weight: bold">RuntimeError: </span>Error loading ..<span style="color: #800080; text-decoration-color: #800080">/../../../../tests/integration_tests/examples/</span><span style="color: #ff00ff; text-decoration-color: #ff00ff">example-non-utf8.txt</span>\n</pre>\n'))),(0,a.kt)("p",null,"The file ",(0,a.kt)("inlineCode",{parentName:"p"},"example-non-utf8.txt")," uses a different encoding, so the ",(0,a.kt)("inlineCode",{parentName:"p"},"load()")," function fails with a helpful message indicating which file failed decoding. "),(0,a.kt)("p",null,"With the default behavior of ",(0,a.kt)("inlineCode",{parentName:"p"},"TextLoader")," any failure to load any of the documents will fail the whole loading process and no documents are loaded. "),(0,a.kt)("h3",{id:"b-silent-fail"},"B. Silent fail"),(0,a.kt)("p",null,"We can pass the parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"silent_errors")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"DirectoryLoader")," to skip the files which could not be loaded and continue the load process."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'loader = DirectoryLoader(path, glob="**/*.txt", loader_cls=TextLoader, silent_errors=True)\ndocs = loader.load()\n')),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Error loading ../../../../../tests/integration_tests/examples/example-non-utf8.txt\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"doc_sources = [doc.metadata['source']  for doc in docs]\ndoc_sources\n")),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    ['../../../../../tests/integration_tests/examples/whatsapp_chat.txt',\n     '../../../../../tests/integration_tests/examples/example-utf8.txt']\n"))),(0,a.kt)("h3",{id:"c-auto-detect-encodings"},"C. Auto detect encodings"),(0,a.kt)("p",null,"We can also ask ",(0,a.kt)("inlineCode",{parentName:"p"},"TextLoader")," to auto detect the file encoding before failing, by passing the ",(0,a.kt)("inlineCode",{parentName:"p"},"autodetect_encoding")," to the loader class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"text_loader_kwargs={'autodetect_encoding': True}\nloader = DirectoryLoader(path, glob=\"**/*.txt\", loader_cls=TextLoader, loader_kwargs=text_loader_kwargs)\ndocs = loader.load()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"doc_sources = [doc.metadata['source']  for doc in docs]\ndoc_sources\n")),(0,a.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    ['../../../../../tests/integration_tests/examples/example-non-utf8.txt',\n     '../../../../../tests/integration_tests/examples/whatsapp_chat.txt',\n     '../../../../../tests/integration_tests/examples/example-utf8.txt']\n"))))}p.isMDXComponent=!0;const d={},i="File Directory",y={unversionedId:"modules/data_connection/document_loaders/file_directory",id:"modules/data_connection/document_loaders/file_directory",title:"File Directory",description:"This covers how to load all documents in a directory.",source:"@site/docs/modules/data_connection/document_loaders/file_directory.mdx",sourceDirName:"modules/data_connection/document_loaders",slug:"/modules/data_connection/document_loaders/file_directory",permalink:"/langchain/docs/modules/data_connection/document_loaders/file_directory",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"CSV",permalink:"/langchain/docs/modules/data_connection/document_loaders/csv"},next:{title:"HTML",permalink:"/langchain/docs/modules/data_connection/document_loaders/html"}},x={},u=[],m={toc:u},h="wrapper";function g(o){let{components:e,...t}=o;return(0,a.kt)(h,(0,n.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"file-directory"},"File Directory"),(0,a.kt)("p",null,"This covers how to load all documents in a directory."),(0,a.kt)(p,{mdxType:"Example"}))}g.isMDXComponent=!0}}]);