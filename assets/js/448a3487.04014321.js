"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[77363],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>h});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var c=a.createContext({}),s=function(n){var e=a.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=s(n.components);return a.createElement(c.Provider,{value:e},n.children)},g="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,c=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),g=s(t),u=r,h=g["".concat(c,".").concat(u)]||g[u]||d[u]||o;return t?a.createElement(h,i(i({ref:e},p),{},{components:t})):a.createElement(h,i({ref:e},p))}));function h(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l[g]="string"==typeof n?n:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},32351:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const o={},i="WandB Tracing",l={unversionedId:"integrations/providers/wandb_tracing",id:"integrations/providers/wandb_tracing",title:"WandB Tracing",description:"There are two recommended ways to trace your LangChains:",source:"@site/docs/integrations/providers/wandb_tracing.md",sourceDirName:"integrations/providers",slug:"/integrations/providers/wandb_tracing",permalink:"/langchain/docs/integrations/providers/wandb_tracing",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Vespa",permalink:"/langchain/docs/integrations/providers/vespa"},next:{title:"Weights & Biases",permalink:"/langchain/docs/integrations/providers/wandb_tracking"}},c={},s=[],p=(g="CodeOutputBlock",function(n){return console.warn("Component "+g+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)});var g;const d={toc:s},u="wrapper";function h(n){let{components:e,...t}=n;return(0,r.kt)(u,(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wandb-tracing"},"WandB Tracing"),(0,r.kt)("p",null,"There are two recommended ways to trace your LangChains:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Setting the ",(0,r.kt)("inlineCode",{parentName:"li"},"LANGCHAIN_WANDB_TRACING"),' environment variable to "true".'),(0,r.kt)("li",{parentName:"ol"},"Using a context manager with tracing_enabled() to trace a particular block of code.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note")," if the environment variable is set, all code will be traced, regardless of whether or not it's within the context manager."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "initialize_agent", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html", "title": "WandB Tracing"}, {"imported": "load_tools", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_tools.html", "title": "WandB Tracing"}, {"imported": "AgentType", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html", "title": "WandB Tracing"}, {"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "WandB Tracing"}, {"imported": "wandb_tracing_enabled", "source": "langchain.callbacks", "docs": "https://api.python.langchain.com/en/latest/callbacks/langchain.callbacks.manager.wandb_tracing_enabled.html", "title": "WandB Tracing"}]--\x3e\nimport os\n\nos.environ["LANGCHAIN_WANDB_TRACING"] = "true"\n\n# wandb documentation to configure wandb using env variables\n# https://docs.wandb.ai/guides/track/advanced/environment-variables\n# here we are configuring the wandb project name\nos.environ["WANDB_PROJECT"] = "langchain-tracing"\n\nfrom langchain.agents import initialize_agent, load_tools\nfrom langchain.agents import AgentType\nfrom langchain.llms import OpenAI\nfrom langchain.callbacks import wandb_tracing_enabled\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# Agent run with tracing. Ensure that OPENAI_API_KEY is set appropriately to run this example.\n\nllm = OpenAI(temperature=0)\ntools = load_tools(["llm-math"], llm=llm)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent = initialize_agent(\n    tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True\n)\n\nagent.run("What is 2 raised to .123243 power?")  # this should be traced\n# A url with for the trace sesion like the following should print in your console:\n# https://wandb.ai/<wandb_entity>/<wandb_project>/runs/<run_id>\n# The url can be used to view the trace session in wandb.\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# Now, we unset the environment variable and use a context manager.\nif "LANGCHAIN_WANDB_TRACING" in os.environ:\n    del os.environ["LANGCHAIN_WANDB_TRACING"]\n\n# enable tracing using a context manager\nwith wandb_tracing_enabled():\n    agent.run("What is 5 raised to .123243 power?")  # this should be traced\n\nagent.run("What is 2 raised to .123243 power?")  # this should not be traced\n')),(0,r.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n     I need to use a calculator to solve this.\n    Action: Calculator\n    Action Input: 5^.123243\n    Observation: Answer: 1.2193914912400514\n    Thought: I now know the final answer.\n    Final Answer: 1.2193914912400514\n    \n    > Finished chain.\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to use a calculator to solve this.\n    Action: Calculator\n    Action Input: 2^.123243\n    Observation: Answer: 1.0891804557407723\n    Thought: I now know the final answer.\n    Final Answer: 1.0891804557407723\n    \n    > Finished chain.\n\n\n\n\n\n    '1.0891804557407723'\n"))))}h.isMDXComponent=!0}}]);