"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[69918],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),h=r,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||o;return n?a.createElement(d,l(l({ref:t},c),{},{components:n})):a.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},17491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},l="GooseAI",i={unversionedId:"integrations/llms/gooseai",id:"integrations/llms/gooseai",title:"GooseAI",description:"GooseAI is a fully managed NLP-as-a-Service, delivered via API. GooseAI provides access to these models.",source:"@site/docs/integrations/llms/gooseai.md",sourceDirName:"integrations/llms",slug:"/integrations/llms/gooseai",permalink:"/langchain/docs/integrations/llms/gooseai",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Google Vertex AI PaLM",permalink:"/langchain/docs/integrations/llms/google_vertex_ai_palm"},next:{title:"GPT4All",permalink:"/langchain/docs/integrations/llms/gpt4all"}},s={},p=[{value:"Install openai",id:"install-openai",level:2},{value:"Imports",id:"imports",level:2},{value:"Set the Environment API Key",id:"set-the-environment-api-key",level:2},{value:"Create the GooseAI instance",id:"create-the-gooseai-instance",level:2},{value:"Create a Prompt Template",id:"create-a-prompt-template",level:2},{value:"Initiate the LLMChain",id:"initiate-the-llmchain",level:2},{value:"Run the LLMChain",id:"run-the-llmchain",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gooseai"},"GooseAI"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GooseAI")," is a fully managed NLP-as-a-Service, delivered via API. GooseAI provides access to ",(0,r.kt)("a",{parentName:"p",href:"https://goose.ai/docs/models"},"these models"),"."),(0,r.kt)("p",null,"This notebook goes over how to use Langchain with ",(0,r.kt)("a",{parentName:"p",href:"https://goose.ai/"},"GooseAI"),"."),(0,r.kt)("h2",{id:"install-openai"},"Install openai"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"openai")," package is required to use the GooseAI API. Install ",(0,r.kt)("inlineCode",{parentName:"p"},"openai")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"pip3 install openai"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"$ pip3 install openai\n")),(0,r.kt)("h2",{id:"imports"},"Imports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "GooseAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.gooseai.GooseAI.html", "title": "GooseAI"}]--\x3e\nimport os\nfrom langchain.llms import GooseAI\nfrom langchain import PromptTemplate, LLMChain\n')),(0,r.kt)("h2",{id:"set-the-environment-api-key"},"Set the Environment API Key"),(0,r.kt)("p",null,"Make sure to get your API key from GooseAI. You are given $10 in free credits to test different models."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from getpass import getpass\n\nGOOSEAI_API_KEY = getpass()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'os.environ["GOOSEAI_API_KEY"] = GOOSEAI_API_KEY\n')),(0,r.kt)("h2",{id:"create-the-gooseai-instance"},"Create the GooseAI instance"),(0,r.kt)("p",null,"You can specify different parameters such as the model name, max tokens generated, temperature, etc."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"llm = GooseAI()\n")),(0,r.kt)("h2",{id:"create-a-prompt-template"},"Create a Prompt Template"),(0,r.kt)("p",null,"We will create a prompt template for Question and Answer."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'template = """Question: {question}\n\nAnswer: Let\'s think step by step."""\n\nprompt = PromptTemplate(template=template, input_variables=["question"])\n')),(0,r.kt)("h2",{id:"initiate-the-llmchain"},"Initiate the LLMChain"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"llm_chain = LLMChain(prompt=prompt, llm=llm)\n")),(0,r.kt)("h2",{id:"run-the-llmchain"},"Run the LLMChain"),(0,r.kt)("p",null,"Provide a question and run the LLMChain."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'question = "What NFL team won the Super Bowl in the year Justin Beiber was born?"\n\nllm_chain.run(question)\n')))}u.isMDXComponent=!0}}]);