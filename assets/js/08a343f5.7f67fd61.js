"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30163],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),g=r,h=u["".concat(s,".").concat(g)]||u[g]||m[g]||o;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},3414:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={},i="PowerBI Dataset",l={unversionedId:"integrations/toolkits/powerbi",id:"integrations/toolkits/powerbi",title:"PowerBI Dataset",description:"This notebook showcases an agent interacting with a Power BI Dataset. The agent is answering more general questions about a dataset, as well as recover from errors.",source:"@site/docs/integrations/toolkits/powerbi.md",sourceDirName:"integrations/toolkits",slug:"/integrations/toolkits/powerbi",permalink:"/langchain/docs/integrations/toolkits/powerbi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"PlayWright Browser",permalink:"/langchain/docs/integrations/toolkits/playwright"},next:{title:"Python",permalink:"/langchain/docs/integrations/toolkits/python"}},s={},p=[{value:"Notes:",id:"notes",level:3},{value:"Initialization",id:"initialization",level:2},{value:"Example: describing a table",id:"example-describing-a-table",level:2},{value:"Example: simple query on a table",id:"example-simple-query-on-a-table",level:2},{value:"Example: running queries",id:"example-running-queries",level:2},{value:"Example: add your own few-shot prompts",id:"example-add-your-own-few-shot-prompts",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"powerbi-dataset"},"PowerBI Dataset"),(0,r.kt)("p",null,"This notebook showcases an agent interacting with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Power BI Dataset"),". The agent is answering more general questions about a dataset, as well as recover from errors."),(0,r.kt)("p",null,"Note that, as this agent is in active development, all answers might not be correct. It runs against the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/rest/api/power-bi/datasets/execute-queries"},"executequery endpoint"),", which does not allow deletes."),(0,r.kt)("h3",{id:"notes"},"Notes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It relies on authentication with the azure.identity package, which can be installed with ",(0,r.kt)("inlineCode",{parentName:"li"},"pip install azure-identity"),". Alternatively you can create the powerbi dataset with a token as a string without supplying the credentials."),(0,r.kt)("li",{parentName:"ul"},"You can also supply a username to impersonate for use with datasets that have RLS enabled. "),(0,r.kt)("li",{parentName:"ul"},"The toolkit uses a LLM to create the query from the question, the agent uses the LLM for the overall execution."),(0,r.kt)("li",{parentName:"ul"},"Testing was done mostly with a ",(0,r.kt)("inlineCode",{parentName:"li"},"text-davinci-003")," model, codex models did not seem to perform ver well.")),(0,r.kt)("h2",{id:"initialization"},"Initialization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "create_pbi_agent", "source": "langchain.agents.agent_toolkits", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_toolkits.powerbi.base.create_pbi_agent.html", "title": "PowerBI Dataset"}, {"imported": "PowerBIToolkit", "source": "langchain.agents.agent_toolkits", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_toolkits.powerbi.toolkit.PowerBIToolkit.html", "title": "PowerBI Dataset"}, {"imported": "PowerBIDataset", "source": "langchain.utilities.powerbi", "docs": "https://api.python.langchain.com/en/latest/utilities/langchain.utilities.powerbi.PowerBIDataset.html", "title": "PowerBI Dataset"}, {"imported": "ChatOpenAI", "source": "langchain.chat_models", "docs": "https://api.python.langchain.com/en/latest/chat_models/langchain.chat_models.openai.ChatOpenAI.html", "title": "PowerBI Dataset"}, {"imported": "AgentExecutor", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent.AgentExecutor.html", "title": "PowerBI Dataset"}]--\x3e\nfrom langchain.agents.agent_toolkits import create_pbi_agent\nfrom langchain.agents.agent_toolkits import PowerBIToolkit\nfrom langchain.utilities.powerbi import PowerBIDataset\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.agents import AgentExecutor\nfrom azure.identity import DefaultAzureCredential\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'fast_llm = ChatOpenAI(\n    temperature=0.5, max_tokens=1000, model_name="gpt-3.5-turbo", verbose=True\n)\nsmart_llm = ChatOpenAI(temperature=0, max_tokens=100, model_name="gpt-4", verbose=True)\n\ntoolkit = PowerBIToolkit(\n    powerbi=PowerBIDataset(\n        dataset_id="<dataset_id>",\n        table_names=["table1", "table2"],\n        credential=DefaultAzureCredential(),\n    ),\n    llm=smart_llm,\n)\n\nagent_executor = create_pbi_agent(\n    llm=fast_llm,\n    toolkit=toolkit,\n    verbose=True,\n)\n')),(0,r.kt)("h2",{id:"example-describing-a-table"},"Example: describing a table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent_executor.run("Describe table1")\n')),(0,r.kt)("h2",{id:"example-simple-query-on-a-table"},"Example: simple query on a table"),(0,r.kt)("p",null,"In this example, the agent actually figures out the correct query to get a row count of the table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent_executor.run("How many records are in table1?")\n')),(0,r.kt)("h2",{id:"example-running-queries"},"Example: running queries"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent_executor.run("How many records are there by dimension1 in table2?")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent_executor.run("What unique values are there for dimensions2 in table2")\n')),(0,r.kt)("h2",{id:"example-add-your-own-few-shot-prompts"},"Example: add your own few-shot prompts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# fictional example\nfew_shots = """\nQuestion: How many rows are in the table revenue?\nDAX: EVALUATE ROW("Number of rows", COUNTROWS(revenue_details))\n----\nQuestion: How many rows are in the table revenue where year is not empty?\nDAX: EVALUATE ROW("Number of rows", COUNTROWS(FILTER(revenue_details, revenue_details[year] <> "")))\n----\nQuestion: What was the average of value in revenue in dollars?\nDAX: EVALUATE ROW("Average", AVERAGE(revenue_details[dollar_value]))\n----\n"""\ntoolkit = PowerBIToolkit(\n    powerbi=PowerBIDataset(\n        dataset_id="<dataset_id>",\n        table_names=["table1", "table2"],\n        credential=DefaultAzureCredential(),\n    ),\n    llm=smart_llm,\n    examples=few_shots,\n)\nagent_executor = create_pbi_agent(\n    llm=fast_llm,\n    toolkit=toolkit,\n    verbose=True,\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'agent_executor.run("What was the maximum of value in revenue in dollars in 2022?")\n')))}m.isMDXComponent=!0}}]);