"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[24910],{3905:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>f});var l=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)r=i[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)r=i[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=l.createContext({}),u=function(e){var t=l.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},h=function(e){var t=u(e.components);return l.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),p=u(r),c=n,f=p["".concat(s,".").concat(c)]||p[c]||m[c]||i;return r?l.createElement(f,a(a({ref:t},h),{},{components:r})):l.createElement(f,a({ref:t},h))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:n,a[1]=o;for(var u=2;u<i;u++)a[u]=r[u];return l.createElement.apply(null,a)}return l.createElement.apply(null,r)}c.displayName="MDXCreateElement"},19860:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var l=r(87462),n=(r(67294),r(3905));const i={},a="How to use a SmartLLMChain",o={unversionedId:"use_cases/more/self_check/smart_llm",id:"use_cases/more/self_check/smart_llm",title:"How to use a SmartLLMChain",description:"A SmartLLMChain is a form of self-critique chain that can help you if have particularly complex questions to answer. Instead of doing a single LLM pass, it instead performs these 3 steps:",source:"@site/docs/use_cases/more/self_check/smart_llm.md",sourceDirName:"use_cases/more/self_check",slug:"/use_cases/more/self_check/smart_llm",permalink:"/langchain/docs/use_cases/more/self_check/smart_llm",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"use_cases",previous:{title:"Summarization checker chain",permalink:"/langchain/docs/use_cases/more/self_check/llm_summarization_checker"}},s={},u=[{value:"Same LLM for all steps",id:"same-llm-for-all-steps",level:5},{value:"Different LLM for different steps",id:"different-llm-for-different-steps",level:5}],h=(p="CodeOutputBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var p;const m={toc:u},c="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,l.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"how-to-use-a-smartllmchain"},"How to use a SmartLLMChain"),(0,n.kt)("p",null,"A SmartLLMChain is a form of self-critique chain that can help you if have particularly complex questions to answer. Instead of doing a single LLM pass, it instead performs these 3 steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},'Ideation: Pass the user prompt n times through the LLM to get n output proposals (called "ideas"), where n is a parameter you can set '),(0,n.kt)("li",{parentName:"ol"},"Critique: The LLM critiques all ideas to find possible flaws and picks the best one "),(0,n.kt)("li",{parentName:"ol"},"Resolve: The LLM tries to improve upon the best idea (as chosen in the critique step) and outputs it. This is then the final output.")),(0,n.kt)("p",null,"SmartLLMChains are based on the SmartGPT workflow proposed in ",(0,n.kt)("a",{parentName:"p",href:"https://youtu.be/wVzuvf9D9BU"},"https://youtu.be/wVzuvf9D9BU"),"."),(0,n.kt)("p",null,"Note that SmartLLMChains"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"use more LLM passes (ie n+2 instead of just 1)"),(0,n.kt)("li",{parentName:"ul"},"only work then the underlying LLM has the capability for reflection, whicher smaller models often don't"),(0,n.kt)("li",{parentName:"ul"},"only work with underlying models that return exactly 1 output, not multiple")),(0,n.kt)("p",null,"This notebook demonstrates how to use a SmartLLMChain."),(0,n.kt)("h5",{id:"same-llm-for-all-steps"},"Same LLM for all steps"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nos.environ["OPENAI_API_KEY"] = "..."\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "PromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html", "title": "How to use a SmartLLMChain"}, {"imported": "ChatOpenAI", "source": "langchain.chat_models", "docs": "https://api.python.langchain.com/en/latest/chat_models/langchain.chat_models.openai.ChatOpenAI.html", "title": "How to use a SmartLLMChain"}]--\x3e\nfrom langchain.prompts import PromptTemplate\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain_experimental.smart_llm import SmartLLMChain\n')),(0,n.kt)("p",null,'As example question, we will use "I have a 12 liter jug and a 6 liter jug. I want to measure 6 liters. How do I do it?". This is an example from the original SmartGPT video (',(0,n.kt)("a",{parentName:"p",href:"https://youtu.be/wVzuvf9D9BU?t=384"},"https://youtu.be/wVzuvf9D9BU?t=384"),"). While this seems like a very easy question, LLMs struggle do these kinds of questions that involve numbers and physical reasoning."),(0,n.kt)("p",null,"As we will see, all 3 initial ideas are completely wrong - even though we're using GPT4! Only when using self-reflection do we get a correct answer. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'hard_question = "I have a 12 liter jug and a 6 liter jug. I want to measure 6 liters. How do I do it?"\n')),(0,n.kt)("p",null,"So, we first create an LLM and prompt template"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'prompt = PromptTemplate.from_template(hard_question)\nllm = ChatOpenAI(temperature=0, model_name="gpt-4")\n')),(0,n.kt)("p",null,"Now we can create a SmartLLMChain"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"chain = SmartLLMChain(llm=llm, prompt=prompt, n_ideas=3, verbose=True)\n")),(0,n.kt)("p",null,"Now we can use the SmartLLM as a drop-in replacement for our LLM. E.g.:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"chain.run({})\n")),(0,n.kt)(h,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new SmartLLMChain chain...\n    Prompt after formatting:\n    I have a 12 liter jug and a 6 liter jug. I want to measure 6 liters. How do I do it?\n    Idea 1:\n    1. Fill the 6-liter jug completely.\n    2. Pour the water from the 6-liter jug into the 12-liter jug.\n    3. Fill the 6-liter jug again.\n    4. Carefully pour the water from the 6-liter jug into the 12-liter jug until the 12-liter jug is full.\n    5. The amount of water left in the 6-liter jug will be exactly 6 liters.\n    Idea 2:\n    1. Fill the 6-liter jug completely.\n    2. Pour the water from the 6-liter jug into the 12-liter jug.\n    3. Fill the 6-liter jug again.\n    4. Carefully pour the water from the 6-liter jug into the 12-liter jug until the 12-liter jug is full.\n    5. Since the 12-liter jug is now full, there will be 2 liters of water left in the 6-liter jug.\n    6. Empty the 12-liter jug.\n    7. Pour the 2 liters of water from the 6-liter jug into the 12-liter jug.\n    8. Fill the 6-liter jug completely again.\n    9. Pour the water from the 6-liter jug into the 12-liter jug, which already has 2 liters in it.\n    10. Now, the 12-liter jug will have exactly 6 liters of water (2 liters from before + 4 liters from the 6-liter jug).\n    Idea 3:\n    1. Fill the 6-liter jug completely.\n    2. Pour the water from the 6-liter jug into the 12-liter jug.\n    3. Fill the 6-liter jug again.\n    4. Carefully pour the water from the 6-liter jug into the 12-liter jug until the 12-liter jug is full.\n    5. The amount of water left in the 6-liter jug will be exactly 6 liters.\n    Critique:\n    Idea 1:\n    1. Fill the 6-liter jug completely. (No flaw)\n    2. Pour the water from the 6-liter jug into the 12-liter jug. (No flaw)\n    3. Fill the 6-liter jug again. (No flaw)\n    4. Carefully pour the water from the 6-liter jug into the 12-liter jug until the 12-liter jug is full. (Flaw: The 12-liter jug will never be full in this step, as it can hold 12 liters and we are only pouring 6 liters into it.)\n    5. The amount of water left in the 6-liter jug will be exactly 6 liters. (Flaw: This statement is incorrect, as there will be no water left in the 6-liter jug after pouring it into the 12-liter jug.)\n    \n    Idea 2:\n    1. Fill the 6-liter jug completely. (No flaw)\n    2. Pour the water from the 6-liter jug into the 12-liter jug. (No flaw)\n    3. Fill the 6-liter jug again. (No flaw)\n    4. Carefully pour the water from the 6-liter jug into the 12-liter jug until the 12-liter jug is full. (Flaw: The 12-liter jug will never be full in this step, as it can hold 12 liters and we are only pouring 6 liters into it.)\n    5. Since the 12-liter jug is now full, there will be 2 liters of water left in the 6-liter jug. (Flaw: This statement is incorrect, as the 12-liter jug will not be full and there will be no water left in the 6-liter jug.)\n    6. Empty the 12-liter jug. (No flaw)\n    7. Pour the 2 liters of water from the 6-liter jug into the 12-liter jug. (Flaw: This step is based on the incorrect assumption that there are 2 liters of water left in the 6-liter jug.)\n    8. Fill the 6-liter jug completely again. (No flaw)\n    9. Pour the water from the 6-liter jug into the 12-liter jug, which already has 2 liters in it. (Flaw: This step is based on the incorrect assumption that there are 2 liters of water in the 12-liter jug.)\n    10. Now, the 12-liter jug will have exactly 6 liters of water (2 liters from before + 4 liters from the 6-liter jug). (Flaw: This conclusion is based on the incorrect assumptions made in the previous steps.)\n    \n    Idea 3:\n    1. Fill the 6-liter jug completely. (No flaw)\n    2. Pour the water from the 6-liter jug into the 12-liter jug. (No flaw)\n    3. Fill the 6-liter jug again. (No flaw)\n    4. Carefully pour the water from the 6-liter jug into the 12-liter jug until the 12-liter jug is full. (Flaw: The 12-liter jug will never be full in this step, as it can hold 12 liters and we are only pouring 6 liters into it.)\n    5. The amount of water left in the 6-liter jug will be exactly 6 liters. (Flaw: This statement is incorrect, as there will be no water left in the 6-liter jug after pouring it into the 12-liter jug.)\n    Resolution:\n    1. Fill the 12-liter jug completely.\n    2. Pour the water from the 12-liter jug into the 6-liter jug until the 6-liter jug is full.\n    3. The amount of water left in the 12-liter jug will be exactly 6 liters.\n    \n    > Finished chain.\n\n\n\n\n\n    '1. Fill the 12-liter jug completely.\\n2. Pour the water from the 12-liter jug into the 6-liter jug until the 6-liter jug is full.\\n3. The amount of water left in the 12-liter jug will be exactly 6 liters.'\n"))),(0,n.kt)("h5",{id:"different-llm-for-different-steps"},"Different LLM for different steps"),(0,n.kt)("p",null,"You can also use different LLMs for the different steps by passing ",(0,n.kt)("inlineCode",{parentName:"p"},"ideation_llm"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"critique_llm")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"resolve_llm"),". You might want to do this to use a more creative (i.e., high-temperature) model for ideation and a more strict (i.e., low-temperature) model for critique and resolution."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'chain = SmartLLMChain(\n    ideation_llm=ChatOpenAI(temperature=0.9, model_name="gpt-4"),\n    llm=ChatOpenAI(\n        temperature=0, model_name="gpt-4"\n    ),  # will be used for critqiue and resolution as no specific llms are given\n    prompt=prompt,\n    n_ideas=3,\n    verbose=True,\n)\n')))}f.isMDXComponent=!0}}]);