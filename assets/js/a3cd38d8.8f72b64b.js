"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[12857],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>k});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(o),m=r,k=d["".concat(u,".").concat(m)]||d[m]||s[m]||a;return o?n.createElement(k,l(l({ref:t},p),{},{components:o})):n.createElement(k,l({ref:t},p))}));function k(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=o[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},15676:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>k,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=o(87462),r=(o(67294),o(3905));const a={},l="Jupyter Notebook",i={unversionedId:"integrations/document_loaders/jupyter_notebook",id:"integrations/document_loaders/jupyter_notebook",title:"Jupyter Notebook",description:"Jupyter Notebook (formerly IPython Notebook) is a web-based interactive computational environment for creating notebook documents.",source:"@site/docs/integrations/document_loaders/jupyter_notebook.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/jupyter_notebook",permalink:"/langchain/docs/integrations/document_loaders/jupyter_notebook",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Joplin",permalink:"/langchain/docs/integrations/document_loaders/joplin"},next:{title:"LarkSuite (FeiShu)",permalink:"/langchain/docs/integrations/document_loaders/larksuite"}},u={},c=[],p=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var d;const s={toc:c},m="wrapper";function k(e){let{components:t,...o}=e;return(0,r.kt)(m,(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"jupyter-notebook"},"Jupyter Notebook"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Project_Jupyter#Applications"},"Jupyter Notebook")," (formerly ",(0,r.kt)("inlineCode",{parentName:"p"},"IPython Notebook"),") is a web-based interactive computational environment for creating notebook documents.")),(0,r.kt)("p",null,"This notebook covers how to load data from a ",(0,r.kt)("inlineCode",{parentName:"p"},"Jupyter notebook (.html)")," into a format suitable by LangChain."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "NotebookLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.notebook.NotebookLoader.html", "title": "Jupyter Notebook"}]--\x3e\nfrom langchain.document_loaders import NotebookLoader\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'loader = NotebookLoader(\n    "example_data/notebook.html",\n    include_outputs=True,\n    max_output_length=20,\n    remove_newline=True,\n)\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NotebookLoader.load()")," loads the ",(0,r.kt)("inlineCode",{parentName:"p"},".html")," notebook file into a ",(0,r.kt)("inlineCode",{parentName:"p"},"Document")," object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"include_outputs")," (bool): whether to include cell outputs in the resulting document (default is False)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_output_length")," (int): the maximum number of characters to include from each cell output (default is 10)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"remove_newline")," (bool): whether to remove newline characters from the cell sources and outputs (default is False)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"traceback")," (bool): whether to include full traceback (default is False).")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"loader.load()\n")),(0,r.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    [Document(page_content='\\'markdown\\' cell: \\'[\\'# Notebook\\', \\'\\', \\'This notebook covers how to load data from an .html notebook into a format suitable by LangChain.\\']\\'\\n\\n \\'code\\' cell: \\'[\\'from langchain.document_loaders import NotebookLoader\\']\\'\\n\\n \\'code\\' cell: \\'[\\'loader = NotebookLoader(\"example_data/notebook.html\")\\']\\'\\n\\n \\'markdown\\' cell: \\'[\\'`NotebookLoader.load()` loads the `.html` notebook file into a `Document` object.\\', \\'\\', \\'**Parameters**:\\', \\'\\', \\'* `include_outputs` (bool): whether to include cell outputs in the resulting document (default is False).\\', \\'* `max_output_length` (int): the maximum number of characters to include from each cell output (default is 10).\\', \\'* `remove_newline` (bool): whether to remove newline characters from the cell sources and outputs (default is False).\\', \\'* `traceback` (bool): whether to include full traceback (default is False).\\']\\'\\n\\n \\'code\\' cell: \\'[\\'loader.load(include_outputs=True, max_output_length=20, remove_newline=True)\\']\\'\\n\\n', metadata={'source': 'example_data/notebook.html'})]\n"))))}k.isMDXComponent=!0}}]);