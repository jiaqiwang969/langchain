"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[44709],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},20386:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const i={},o="Metal",l={unversionedId:"integrations/providers/metal",id:"integrations/providers/metal",title:"Metal",description:"This page covers how to use Metal within LangChain.",source:"@site/docs/integrations/providers/metal.mdx",sourceDirName:"integrations/providers",slug:"/integrations/providers/metal",permalink:"/langchain/docs/integrations/providers/metal",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Meilisearch",permalink:"/langchain/docs/integrations/providers/meilisearch"},next:{title:"Microsoft OneDrive",permalink:"/langchain/docs/integrations/providers/microsoft_onedrive"}},s={},c=[{value:"What is Metal?",id:"what-is-metal",level:2},{value:"Quick start",id:"quick-start",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...i}=e;return(0,n.kt)(m,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"metal"},"Metal"),(0,n.kt)("p",null,"This page covers how to use ",(0,n.kt)("a",{parentName:"p",href:"https://getmetal.io"},"Metal")," within LangChain."),(0,n.kt)("h2",{id:"what-is-metal"},"What is Metal?"),(0,n.kt)("p",null,"Metal is a  managed retrieval & memory platform built for production. Easily index your data into ",(0,n.kt)("inlineCode",{parentName:"p"},"Metal")," and run semantic search and retrieval on it."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Metal",src:r(20890).Z,width:"2964",height:"2026"})),(0,n.kt)("h2",{id:"quick-start"},"Quick start"),(0,n.kt)("p",null,"Get started by ",(0,n.kt)("a",{parentName:"p",href:"https://app.getmetal.io/signup"},"creating a Metal account"),"."),(0,n.kt)("p",null,"Then, you can easily take advantage of the ",(0,n.kt)("inlineCode",{parentName:"p"},"MetalRetriever")," class to start retrieving your data for semantic search, prompting context, etc. This class takes a ",(0,n.kt)("inlineCode",{parentName:"p"},"Metal")," instance and a dictionary of parameters to pass to the Metal API."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "MetalRetriever", "source": "langchain.retrievers", "docs": "https://api.python.langchain.com/en/latest/retrievers/langchain.retrievers.metal.MetalRetriever.html", "title": "Metal"}]--\x3e\nfrom langchain.retrievers import MetalRetriever\nfrom metal_sdk.metal import Metal\n\n\nmetal = Metal("API_KEY", "CLIENT_ID", "INDEX_ID");\nretriever = MetalRetriever(metal, params={"limit": 2})\n\ndocs = retriever.get_relevant_documents("search term")\n')))}u.isMDXComponent=!0},20890:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/MetalDash-f7ba8afe5c172a7967af0e2aa84f1f74.png"}}]);