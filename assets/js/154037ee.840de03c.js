"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[40536],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||i;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},13648:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const i={},o="Infino",l={unversionedId:"integrations/providers/infino",id:"integrations/providers/infino",title:"Infino",description:"Infino is an open-source observability platform that stores both metrics and application logs together.",source:"@site/docs/integrations/providers/infino.mdx",sourceDirName:"integrations/providers",slug:"/integrations/providers/infino",permalink:"/langchain/docs/integrations/providers/infino",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"IMSDb",permalink:"/langchain/docs/integrations/providers/imsdb"},next:{title:"Jina",permalink:"/langchain/docs/integrations/providers/jina"}},s={},c=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Using Infino",id:"using-infino",level:2}],p={toc:c},u="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"infino"},"Infino"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/infinohq/infino"},"Infino")," is an open-source observability platform that stores both metrics and application logs together.")),(0,a.kt)("p",null,"Key features of ",(0,a.kt)("inlineCode",{parentName:"p"},"Infino")," include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Metrics Tracking"),": Capture time taken by LLM model to handle request, errors, number of tokens, and costing indication for the particular LLM."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Data Tracking"),": Log and store prompt, request, and response data for each LangChain interaction."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Graph Visualization"),": Generate basic graphs over time, depicting metrics such as request duration, error occurrences, token count, and cost.")),(0,a.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,a.kt)("p",null,"First, you'll need to install the  ",(0,a.kt)("inlineCode",{parentName:"p"},"infinopy")," Python package as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip install infinopy\n")),(0,a.kt)("p",null,"If you already have an ",(0,a.kt)("inlineCode",{parentName:"p"},"Infino Server")," running, then you're good to go; but if\nyou don't, follow the next steps to start it:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make sure you have Docker installed"),(0,a.kt)("li",{parentName:"ul"},"Run the following in your terminal:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker run --rm --detach --name infino-example -p 3000:3000 infinohq/infino:latest\n")))),(0,a.kt)("h2",{id:"using-infino"},"Using Infino"),(0,a.kt)("p",null,"See a ",(0,a.kt)("a",{parentName:"p",href:"/docs/integrations/callbacks/infino.html"},"usage example of ",(0,a.kt)("inlineCode",{parentName:"a"},"InfinoCallbackHandler")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "InfinoCallbackHandler", "source": "langchain.callbacks", "docs": "https://api.python.langchain.com/en/latest/callbacks/langchain.callbacks.infino_callback.InfinoCallbackHandler.html", "title": "Infino"}]--\x3e\nfrom langchain.callbacks import InfinoCallbackHandler\n')))}f.isMDXComponent=!0}}]);