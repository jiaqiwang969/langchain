"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[56522],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),h=s(t),d=a,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||r;return t?o.createElement(m,i(i({ref:n},c),{},{components:t})):o.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[h]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<r;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},37390:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=t(87462),a=(t(67294),t(3905));const r={},i="OpenWeatherMap",p={unversionedId:"integrations/tools/openweathermap",id:"integrations/tools/openweathermap",title:"OpenWeatherMap",description:"This notebook goes over how to use the OpenWeatherMap component to fetch weather information.",source:"@site/docs/integrations/tools/openweathermap.md",sourceDirName:"integrations/tools",slug:"/integrations/tools/openweathermap",permalink:"/langchain/docs/integrations/tools/openweathermap",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Nuclia Understanding",permalink:"/langchain/docs/integrations/tools/nuclia"},next:{title:"PubMed",permalink:"/langchain/docs/integrations/tools/pubmed"}},l={},s=[{value:"Use the wrapper",id:"use-the-wrapper",level:2},{value:"Use the tool",id:"use-the-tool",level:2}],c=(h="CodeOutputBlock",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var h;const u={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"openweathermap"},"OpenWeatherMap"),(0,a.kt)("p",null,"This notebook goes over how to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"OpenWeatherMap")," component to fetch weather information."),(0,a.kt)("p",null,"First, you need to sign up for an ",(0,a.kt)("inlineCode",{parentName:"p"},"OpenWeatherMap API")," key:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Go to OpenWeatherMap and sign up for an API key ",(0,a.kt)("a",{parentName:"li",href:"https://openweathermap.org/api/"},"here")),(0,a.kt)("li",{parentName:"ol"},"pip install pyowm")),(0,a.kt)("p",null,"Then we will need to set some environment variables:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Save your API KEY into OPENWEATHERMAP_API_KEY env variable")),(0,a.kt)("h2",{id:"use-the-wrapper"},"Use the wrapper"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "OpenWeatherMapAPIWrapper", "source": "langchain.utilities", "docs": "https://api.python.langchain.com/en/latest/utilities/langchain.utilities.openweathermap.OpenWeatherMapAPIWrapper.html", "title": "OpenWeatherMap"}]--\x3e\nfrom langchain.utilities import OpenWeatherMapAPIWrapper\nimport os\n\nos.environ["OPENWEATHERMAP_API_KEY"] = ""\n\nweather = OpenWeatherMapAPIWrapper()\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'weather_data = weather.run("London,GB")\nprint(weather_data)\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    In London,GB, the current weather is as follows:\n    Detailed status: broken clouds\n    Wind speed: 2.57 m/s, direction: 240\xb0\n    Humidity: 55%\n    Temperature: \n      - Current: 20.12\xb0C\n      - High: 21.75\xb0C\n      - Low: 18.68\xb0C\n      - Feels like: 19.62\xb0C\n    Rain: {}\n    Heat index: None\n    Cloud cover: 75%\n"))),(0,a.kt)("h2",{id:"use-the-tool"},"Use the tool"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "OpenWeatherMap"}, {"imported": "load_tools", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_tools.html", "title": "OpenWeatherMap"}, {"imported": "initialize_agent", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html", "title": "OpenWeatherMap"}, {"imported": "AgentType", "source": "langchain.agents", "docs": "https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html", "title": "OpenWeatherMap"}]--\x3e\nfrom langchain.llms import OpenAI\nfrom langchain.agents import load_tools, initialize_agent, AgentType\nimport os\n\nos.environ["OPENAI_API_KEY"] = ""\nos.environ["OPENWEATHERMAP_API_KEY"] = ""\n\nllm = OpenAI(temperature=0)\n\ntools = load_tools(["openweathermap-api"], llm)\n\nagent_chain = initialize_agent(\n    tools=tools, llm=llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True\n)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'agent_chain.run("What\'s the weather like in London?")\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n     I need to find out the current weather in London.\n    Action: OpenWeatherMap\n    Action Input: London,GB\n    Observation: In London,GB, the current weather is as follows:\n    Detailed status: broken clouds\n    Wind speed: 2.57 m/s, direction: 240\xb0\n    Humidity: 56%\n    Temperature: \n      - Current: 20.11\xb0C\n      - High: 21.75\xb0C\n      - Low: 18.68\xb0C\n      - Feels like: 19.64\xb0C\n    Rain: {}\n    Heat index: None\n    Cloud cover: 75%\n    Thought: I now know the current weather in London.\n    Final Answer: The current weather in London is broken clouds, with a wind speed of 2.57 m/s, direction 240\xb0, humidity of 56%, temperature of 20.11\xb0C, high of 21.75\xb0C, low of 18.68\xb0C, and a heat index of None.\n    \n    > Finished chain.\n\n\n\n\n\n    'The current weather in London is broken clouds, with a wind speed of 2.57 m/s, direction 240\xb0, humidity of 56%, temperature of 20.11\xb0C, high of 21.75\xb0C, low of 18.68\xb0C, and a heat index of None.'\n"))))}m.isMDXComponent=!0}}]);