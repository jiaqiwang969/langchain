"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[469],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,i(i({ref:t},s),{},{components:n})):a.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69196:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i="Fauna",l={unversionedId:"integrations/document_loaders/fauna",id:"integrations/document_loaders/fauna",title:"Fauna",description:"Fauna is a Document Database.",source:"@site/docs/integrations/document_loaders/fauna.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/fauna",permalink:"/langchain/docs/integrations/document_loaders/fauna",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Facebook Chat",permalink:"/langchain/docs/integrations/document_loaders/facebook_chat"},next:{title:"Figma",permalink:"/langchain/docs/integrations/document_loaders/figma"}},u={},c=[{value:"Query data example",id:"query-data-example",level:2},{value:"Query with Pagination",id:"query-with-pagination",level:3}],s={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fauna"},"Fauna"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://fauna.com/"},"Fauna")," is a Document Database.")),(0,r.kt)("p",null,"Query ",(0,r.kt)("inlineCode",{parentName:"p"},"Fauna")," documents"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install fauna\n")),(0,r.kt)("h2",{id:"query-data-example"},"Query data example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "FaunaLoader", "source": "langchain.document_loaders.fauna", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.fauna.FaunaLoader.html", "title": "Fauna"}]--\x3e\nfrom langchain.document_loaders.fauna import FaunaLoader\n\nsecret = "<enter-valid-fauna-secret>"\nquery = "Item.all()"  # Fauna query. Assumes that the collection is called "Item"\nfield = "text"  # The field that contains the page content. Assumes that the field is called "text"\n\nloader = FaunaLoader(query, field, secret)\ndocs = loader.lazy_load()\n\nfor value in docs:\n    print(value)\n')),(0,r.kt)("h3",{id:"query-with-pagination"},"Query with Pagination"),(0,r.kt)("p",null,"You get a ",(0,r.kt)("inlineCode",{parentName:"p"},"after")," value if there are more data. You can get values after the curcor by passing in the ",(0,r.kt)("inlineCode",{parentName:"p"},"after")," string in query. "),(0,r.kt)("p",null,"To learn more following ",(0,r.kt)("a",{parentName:"p",href:"https://fqlx-beta--fauna-docs.netlify.app/fqlx/beta/reference/schema_entities/set/static-paginate"},"this link")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'query = """\nItem.paginate("hs+DzoPOg ... aY1hOohozrV7A")\nItem.all()\n"""\nloader = FaunaLoader(query, field, secret)\n')))}d.isMDXComponent=!0}}]);