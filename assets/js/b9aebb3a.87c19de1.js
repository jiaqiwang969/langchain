"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[25981],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>m});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(o),g=a,m=p["".concat(u,".").concat(g)]||p[g]||c[g]||r;return o?n.createElement(m,l(l({ref:t},d),{},{components:o})):n.createElement(m,l({ref:t},d))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,l=new Array(r);l[0]=g;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=o[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}g.displayName="MDXCreateElement"},8625:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var n=o(87462),a=(o(67294),o(3905));const r={},l="YouTube transcripts",i={unversionedId:"integrations/document_loaders/youtube_transcript",id:"integrations/document_loaders/youtube_transcript",title:"YouTube transcripts",description:"YouTube is an online video sharing and social media platform created by Google.",source:"@site/docs/integrations/document_loaders/youtube_transcript.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/youtube_transcript",permalink:"/langchain/docs/integrations/document_loaders/youtube_transcript",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Loading documents from a YouTube url",permalink:"/langchain/docs/integrations/document_loaders/youtube_audio"},next:{title:"Document transformers",permalink:"/langchain/docs/integrations/document_transformers/"}},u={},s=[{value:"Add video info",id:"add-video-info",level:3},{value:"Add language preferences",id:"add-language-preferences",level:3},{value:"YouTube loader from Google Cloud",id:"youtube-loader-from-google-cloud",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"\ud83e\uddd1 Instructions for ingesting your Google Docs data",id:"-instructions-for-ingesting-your-google-docs-data",level:3}],d={toc:s},p="wrapper";function c(e){let{components:t,...o}=e;return(0,a.kt)(p,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"youtube-transcripts"},"YouTube transcripts"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/"},"YouTube")," is an online video sharing and social media platform created by Google.")),(0,a.kt)("p",null,"This notebook covers how to load documents from ",(0,a.kt)("inlineCode",{parentName:"p"},"YouTube transcripts"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "YoutubeLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.youtube.YoutubeLoader.html", "title": "YouTube transcripts"}]--\x3e\nfrom langchain.document_loaders import YoutubeLoader\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# !pip install youtube-transcript-api\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'loader = YoutubeLoader.from_youtube_url(\n    "https://www.youtube.com/watch?v=QsYGlZkevEg", add_video_info=True\n)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"loader.load()\n")),(0,a.kt)("h3",{id:"add-video-info"},"Add video info"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# ! pip install pytube\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'loader = YoutubeLoader.from_youtube_url(\n    "https://www.youtube.com/watch?v=QsYGlZkevEg", add_video_info=True\n)\nloader.load()\n')),(0,a.kt)("h3",{id:"add-language-preferences"},"Add language preferences"),(0,a.kt)("p",null,"Language param : It's a list of language codes in a descending priority, ",(0,a.kt)("inlineCode",{parentName:"p"},"en")," by default."),(0,a.kt)("p",null,"translation param : It's a translate preference when the youtube does'nt have your select language, ",(0,a.kt)("inlineCode",{parentName:"p"},"en")," by default."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'loader = YoutubeLoader.from_youtube_url(\n    "https://www.youtube.com/watch?v=QsYGlZkevEg",\n    add_video_info=True,\n    language=["en", "id"],\n    translation="en",\n)\nloader.load()\n')),(0,a.kt)("h2",{id:"youtube-loader-from-google-cloud"},"YouTube loader from Google Cloud"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a Google Cloud project or use an existing project"),(0,a.kt)("li",{parentName:"ol"},"Enable the ",(0,a.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/apis/enableflow?apiid=youtube.googleapis.com&project=sixth-grammar-344520"},"Youtube Api")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://developers.google.com/drive/api/quickstart/python#authorize_credentials_for_a_desktop_application"},"Authorize credentials for desktop app")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib youtube-transcript-api"))),(0,a.kt)("h3",{id:"-instructions-for-ingesting-your-google-docs-data"},"\ud83e\uddd1 Instructions for ingesting your Google Docs data"),(0,a.kt)("p",null,"By default, the ",(0,a.kt)("inlineCode",{parentName:"p"},"GoogleDriveLoader")," expects the ",(0,a.kt)("inlineCode",{parentName:"p"},"credentials.json")," file to be ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.credentials/credentials.json"),", but this is configurable using the ",(0,a.kt)("inlineCode",{parentName:"p"},"credentials_file")," keyword argument. Same thing with ",(0,a.kt)("inlineCode",{parentName:"p"},"token.json"),". Note that ",(0,a.kt)("inlineCode",{parentName:"p"},"token.json")," will be created automatically the first time you use the loader."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GoogleApiYoutubeLoader")," can load from a list of Google Docs document ids or a folder id. You can obtain your folder and document id from the URL:\nNote depending on your set up, the ",(0,a.kt)("inlineCode",{parentName:"p"},"service_account_path")," needs to be set up. See ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/drive/api/v3/quickstart/python"},"here")," for more details."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "GoogleApiClient", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.youtube.GoogleApiClient.html", "title": "YouTube transcripts"}, {"imported": "GoogleApiYoutubeLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.youtube.GoogleApiYoutubeLoader.html", "title": "YouTube transcripts"}]--\x3e\nfrom langchain.document_loaders import GoogleApiClient, GoogleApiYoutubeLoader\n\n# Init the GoogleApiClient\nfrom pathlib import Path\n\n\ngoogle_api_client = GoogleApiClient(credentials_path=Path("your_path_creds.json"))\n\n\n# Use a Channel\nyoutube_loader_channel = GoogleApiYoutubeLoader(\n    google_api_client=google_api_client,\n    channel_name="Reducible",\n    captions_language="en",\n)\n\n# Use Youtube Ids\n\nyoutube_loader_ids = GoogleApiYoutubeLoader(\n    google_api_client=google_api_client, video_ids=["TrdevFK_am4"], add_video_info=True\n)\n\n# returns a list of Documents\nyoutube_loader_channel.load()\n')))}c.isMDXComponent=!0}}]);