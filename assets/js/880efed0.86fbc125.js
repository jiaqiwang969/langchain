"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51530],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=o,f=u["".concat(c,".").concat(d)]||u[d]||h[d]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2362:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},i="OpenSearch",s={unversionedId:"integrations/providers/opensearch",id:"integrations/providers/opensearch",title:"OpenSearch",description:"This page covers how to use the OpenSearch ecosystem within LangChain.",source:"@site/docs/integrations/providers/opensearch.mdx",sourceDirName:"integrations/providers",slug:"/integrations/providers/opensearch",permalink:"/langchain/docs/integrations/providers/opensearch",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"OpenLLM",permalink:"/langchain/docs/integrations/providers/openllm"},next:{title:"OpenWeatherMap",permalink:"/langchain/docs/integrations/providers/openweathermap"}},c={},p=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Wrappers",id:"wrappers",level:2},{value:"VectorStore",id:"vectorstore",level:3}],l={toc:p},u="wrapper";function h(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"opensearch"},"OpenSearch"),(0,o.kt)("p",null,"This page covers how to use the OpenSearch ecosystem within LangChain.\nIt is broken into two parts: installation and setup, and then references to specific OpenSearch wrappers."),(0,o.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install the Python package with ",(0,o.kt)("inlineCode",{parentName:"li"},"pip install opensearch-py"))),(0,o.kt)("h2",{id:"wrappers"},"Wrappers"),(0,o.kt)("h3",{id:"vectorstore"},"VectorStore"),(0,o.kt)("p",null,"There exists a wrapper around OpenSearch vector databases, allowing you to use it as a vectorstore\nfor semantic search using approximate vector search powered by lucene, nmslib and faiss engines\nor using painless scripting and script scoring functions for bruteforce vector search."),(0,o.kt)("p",null,"To import this vectorstore:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "OpenSearchVectorSearch", "source": "langchain.vectorstores", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.opensearch_vector_search.OpenSearchVectorSearch.html", "title": "OpenSearch"}]--\x3e\nfrom langchain.vectorstores import OpenSearchVectorSearch\n')),(0,o.kt)("p",null,"For a more detailed walkthrough of the OpenSearch wrapper, see ",(0,o.kt)("a",{parentName:"p",href:"/docs/integrations/vectorstores/opensearch.html"},"this notebook")))}h.isMDXComponent=!0}}]);