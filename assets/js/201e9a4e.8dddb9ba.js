"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51763],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(h,p(p({ref:t},c),{},{components:r})):n.createElement(h,p({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,p[1]=s;for(var l=2;l<o;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},95211:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={},p="Retry parser",s={unversionedId:"modules/model_io/output_parsers/retry",id:"modules/model_io/output_parsers/retry",title:"Retry parser",description:"While in some cases it is possible to fix any parsing mistakes by only looking at the output, in other cases it isn't. An example of this is when the output is not just in the incorrect format, but is partially complete. Consider the below example.",source:"@site/docs/modules/model_io/output_parsers/retry.md",sourceDirName:"modules/model_io/output_parsers",slug:"/modules/model_io/output_parsers/retry",permalink:"/langchain/docs/modules/model_io/output_parsers/retry",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Pydantic (JSON) parser",permalink:"/langchain/docs/modules/model_io/output_parsers/pydantic"},next:{title:"Structured output parser",permalink:"/langchain/docs/modules/model_io/output_parsers/structured"}},i={},l=[],c=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var u;const m={toc:l},d="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"retry-parser"},"Retry parser"),(0,a.kt)("p",null,"While in some cases it is possible to fix any parsing mistakes by only looking at the output, in other cases it isn't. An example of this is when the output is not just in the incorrect format, but is partially complete. Consider the below example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "PromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html", "title": "Retry parser"}, {"imported": "ChatPromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.chat.ChatPromptTemplate.html", "title": "Retry parser"}, {"imported": "HumanMessagePromptTemplate", "source": "langchain.prompts", "docs": "https://api.python.langchain.com/en/latest/prompts/langchain.prompts.chat.HumanMessagePromptTemplate.html", "title": "Retry parser"}, {"imported": "OpenAI", "source": "langchain.llms", "docs": "https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html", "title": "Retry parser"}, {"imported": "ChatOpenAI", "source": "langchain.chat_models", "docs": "https://api.python.langchain.com/en/latest/chat_models/langchain.chat_models.openai.ChatOpenAI.html", "title": "Retry parser"}, {"imported": "PydanticOutputParser", "source": "langchain.output_parsers", "docs": "https://api.python.langchain.com/en/latest/output_parsers/langchain.output_parsers.pydantic.PydanticOutputParser.html", "title": "Retry parser"}, {"imported": "OutputFixingParser", "source": "langchain.output_parsers", "docs": "https://api.python.langchain.com/en/latest/output_parsers/langchain.output_parsers.fix.OutputFixingParser.html", "title": "Retry parser"}, {"imported": "RetryOutputParser", "source": "langchain.output_parsers", "docs": "https://api.python.langchain.com/en/latest/output_parsers/langchain.output_parsers.retry.RetryOutputParser.html", "title": "Retry parser"}]--\x3e\nfrom langchain.prompts import (\n    PromptTemplate,\n    ChatPromptTemplate,\n    HumanMessagePromptTemplate,\n)\nfrom langchain.llms import OpenAI\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.output_parsers import (\n    PydanticOutputParser,\n    OutputFixingParser,\n    RetryOutputParser,\n)\nfrom pydantic import BaseModel, Field, validator\nfrom typing import List\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'template = """Based on the user question, provide an Action and Action Input for what step should be taken.\n{format_instructions}\nQuestion: {query}\nResponse:"""\n\n\nclass Action(BaseModel):\n    action: str = Field(description="action to take")\n    action_input: str = Field(description="input to the action")\n\n\nparser = PydanticOutputParser(pydantic_object=Action)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'prompt = PromptTemplate(\n    template="Answer the user query.\\n{format_instructions}\\n{query}\\n",\n    input_variables=["query"],\n    partial_variables={"format_instructions": parser.get_format_instructions()},\n)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'prompt_value = prompt.format_prompt(query="who is leo di caprios gf?")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'bad_response = \'{"action": "search"}\'\n')),(0,a.kt)("p",null,"If we try to parse this response as is, we will get an error:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"parser.parse(bad_response)\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    ---------------------------------------------------------------------------\n\n    ValidationError                           Traceback (most recent call last)\n\n    File ~/workplace/langchain/langchain/output_parsers/pydantic.py:24, in PydanticOutputParser.parse(self, text)\n         23     json_object = json.loads(json_str)\n    ---\x3e 24     return self.pydantic_object.parse_obj(json_object)\n         26 except (json.JSONDecodeError, ValidationError) as e:\n\n\n    File ~/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/pydantic/main.py:527, in pydantic.main.BaseModel.parse_obj()\n\n\n    File ~/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/pydantic/main.py:342, in pydantic.main.BaseModel.__init__()\n\n\n    ValidationError: 1 validation error for Action\n    action_input\n      field required (type=value_error.missing)\n\n    \n    During handling of the above exception, another exception occurred:\n\n\n    OutputParserException                     Traceback (most recent call last)\n\n    Cell In[6], line 1\n    ----\x3e 1 parser.parse(bad_response)\n\n\n    File ~/workplace/langchain/langchain/output_parsers/pydantic.py:29, in PydanticOutputParser.parse(self, text)\n         27 name = self.pydantic_object.__name__\n         28 msg = f"Failed to parse {name} from completion {text}. Got: {e}"\n    ---\x3e 29 raise OutputParserException(msg)\n\n\n    OutputParserException: Failed to parse Action from completion {"action": "search"}. Got: 1 validation error for Action\n    action_input\n      field required (type=value_error.missing)\n'))),(0,a.kt)("p",null,"If we try to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"OutputFixingParser")," to fix this error, it will be confused - namely, it doesn't know what to actually put for action input."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"fix_parser = OutputFixingParser.from_llm(parser=parser, llm=ChatOpenAI())\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"fix_parser.parse(bad_response)\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Action(action='search', action_input='')\n"))),(0,a.kt)("p",null,"Instead, we can use the RetryOutputParser, which passes in the prompt (as well as the original output) to try again to get a better response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "RetryWithErrorOutputParser", "source": "langchain.output_parsers", "docs": "https://api.python.langchain.com/en/latest/output_parsers/langchain.output_parsers.retry.RetryWithErrorOutputParser.html", "title": "Retry parser"}]--\x3e\nfrom langchain.output_parsers import RetryWithErrorOutputParser\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"retry_parser = RetryWithErrorOutputParser.from_llm(\n    parser=parser, llm=OpenAI(temperature=0)\n)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"retry_parser.parse_with_prompt(bad_response, prompt_value)\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Action(action='search', action_input='who is leo di caprios gf?')\n"))))}h.isMDXComponent=!0}}]);