"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[94227],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),s=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(i.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),g=o,h=d["".concat(i,".").concat(g)]||d[g]||p[g]||r;return t?a.createElement(h,l(l({ref:n},u),{},{components:t})):a.createElement(h,l({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=g;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[d]="string"==typeof e?e:o,l[1]=c;for(var s=2;s<r;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},97410:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const r={},l=void 0,c={unversionedId:"integrations/vectorstores/nucliadb_vectorstore",id:"integrations/vectorstores/nucliadb_vectorstore",title:"nucliadb_vectorstore",description:"You can use a local NucliaDB instance or use Nuclia Cloud.",source:"@site/docs/integrations/vectorstores/nucliadb_vectorstore.md",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/nucliadb_vectorstore",permalink:"/langchain/docs/integrations/vectorstores/nucliadb_vectorstore",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Neo4j Vector Index",permalink:"/langchain/docs/integrations/vectorstores/neo4jvector"},next:{title:"OpenSearch",permalink:"/langchain/docs/integrations/vectorstores/opensearch"}},i={},s=[{value:"Usage with nuclia.cloud",id:"usage-with-nucliacloud",level:2},{value:"Usage with a local instance",id:"usage-with-a-local-instance",level:2},{value:"Add and delete texts to your Knowledge Box",id:"add-and-delete-texts-to-your-knowledge-box",level:2},{value:"Search in your Knowledge Box",id:"search-in-your-knowledge-box",level:2}],u=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var d;const p={toc:s},g="wrapper";function h(e){let{components:n,...t}=e;return(0,o.kt)(g,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nucliadb-vector-store"},"NucliaDB vector store"),(0,o.kt)("p",null,"You can use a local NucliaDB instance or use ",(0,o.kt)("a",{parentName:"p",href:"https://nuclia.cloud"},"Nuclia Cloud"),"."),(0,o.kt)("p",null,"When using a local instance, you need a Nuclia Understanding API key, so your texts are properly vectorized and indexed. You can get a key by creating a free account at ",(0,o.kt)("a",{parentName:"p",href:"https://nuclia.cloud"},"https://nuclia.cloud"),", and then ",(0,o.kt)("a",{parentName:"p",href:"https://docs.nuclia.dev/docs/docs/using/understanding/intro"},"create a NUA key"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install nuclia\n")),(0,o.kt)("h2",{id:"usage-with-nucliacloud"},"Usage with nuclia.cloud"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "NucliaDB", "source": "langchain.vectorstores.nucliadb", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.nucliadb.NucliaDB.html", "title": "NucliaDB vector store"}]--\x3e\nfrom langchain.vectorstores.nucliadb import NucliaDB\nAPI_KEY = "YOUR_API_KEY"\n\nndb = NucliaDB(knowledge_box="YOUR_KB_ID", local=False, api_key=API_KEY)\n')),(0,o.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    ---------------------------------------------------------------------------\n\n    ModuleNotFoundError                       Traceback (most recent call last)\n\n    File ~/dev/osprojects/langchain/libs/langchain/langchain/vectorstores/nucliadb.py:39, in NucliaDB.__init__(self, knowledge_box, local, api_key, backend)\n         38 try:\n    ---\x3e 39     from nuclia.sdk import NucliaAuth\n         40 except ImportError:\n\n\n    ModuleNotFoundError: No module named \'nuclia\'\n\n    \n    During handling of the above exception, another exception occurred:\n\n\n    ValueError                                Traceback (most recent call last)\n\n    Cell In[1], line 4\n          1 from langchain.vectorstores.nucliadb import NucliaDB\n          2 API_KEY = "YOUR_API_KEY"\n    ----\x3e 4 ndb = NucliaDB(knowledge_box="YOUR_KB_ID", local=False, api_key=API_KEY)\n\n\n    File ~/dev/osprojects/langchain/libs/langchain/langchain/vectorstores/nucliadb.py:41, in NucliaDB.__init__(self, knowledge_box, local, api_key, backend)\n         39     from nuclia.sdk import NucliaAuth\n         40 except ImportError:\n    ---\x3e 41     raise ValueError(\n         42         "nuclia python package not found. "\n         43         "Please install it with `pip install nuclia`."\n         44     )\n         45 self._config["LOCAL"] = local\n         46 zone = os.environ.get("NUCLIA_ZONE", "europe-1")\n\n\n    ValueError: nuclia python package not found. Please install it with `pip install nuclia`.\n'))),(0,o.kt)("h2",{id:"usage-with-a-local-instance"},"Usage with a local instance"),(0,o.kt)("p",null,"Note: By default ",(0,o.kt)("inlineCode",{parentName:"p"},"backend")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:8080"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "NucliaDB", "source": "langchain.vectorstores.nucliadb", "docs": "https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.nucliadb.NucliaDB.html", "title": "NucliaDB vector store"}]--\x3e\nfrom langchain.vectorstores.nucliadb import NucliaDB\n\nndb = NucliaDB(knowledge_box="YOUR_KB_ID", local=True, backend="http://my-local-server")\n')),(0,o.kt)("h2",{id:"add-and-delete-texts-to-your-knowledge-box"},"Add and delete texts to your Knowledge Box"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'ids = ndb.add_texts(["This is a new test", "This is a second test"])\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"ndb.delete(ids=ids)\n")),(0,o.kt)("h2",{id:"search-in-your-knowledge-box"},"Search in your Knowledge Box"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'results = ndb.similarity_search("Who was inspired by Ada Lovelace?")\nprint(res.page_content)\n')))}h.isMDXComponent=!0}}]);