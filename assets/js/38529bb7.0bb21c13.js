"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30882],{3905:(t,e,o)=>{o.d(e,{Zo:()=>u,kt:()=>d});var r=o(67294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function a(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function p(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function l(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},a=Object.keys(t);for(r=0;r<a.length;r++)o=a[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)o=a[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var s=r.createContext({}),m=function(t){var e=r.useContext(s),o=e;return t&&(o="function"==typeof t?t(e):p(p({},e),t)),o},u=function(t){var e=m(t.components);return r.createElement(s.Provider,{value:e},t.children)},i="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,a=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),i=m(o),g=n,d=i["".concat(s,".").concat(g)]||i[g]||c[g]||a;return o?r.createElement(d,p(p({ref:e},u),{},{components:o})):r.createElement(d,p({ref:e},u))}));function d(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=o.length,p=new Array(a);p[0]=g;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[i]="string"==typeof t?t:n,p[1]=l;for(var m=2;m<a;m++)p[m]=o[m];return r.createElement.apply(null,p)}return r.createElement.apply(null,o)}g.displayName="MDXCreateElement"},75158:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var r=o(87462),n=(o(67294),o(3905));const a={},p="Format template output",l={unversionedId:"modules/model_io/prompts/prompt_templates/format_output",id:"modules/model_io/prompts/prompt_templates/format_output",title:"Format template output",description:"The output of the format method is available as a string, list of messages and ChatPromptValue",source:"@site/docs/modules/model_io/prompts/prompt_templates/format_output.mdx",sourceDirName:"modules/model_io/prompts/prompt_templates",slug:"/modules/model_io/prompts/prompt_templates/format_output",permalink:"/langchain/docs/modules/model_io/prompts/prompt_templates/format_output",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Few-shot examples for chat models",permalink:"/langchain/docs/modules/model_io/prompts/prompt_templates/few_shot_examples_chat"},next:{title:"Template formats",permalink:"/langchain/docs/modules/model_io/prompts/prompt_templates/formats"}},s={},m=[],u=(i="CodeOutputBlock",function(t){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)});var i;const c={toc:m},g="wrapper";function d(t){let{components:e,...o}=t;return(0,n.kt)(g,(0,r.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"format-template-output"},"Format template output"),(0,n.kt)("p",null,"The output of the format method is available as a string, list of messages and ",(0,n.kt)("inlineCode",{parentName:"p"},"ChatPromptValue")),(0,n.kt)("p",null,"As string:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'output = chat_prompt.format(input_language="English", output_language="French", text="I love programming.")\noutput\n')),(0,n.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    'System: You are a helpful assistant that translates English to French.\\nHuman: I love programming.'\n"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'# or alternatively\noutput_2 = chat_prompt.format_prompt(input_language="English", output_language="French", text="I love programming.").to_string()\n\nassert output == output_2\n')),(0,n.kt)("p",null,"As list of Message objects:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'chat_prompt.format_prompt(input_language="English", output_language="French", text="I love programming.").to_messages()\n')),(0,n.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    [SystemMessage(content='You are a helpful assistant that translates English to French.', additional_kwargs={}),\n     HumanMessage(content='I love programming.', additional_kwargs={})]\n"))),(0,n.kt)("p",null,"As ",(0,n.kt)("inlineCode",{parentName:"p"},"ChatPromptValue"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'chat_prompt.format_prompt(input_language="English", output_language="French", text="I love programming.")\n')),(0,n.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    ChatPromptValue(messages=[SystemMessage(content='You are a helpful assistant that translates English to French.', additional_kwargs={}), HumanMessage(content='I love programming.', additional_kwargs={})])\n"))))}d.isMDXComponent=!0}}]);