"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5910],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(k,r(r({ref:t},s),{},{components:n})):a.createElement(k,r({ref:t},s))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},81613:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const o={},r="Wikipedia",l={unversionedId:"integrations/document_loaders/wikipedia",id:"integrations/document_loaders/wikipedia",title:"Wikipedia",description:"Wikipedia is a multilingual free online encyclopedia written and maintained by a community of volunteers, known as Wikipedians, through open collaboration and using a wiki-based editing system called MediaWiki. Wikipedia is the largest and most-read reference work in history.",source:"@site/docs/integrations/document_loaders/wikipedia.md",sourceDirName:"integrations/document_loaders",slug:"/integrations/document_loaders/wikipedia",permalink:"/langchain/docs/integrations/document_loaders/wikipedia",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"WhatsApp Chat",permalink:"/langchain/docs/integrations/document_loaders/whatsapp_chat"},next:{title:"XML",permalink:"/langchain/docs/integrations/document_loaders/xml"}},d={},p=[{value:"Installation",id:"installation",level:2},{value:"Examples",id:"examples",level:2}],s={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"wikipedia"},"Wikipedia"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://wikipedia.org/"},"Wikipedia")," is a multilingual free online encyclopedia written and maintained by a community of volunteers, known as Wikipedians, through open collaboration and using a wiki-based editing system called MediaWiki. ",(0,i.kt)("inlineCode",{parentName:"p"},"Wikipedia")," is the largest and most-read reference work in history.")),(0,i.kt)("p",null,"This notebook shows how to load wiki pages from ",(0,i.kt)("inlineCode",{parentName:"p"},"wikipedia.org")," into the Document format that we use downstream."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"First, you need to install ",(0,i.kt)("inlineCode",{parentName:"p"},"wikipedia")," python package."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install wikipedia\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"WikipediaLoader")," has these arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"query"),": free text which used to find documents in Wikipedia"),(0,i.kt)("li",{parentName:"ul"},"optional ",(0,i.kt)("inlineCode",{parentName:"li"},"lang"),': default="en". Use it to search in a specific language part of Wikipedia'),(0,i.kt)("li",{parentName:"ul"},"optional ",(0,i.kt)("inlineCode",{parentName:"li"},"load_max_docs"),": default=100. Use it to limit number of downloaded documents. It takes time to download all 100 documents, so use a small number for experiments. There is a hard limit of 300 for now."),(0,i.kt)("li",{parentName:"ul"},"optional ",(0,i.kt)("inlineCode",{parentName:"li"},"load_all_available_meta"),": default=False. By default only the most important fields downloaded: ",(0,i.kt)("inlineCode",{parentName:"li"},"Published")," (date when document was published/last updated), ",(0,i.kt)("inlineCode",{parentName:"li"},"title"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Summary"),". If True, other fields also downloaded.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "WikipediaLoader", "source": "langchain.document_loaders", "docs": "https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.wikipedia.WikipediaLoader.html", "title": "Wikipedia"}]--\x3e\nfrom langchain.document_loaders import WikipediaLoader\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'docs = WikipediaLoader(query="HUNTER X HUNTER", load_max_docs=2).load()\nlen(docs)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"docs[0].metadata  # meta-information of the Document\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"docs[0].page_content[:400]  # a content of the Document\n")))}u.isMDXComponent=!0}}]);