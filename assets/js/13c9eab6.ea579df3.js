"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[19913],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),u=d(n),p=i,m=u["".concat(s,".").concat(p)]||u[p]||l[p]||a;return n?r.createElement(m,o(o({ref:t},g),{},{components:n})):r.createElement(m,o({ref:t},g))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:i,o[1]=c;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},44035:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const a={},o="InstructEmbeddings",c={unversionedId:"integrations/text_embedding/instruct_embeddings",id:"integrations/text_embedding/instruct_embeddings",title:"InstructEmbeddings",description:"Let's load the HuggingFace instruct Embeddings class.",source:"@site/docs/integrations/text_embedding/instruct_embeddings.md",sourceDirName:"integrations/text_embedding",slug:"/integrations/text_embedding/instruct_embeddings",permalink:"/langchain/docs/integrations/text_embedding/instruct_embeddings",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Hugging Face",permalink:"/langchain/docs/integrations/text_embedding/huggingfacehub"},next:{title:"Jina",permalink:"/langchain/docs/integrations/text_embedding/jina"}},s={},d=[],g=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var u;const l={toc:d},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"instructembeddings"},"InstructEmbeddings"),(0,i.kt)("p",null,"Let's load the HuggingFace instruct Embeddings class."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\x3c!--IMPORTS:[{"imported": "HuggingFaceInstructEmbeddings", "source": "langchain.embeddings", "docs": "https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.huggingface.HuggingFaceInstructEmbeddings.html", "title": "InstructEmbeddings"}]--\x3e\nfrom langchain.embeddings import HuggingFaceInstructEmbeddings\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'embeddings = HuggingFaceInstructEmbeddings(\n    query_instruction="Represent the query for retrieval: "\n)\n')),(0,i.kt)(g,{lang:"python",mdxType:"CodeOutputBlock"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    load INSTRUCTOR_Transformer\n    max_seq_length  512\n"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'text = "This is a test document."\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"query_result = embeddings.embed_query(text)\n")))}m.isMDXComponent=!0}}]);